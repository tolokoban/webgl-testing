{"version":3,"sources":["gl/camera/perpective/perspective.world-point-to-screen.vert","gl/camera/perpective/perspective.world-vector-to-screen.vert","gl/factory/mesh/fresnel/main.vert","gl/factory/mesh/fresnel/main.frag","gl/factory/mesh/outline/main.vert","gl/factory/mesh/outline/main.frag","gl/pointer.ts","gl/async-loader.ts","gl/types.ts","gl/texture/texture.ts","gl/texture/image-texture.ts","gl/texture/cube-map-texture.ts","gl/assets-map.ts","gl/factory/texture/texture-factory.ts","gl/lookup-tables.ts","gl/program/uniform-setters.ts","gl/program/program.ts","gl/shader/abstract-shader.ts","gl/factory/shader/shader-factory.ts","gl/calc/calc.ts","gl/factory/program/program-factory.ts","gl/buffer/array-buffer.ts","gl/factory/buffer/buffer-factory.ts","gl/camera/abstract-camera.ts","gl/camera/space-3d.ts","gl/camera/perpective/perspective.ts","gl/scene/scene.ts","gl/resize.ts","gl/factory/mesh/mesh-definition.ts","gl/factory/mesh/common.ts","gl/mesh/mesh.ts","gl/mesh/fresnel/fresnel.ts","gl/factory/mesh/fresnel/fresnel-factory.ts","gl/mesh/outline/outline.ts","gl/factory/mesh/outline/outline-factory.ts","gl/factory/mesh/mesh-factory.ts","App/world-obj.ts","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Pointer","canvas","_x","_y","_down","_downTime","_eventDown","_eventUp","onMouseMove","evt","computeCoords","clientX","clientY","onTouchMove","te","touches","onMouseDown","onDown","onTouchStart","onMouseUp","onUp","onTouchEnd","this","window","addEventListener","x","y","Date","now","pointerX","pointerY","rect","getBoundingClientRect","left","top","w","width","h","height","loadImage","url","Promise","resolve","reject","img","Image","onload","onerror","console","error","src","loadJson","loadText","a","fetch","request","text","JSON","parse","IAttributeType","IUniformType","IVaryingType","Texture","gl","id","target","texture","units","createTexture","Error","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","unitIndex","length","activeTexture","bindTexture","ImageTexture","params","smoothness","linear","LINEAR","NEAREST","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","source","confirmDestroy","deleteTexture","CubeMapTexture","TEXTURE_CUBE_MAP_POSITIVE_X","sourcePosX","TEXTURE_CUBE_MAP_NEGATIVE_X","sourceNegX","TEXTURE_CUBE_MAP_POSITIVE_Y","sourcePosY","TEXTURE_CUBE_MAP_NEGATIVE_Y","sourceNegY","TEXTURE_CUBE_MAP_POSITIVE_Z","sourcePosZ","TEXTURE_CUBE_MAP_NEGATIVE_Z","sourceNegZ","WebGL2RenderingContext","TEXTURE_WRAP_R","generateMipmap","LINEAR_MIPMAP_LINEAR","AssetsMap","map","Map","has","item","get","count","value","set","delete","TextureFactory","imageTexturesMap","cubeMapTexturesMap","exists","AsyncLoader","remove","add","urlPattern","parts","split","join","imgPosX","imgNegX","imgPosY","imgNegY","imgPosZ","imgNegZ","getAttributeSize","type","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","getAttributeTypeCodeName","mapEnumAttributeTypeToStringType","getUniformTypeCodeName","mapEnumUniformTypeToStringType","getVaryingTypeCodeName","mapEnumVaryingTypeToStringType","getWebGLTypeFromAttributeType","FLOAT","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","BOOL","BYTE","SHORT","INT","UNSIGNED_SHORT","UNSIGNED_INT","SAMPLER_2D","SAMPLER_CUBE","UniformSetter","prg","uniformsDefinition","uniformSetters","attachProgram","name","setter","Object","keys","uniformName","getUniformLocation","uniformType","isArray","size","attachProgramInt","attachProgramFloat","attachProgramVec2","attachProgramVec3","attachProgramVec4","attachProgramMat2","attachProgramMat3","attachProgramMat4","displayWarningForNotFoundUniform","location","v","uniform1iv","uniform1i","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","warn","BPE","Float32Array","BYTES_PER_ELEMENT","Program","vertexShader","fragmentShader","attributes","buffer","bindBuffer","ARRAY_BUFFER","attrib","enableVertexAttribArray","vertexAttribPointer","normalization","totalSize","offset","detach","flatVertShader","flattenShaderDependencies","flatFragShader","varyings","flatVertShaderToCode","vertShaderCode","flatFragShaderToCode","fragShaderCode","vertShader","createVertexShader","fragShader","createFragementShader","createProgram","attachShader","linkProgram","prepareUniformsForFastBinding","uniforms","deleteProgram","attDef","attName","attType","getAttribLocation","LookupTables","push","useProgram","code","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMessage","getShaderInfoLog","info","result","lines","lineNumber","line","pad","writeLineNumbers","unshift","RX_ERROR_MESSAGE","lastIndex","matcher","exec","lineNumberMatch","Number","firstLine","Math","max","lastLine","min","outputLines","n","getCodeSection","uniCode","getUniformsSourceCode","attCode","getAttributesSourceCode","varCode","getVaryingsSourceCode","getFunctionsSourceCode","functions","codeForFunctions","typeEnum","arraySuffix","typeString","functionNames","functionName","pop","functionCodeUrlOrArray","Array","functionCode","shadersAlreadyLoaded","flattenedShader","attributesDefinition","functionsDefinition","varyingsDefinition","main","dependenciesDefinition","depShader","indexOf","depFlattenedShader","mergeAttributes","mergeUniforms","mergeVaryings","mergeFunctions","ex","constructor","oldFunctions","newFunctions","funName","oldFun","newFun","oldAttribs","newAttribs","oldAtt","newAtt","oldUniforms","newUniforms","uniName","oldUni","newUni","oldVarying","newVarying","varName","oldVar","newVar","num","len","txt","AbstractShader","def","CustomVertexShader","CustomFragmentShader","definition","convertFriendlyUniforms","convertFriendlyAttributes","convertFriendlyVaryings","dependencies","convertFriendlyVertexDependencies","convertFriendlyFragmentDependencies","dep","key","convertFriendlyUniform","uniform","stringType","convertFriendlyAttribute","attribute","convertFriendlyVarying","varying","ProgramFactory","programMap","program","ShaderFactory","attach","ArrayBuffer","data","bufferData","STATIC_DRAW","deleteBuffer","BufferFactory","arrayBufferMap","createBuffer","arrayBuffer","setData","AbstractCamera","COS","SIN","vec3tmp1","vec3tmp2","vec3tmp3","vec3tmp4","i","angle","PI","cos","sin","vector","areEqual","b","createVec3","createVec4","add3","output","substract3","cross3","dot3","xa","ya","za","length3","input","sqrt","normalize3","lenInv","orbital3","latitude","longitude","radius","length4","z","normalize4","transform4","mat","vec","out","matrix","createMat3","createMat4","identity3","extract3From4","mat4","mat3","extractX3From4","vec3","extractX4From4","vec4","extractY3From4","extractY4From4","extractZ3From4","extractZ4From4","lookAt4","pos","up","dir","right","orthogonalUp","normalizedUp","multiply3","identity4","multiply4","output00","output10","output20","output30","output01","output11","output21","output31","output02","output12","output22","output32","output03","output13","output23","output33","invert4","a00","a10","a20","a30","a01","a11","a21","a31","a02","a12","a22","a32","a03","a13","a23","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","invDet","abs","det","rotation4X","c","s","rotation4Y","rotation4Z","deg2rad","deg","rad2deg","rad","FULL_TURN","clamp","M4_00","M4_10","M4_20","M4_30","M4_01","M4_11","M4_21","M4_31","M4_02","M4_12","M4_22","M4_32","M4_03","M4_13","M4_23","M4_33","M3_00","M3_10","M3_20","M3_01","M3_11","M3_21","M3_02","M3_12","M3_22","Space3D","cameraMatrix","Calc","rotationY","rotationX","targetX","targetY","targetZ","distance","lat","lng","tX","tY","tZ","DEFAULT_FIELD_ANGLE_RAD","Perspective","perspectiveMatrix","cameraMatrix3","fieldAngle","near","far","orbit","f","tan","rangeInv","use","uniPerspectiveMatrix","uniCameraMatrix","uniCameraMatrix3","worldPointToScreen","PointVertexShaderCode","worldVectorToScreen","VectorVertexShaderCode","Scene","resolution","onAnimation","_gl","_pointer","_isRendering","lastRenderingTime","textures","buffers","programs","camera","PerspectiveCamera","render","time","requestAnimationFrame","_resolution","devicePixelRatio","HTMLCanvasElement","displayWidth","floor","clientWidth","displayHeight","clientHeight","viewport","Resize","clearDepth","clear","DEPTH_BUFFER_BIT","depthFunc","LESS","disable","DEPTH_TEST","drawingBufferWidth","drawingBufferHeight","pointer","reset","getContext","savedRendering","savedLastRenderingTime","MeshDefinition","verticesCount","texturesCount","normalsCount","facesCount","vertices","normals","faces","VALUES_PER_FACE_VERTEX","index","ensureIndexInRange","charAt","faceIdx","pointIdx","idx","upperLimit","MeshDefinitions","createOrGetFromCacheMeshDefinition","definitionURL","UP","Mesh","transfo","FresnelMesh","scene","colorTexture","attributesCount","enable","CULL_FACE","cullFace","BACK","setUniformValues","attachToUnit","bindAttribs","drawArrays","TRIANGLES","destroy","createAsync","colorTextureURL","Common","meshDef","createData","createArrayBuffer","createImageTextureAsync","createProgramAsync","uniObjectTransfo","attLocation","attUV","attNormal","varNormal","varReflexion","varUV","MainVertShader","uniTexture","MainFragShader","vertexIdx","getFaceVertex","getVertexX","getVertexY","getVertexZ","textureIdx","getFaceTexture","getTextureU","getTextureV","normalIdx","getFaceNormal","getNormalX","getNormalY","getNormalZ","OutlineMesh","color","thickness","r","g","FRONT","uniThickness","uniColor","Vertex","vertex","addNormal","normalX","normalY","normalZ","nx","ny","nz","Fresnel","Outline","MeshFactory","body","outline","WorldObj","paint","Slider","Tfw","View","App","state","refCanvas","React","createRef","current","car","island","dis","clearColor","COLOR_BUFFER_BIT","isRendering","classes","props","className","ref","label","step","onChange","setState","Component","Boolean","hostname","match","Theme","register","bg0","bg3","apply","Font","loadJosefin","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.899d17cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/perspective.world-point-to-screen.34658b6e.vert\";","module.exports = __webpack_public_path__ + \"static/media/perspective.world-vector-to-screen.79a1763d.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.a91ec25c.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.a27a283f.frag\";","module.exports = __webpack_public_path__ + \"static/media/main.d0ebbab8.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.cb7cba22.frag\";","const HALF = 0.5\nconst DOUBLE = 2\n\nexport default class Pointer {\n    private _x = 0\n    private _y = 0\n    private _down = false\n    // If 0, pointer is up.\n    private _downTime = 0\n    private _eventDown = false\n    private _eventUp = false\n    private readonly canvas: HTMLCanvasElement\n\n    /** @hidden */\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas\n        window.addEventListener('mousemove', this.onMouseMove, true)\n        window.addEventListener('touchmove', this.onTouchMove, true)\n        window.addEventListener('mousedown', this.onMouseDown, true)\n        window.addEventListener('touchstart', this.onTouchStart, true)\n        window.addEventListener('mouseup', this.onMouseUp, true)\n        window.addEventListener('touchend', this.onTouchEnd, true)\n    }\n\n    /** @hidden */\n    reset() {\n        this._eventDown = false\n        this._eventUp = false\n    }\n\n    get x() {\n        return this._x\n    }\n    get y() {\n        return this._y\n    }\n\n    /** Test if the pointer is touching the screen. */\n    get down() {\n        return this._down\n    }\n    /** `true` only if the pointer started touching the screen this very last frame. */\n    get eventUp() {\n        return this._eventUp\n    }\n    /** `true` only if the pointer stopped touching the screen this very last frame. */\n    get eventDown() {\n        return this._eventDown\n    }\n\n    private readonly onMouseMove = (evt: MouseEvent) => {\n        this.computeCoords(evt.clientX, evt.clientY)\n    }\n\n    private readonly onTouchMove = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.computeCoords(evt.clientX, evt.clientY)\n    }\n\n    private readonly onMouseDown = (evt: MouseEvent) => {\n        this.onDown(evt.clientX, evt.clientY)\n    }\n\n    private readonly onTouchStart = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.onDown(evt.clientX, evt.clientY)\n    }\n\n    private onDown(x: number, y: number) {\n        if (this._downTime !== 0) { return }\n        this.computeCoords(x, y)\n        this._down = true\n        this._eventDown = true\n        this._downTime = Date.now()\n    }\n\n    private readonly onMouseUp = (evt: MouseEvent) => {\n        this.onUp(evt.clientX, evt.clientY)\n    }\n\n    private readonly onTouchEnd = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.onUp(evt.clientX, evt.clientY)\n    }\n\n    private onUp(x: number, y: number) {\n        if (this._downTime === 0) { return }\n        this.computeCoords(x, y)\n        this._down = false\n        this._eventUp = true\n        this._downTime = 0\n    }\n\n    private computeCoords(pointerX: number, pointerY: number) {\n        const { canvas } = this\n        const rect = canvas.getBoundingClientRect()\n\n        const x = pointerX - rect.left\n        const y = pointerY - rect.top\n        const w = rect.width\n        const h = rect.height\n\n        this._x = DOUBLE * (x / w - HALF)\n        this._y = DOUBLE * (y / h - HALF)\n    }\n}\n","export default {\n    loadImage,\n    loadJson,\n    loadText\n}\n\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image()\n        img.onload = () => resolve(img)\n        img.onerror = () => {\n            console.error(\"Unable to load image from URL:\", url)\n            reject(url)\n        }\n        img.src = url\n    })\n}\n\n\nasync function loadText(url: string): Promise<string> {\n    try {\n        const request = await fetch(url)\n        const text = await request.text()\n        return text\n    } catch (ex) {\n        console.error(\"Unable to load text from URL:\", url)\n        console.error(ex)\n        throw ex\n    }\n}\n\n\nasync function loadJson(url: string): Promise<{ [key: string]: any }> {\n    const text = await loadText(url)\n    try {\n        return JSON.parse(text)\n    } catch (ex) {\n        console.error(\"Unable to parse JSON:\", url)\n        console.error(ex)\n        throw ex\n    }\n}\n","export enum IAttributeType {\n    //INT, BYTE, SHORT, UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT,\n    FLOAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4\n}\n\nexport enum IUniformType {\n    FLOAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4, FLOAT_MAT2, FLOAT_MAT3, FLOAT_MAT4,\n    BYTE, UNSIGNED_BYTE, SHORT, UNSIGNED_SHORT, INT, UNSIGNED_INT,\n    BOOL,\n    SAMPLER_2D, SAMPLER_CUBE\n}\n\nexport enum IVaryingType {\n    FLOAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4, FLOAT_MAT2, FLOAT_MAT3, FLOAT_MAT4\n}\n\nexport interface IAttributeTypes { [key: string]: IAttributeType }\n\nexport interface IFunctionTypes { [key: string]: string | string[] }\n\nexport interface IUniformTypes {\n    [key: string]: {\n        type: IUniformType,\n        size?: number\n    }\n}\n\nexport interface IVaryingTypes {\n    [key: string]: {\n        type: IVaryingType,\n        size?: number\n    }\n}\n\nexport type IUniformSetterNumber = (value: number) => void\nexport type IUniformSetterFloat32Array = (value: Float32Array) => void\nexport type IUniformSetterInt32Array = (value: Int32Array) => void\nexport type IUniformSetter = IUniformSetterNumber | IUniformSetterFloat32Array | IUniformSetterInt32Array\n\nexport type IWebGL = WebGLRenderingContext | WebGL2RenderingContext\n\nexport type IVec3 = Float32Array\nexport type IVec4 = Float32Array\nexport type IMat3 = Float32Array\nexport type IMat4 = Float32Array\n\nexport type IUniformStringType =\n    \"float\" | \"vec2\" | \"vec3\" | \"vec4\" | \"mat2\" | \"mat3\" | \"mat4\" | \"sampler2D\" | \"samplerCube\"\nexport type IAttributeStringType =\n    \"float\" | \"vec2\" | \"vec3\" | \"vec4\"\nexport type IVaryingStringType =\n    \"float\" | \"vec2\" | \"vec3\" | \"vec4\" | \"mat2\" | \"mat3\" | \"mat4\"\n\ninterface IMap<T> { [key: string]: T }\ntype IArray<T> = T | [T, number]\n\ninterface IFriendlyShaderDefinition {\n    uniforms: IMap<IArray<IUniformStringType>>\n    functions: IFunctionTypes\n}\n\nexport interface IFriendlyFragmentDefinition extends IFriendlyShaderDefinition {\n    dependencies: Array<Partial<IFriendlyFragmentDefinition>>\n}\n\nexport interface IFriendlyVertexDefinition extends IFriendlyShaderDefinition {\n    attributes: IMap<IAttributeStringType>\n    varyings: IMap<IArray<IVaryingStringType>>\n    dependencies: Array<Partial<IFriendlyVertexDefinition>>\n}\n","import { IWebGL } from '../types'\n\ntype ITarget = \"2d\" | \"cubeMap\" | \"3d\" | \"2dArray\"\n\nexport default abstract class Texture {\n    protected readonly texture: WebGLTexture\n    protected readonly target: GLenum\n    protected readonly units: GLenum[]\n\n    constructor(\n        protected readonly gl: IWebGL,\n        protected readonly id: string,\n        target: ITarget\n    ) {\n        const texture = gl.createTexture()\n        if (!texture) throw Error(`[FlatLand] Unable to create texture \"${id}\"!`)\n        this.texture = texture\n        switch (target) {\n            case \"2d\":\n                this.target = gl.TEXTURE_2D\n                break\n            case \"cubeMap\":\n                this.target = gl.TEXTURE_CUBE_MAP\n                break\n            /*\n            case \"3d\":\n                this.target = gl.TEXTURE_3D\n                break\n            case \"2dArray\":\n                this.target = gl.TEXTURE_2D_ARRAY\n                break\n            */\n            default:\n                throw Error(`[FlatLand.Texture] Unknow target \"${target}\"! Available targets are \"2d\", \"cubeMap\", \"3d\" and \"2dArray\".`)\n        }\n        this.units = [\n            gl.TEXTURE0,\n            gl.TEXTURE1,\n            gl.TEXTURE2,\n            gl.TEXTURE3,\n            gl.TEXTURE4,\n            gl.TEXTURE5,\n            gl.TEXTURE6,\n            gl.TEXTURE7,\n            gl.TEXTURE8,\n            gl.TEXTURE9,\n            gl.TEXTURE10,\n            gl.TEXTURE11,\n            gl.TEXTURE12,\n            gl.TEXTURE13,\n            gl.TEXTURE14,\n            gl.TEXTURE15\n        ]\n    }\n\n    /**\n     * Remove the texture from the graphic card memory\n     * as soon as no one is using it anymore.\n     */\n    abstract destroy(): boolean\n\n    /**\n     * Attach this texture to a unit.\n     * If you use only one unit, your texture must be attached to unit 0.\n     */\n    attachToUnit(unitIndex: number) {\n        const { gl, texture, target, units } = this\n        if (unitIndex < 0) throw Error(\"[FlatLand.Texture.attachToUnit] unitIndex must be positive!\")\n        if (unitIndex > units.length - 1) throw Error(`[FlatLand.Texture.attachToUnit] unitIndex must be lower than ${units.length}!`)\n        gl.activeTexture(units[unitIndex])\n        gl.bindTexture(target, texture)\n    }\n}\n","import Texture from './texture'\nimport { IWebGL } from '../types'\n\nexport interface IImageTextureParams {\n    id: string\n    gl: IWebGL\n    source: HTMLImageElement | HTMLCanvasElement\n    width: number\n    height: number\n    linear: boolean\n    confirmDestroy(): boolean\n}\n\nexport default class ImageTexture extends Texture {\n    constructor(private readonly params: IImageTextureParams) {\n        super(params.gl, params.id, \"2d\")\n\n        const { gl } = params\n        const smoothness = params.linear ? gl.LINEAR : gl.NEAREST\n        gl.bindTexture(gl.TEXTURE_2D, this.texture)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, smoothness)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, smoothness)\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, params.source)\n    }\n\n    get width() { return this.params.width }\n    get height() { return this.params.height }\n\n    update(source: HTMLImageElement | HTMLCanvasElement) {\n        const { gl } = this.params\n        gl.bindTexture(gl.TEXTURE_2D, this.texture)\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source)\n    }\n\n    /**\n     * When a client doen't need this texture anymore,\n     * it calls `destroy()` on it.\n     * The texture will be destroyed if this is the last client using it.\n     */\n    destroy() {\n        if (!this.params.confirmDestroy()) return false\n        this.params.gl.deleteTexture(this.texture)\n        return true\n    }\n}\n","import Texture from './texture'\n\nexport interface ICubeMapTextureParams {\n    id: string,\n    gl: WebGL2RenderingContext | WebGLRenderingContext,\n    sourcePosX: HTMLImageElement | HTMLCanvasElement,\n    sourceNegX: HTMLImageElement | HTMLCanvasElement,\n    sourcePosY: HTMLImageElement | HTMLCanvasElement,\n    sourceNegY: HTMLImageElement | HTMLCanvasElement,\n    sourcePosZ: HTMLImageElement | HTMLCanvasElement,\n    sourceNegZ: HTMLImageElement | HTMLCanvasElement,\n    confirmDestroy(): boolean\n}\n\nexport default class CubeMapTexture extends Texture {\n    constructor(private params: ICubeMapTextureParams) {\n        super(params.gl, params.id, \"cubeMap\")\n\n        const { gl } = params\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture)\n\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourcePosX)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourceNegX)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourcePosY)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourceNegY)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourcePosZ)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourceNegZ)\n\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n        if (gl instanceof WebGL2RenderingContext) {\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE)\n        }\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP)\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n    }\n\n    /**\n     * When a client doen't need this texture anymore,\n     * it calls `destroy()` on it.\n     * The texture will be destroyed if this is the last client using it.\n     */\n    destroy() {\n        if (!this.params.confirmDestroy()) return false\n        this.params.gl.deleteTexture(this.texture)\n        return true\n    }\n\n}\n","export default class AssetsMap<T> {\n    private map = new Map<string, { count: number, value: T }>()\n\n    /**\n     * Warning!\n     * If this function returns true,\n     * it also increments the link counter on the found item.\n     */\n    exists(id: string): boolean {\n        const { map } = this\n        if (map.has(id)) {\n            const item = map.get(id)\n            if (item) item.count++\n            return true\n        }\n        return false\n    }\n\n    get(id: string): T | undefined {\n        const item = this.map.get(id)\n        if (!item) return\n        return item.value\n    }\n\n    /**\n     * Warning!\n     * If an item with the same id already exists,\n     * this functioin will throw an exception.\n     */\n    add(id: string, value: T) {\n        const item = this.map.get(id)\n        if (!item) {\n            this.map.set(id, { count: 1, value })\n        } else {\n            throw Error(`An item with id \"${id}\" already exists!`)\n        }\n    }\n\n    /**\n     * Remove an item from the map and return -1 if this item does not exist.\n     * Otherwise, it will return the number of links still attached to this item.\n     * 0 means that no one is using this item anymore and cleanup can be performed.\n     */\n    remove(id: string): number {\n        const item = this.map.get(id)\n        if (!item) return -1\n        item.count--\n        if (item.count <= 0) {\n            this.map.delete(id)\n        }\n        return item.count\n    }\n}\n","import AsyncLoader from '../../async-loader'\nimport ImageTexture from '../../texture/image-texture'\nimport CubeMapTexture from '../../texture/cube-map-texture'\nimport AssetsMap from '../../assets-map'\nimport { IWebGL } from '../../types'\n\ninterface IImageTextureParams {\n    url: string\n    linear: boolean\n}\n\nexport default class TextureFactory {\n    private imageTexturesMap = new AssetsMap<ImageTexture>()\n    private cubeMapTexturesMap = new AssetsMap<CubeMapTexture>()\n\n    constructor(private gl: IWebGL) { }\n\n    async createImageTextureAsync(params: IImageTextureParams): Promise<ImageTexture> {\n        const { gl, imageTexturesMap } = this\n        const { url, linear } = params\n\n        if (!imageTexturesMap.exists(url)) {\n            const img = await AsyncLoader.loadImage(url)\n            const texture = new ImageTexture({\n                id: url,\n                gl,\n                source: img,\n                width: img.width,\n                height: img.height,\n                linear,\n                confirmDestroy: () => this.imageTexturesMap.remove(url) === 0\n            })\n            imageTexturesMap.add(url, texture)\n        }\n        return imageTexturesMap.get(url) as ImageTexture\n    }\n\n    /**\n     * The pattern is used to load 6 images:\n     * posX (1), negX (2), posY (3), negY (4), posZ (5) and negZ (6).\n     *\n     * The image index (1 to 6) will replace the question mark in the pattern.\n     * Example:\n     * createCubeMapTextureAsync(\"texture-000?.png\")\n     */\n    async createCubeMapTextureAsync(urlPattern: string): Promise<CubeMapTexture> {\n        const { gl, cubeMapTexturesMap } = this\n\n        if (!cubeMapTexturesMap.exists(urlPattern)) {\n            const parts = urlPattern.split('?')\n            const imgPosX = await AsyncLoader.loadImage(parts.join(\"1\"))\n            const imgNegX = await AsyncLoader.loadImage(parts.join(\"2\"))\n            const imgPosY = await AsyncLoader.loadImage(parts.join(\"3\"))\n            const imgNegY = await AsyncLoader.loadImage(parts.join(\"4\"))\n            const imgPosZ = await AsyncLoader.loadImage(parts.join(\"5\"))\n            const imgNegZ = await AsyncLoader.loadImage(parts.join(\"6\"))\n            const texture = new CubeMapTexture({\n                gl,\n                id: urlPattern,\n                sourcePosX: imgPosX,\n                sourceNegX: imgNegX,\n                sourcePosY: imgPosY,\n                sourceNegY: imgNegY,\n                sourcePosZ: imgPosZ,\n                sourceNegZ: imgNegZ,\n                confirmDestroy: () => this.cubeMapTexturesMap.remove(urlPattern) === 0\n            })\n            cubeMapTexturesMap.add(urlPattern, texture)\n        }\n        return cubeMapTexturesMap.get(urlPattern) as CubeMapTexture\n    }\n}\n","import {\n    IWebGL,\n    IAttributeType,\n    IVaryingType,\n    IUniformType\n} from './types'\n\nexport default {\n    getAttributeSize,\n    getAttributeTypeCodeName,\n    getUniformTypeCodeName,\n    getVaryingTypeCodeName,\n    getWebGLTypeFromAttributeType\n}\n\nfunction getWebGLTypeFromAttributeType(gl: IWebGL, type: IAttributeType): number {\n    switch (type) {\n        case IAttributeType.FLOAT_VEC2: return gl.FLOAT_VEC2\n        case IAttributeType.FLOAT_VEC3: return gl.FLOAT_VEC3\n        case IAttributeType.FLOAT_VEC4: return gl.FLOAT_VEC4\n        default: return gl.FLOAT\n    }\n}\n\nfunction getAttributeTypeCodeName(type: IAttributeType): string | undefined {\n    return mapEnumAttributeTypeToStringType.get(type)\n}\n\nfunction getUniformTypeCodeName(type: IUniformType): string | undefined {\n    return mapEnumUniformTypeToStringType.get(type)\n}\n\nfunction getVaryingTypeCodeName(type: IVaryingType): string | undefined {\n    return mapEnumVaryingTypeToStringType.get(type)\n}\n\nfunction getAttributeSize(type: IAttributeType): number {\n    switch (type) {\n        case IAttributeType.FLOAT_VEC2: return 2\n        case IAttributeType.FLOAT_VEC3: return 3\n        case IAttributeType.FLOAT_VEC4: return 4\n        default: return 1\n    }\n}\n\n\nconst mapEnumAttributeTypeToStringType = new Map<IAttributeType, string>()\n\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT, \"float\")\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT_VEC2, \"vec2\")\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT_VEC3, \"vec3\")\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT_VEC4, \"vec4\")\n\nconst mapEnumVaryingTypeToStringType = new Map<IVaryingType, string>()\n\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT, \"float\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_VEC2, \"vec2\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_VEC3, \"vec3\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_VEC4, \"vec4\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_MAT2, \"mat2\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_MAT3, \"mat3\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_MAT4, \"mat4\")\n\nconst mapEnumUniformTypeToStringType = new Map<IUniformType, string>()\n\nmapEnumUniformTypeToStringType.set(IUniformType.BOOL, \"bool\")\nmapEnumUniformTypeToStringType.set(IUniformType.BYTE, \"int\")\nmapEnumUniformTypeToStringType.set(IUniformType.SHORT, \"int\")\nmapEnumUniformTypeToStringType.set(IUniformType.INT, \"int\")\nmapEnumUniformTypeToStringType.set(IUniformType.UNSIGNED_BYTE, \"uint\")\nmapEnumUniformTypeToStringType.set(IUniformType.UNSIGNED_SHORT, \"uint\")\nmapEnumUniformTypeToStringType.set(IUniformType.UNSIGNED_INT, \"uint\")\nmapEnumUniformTypeToStringType.set(IUniformType.SAMPLER_2D, \"sampler2D\")\nmapEnumUniformTypeToStringType.set(IUniformType.SAMPLER_CUBE, \"samplerCube\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT, \"float\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_VEC2, \"vec2\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_VEC3, \"vec3\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_VEC4, \"vec4\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_MAT2, \"mat2\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_MAT3, \"mat3\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_MAT4, \"mat4\")\n","import {\n    IUniformSetter,\n    IUniformTypes,\n    IUniformType,\n    IWebGL\n} from '../types'\n\nexport default class UniformSetter {\n    private uniformSetters = new Map<string, IUniformSetter>()\n\n    constructor(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        private uniformsDefinition: IUniformTypes\n    ) {\n        this.attachProgram(gl, prg)\n    }\n\n    set(name: string, value: number | Float32Array | Int32Array) {\n        const setter = this.uniformSetters.get(name)\n        if (!setter) return\n        setter(value as any)\n    }\n\n    exists(name: string): boolean {\n        return this.uniformSetters.has(name)\n    }\n\n    private attachProgram(gl: IWebGL, prg: WebGLProgram) {\n        for (const uniformName of Object.keys(this.uniformsDefinition)) {\n            const location: WebGLUniformLocation | null =\n                gl.getUniformLocation(prg, uniformName)\n            if (!location) {\n                displayWarningForNotFoundUniform(uniformName)\n                continue\n            }\n\n            const uniformType = this.uniformsDefinition[uniformName]\n            const isArray = uniformType.size && uniformType.size > 1 ? true : false\n\n            switch (uniformType.type) {\n                case IUniformType.BYTE:\n                case IUniformType.UNSIGNED_BYTE:\n                case IUniformType.SHORT:\n                case IUniformType.UNSIGNED_SHORT:\n                case IUniformType.INT:\n                case IUniformType.UNSIGNED_INT:\n                case IUniformType.SAMPLER_2D: // For 2D textures, we specify the texture unit.\n                case IUniformType.SAMPLER_CUBE: // For CubeMap textures, we specify the texture unit.\n                    this.attachProgramInt(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT:\n                    this.attachProgramFloat(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_VEC2:\n                    this.attachProgramVec2(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_VEC3:\n                    this.attachProgramVec3(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_VEC4:\n                    this.attachProgramVec4(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_MAT2:\n                    this.attachProgramMat2(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_MAT3:\n                    this.attachProgramMat3(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_MAT4:\n                    this.attachProgramMat4(gl, prg, uniformName, isArray)\n                    break\n                default:\n                    throw Error(`[AbstractShader.attachProgram] Unknown type for uniform \"${uniformName}\": ${uniformType.type}[${uniformType.size || 1}]!`)\n            }\n        }\n    }\n\n    private attachProgramInt(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            isArray ?\n                (v: Int32Array) => gl.uniform1iv(location, v) :\n                (v: number) => gl.uniform1i(location, v)\n        )\n    }\n\n    private attachProgramFloat(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            isArray ?\n                (v: Float32Array) => gl.uniform1fv(location, v) :\n                (v: number) => gl.uniform1f(location, v)\n        )\n    }\n\n    private attachProgramVec2(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of vec2!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniform2fv(location, v)\n        )\n    }\n\n    private attachProgramVec3(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of vec3!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniform3fv(location, v)\n        )\n    }\n\n    private attachProgramVec4(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of vec4!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniform4fv(location, v)\n        )\n    }\n\n    private attachProgramMat2(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of mat2!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniformMatrix2fv(location, false, v)\n        )\n    }\n\n    private attachProgramMat3(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of mat3!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniformMatrix3fv(location, false, v)\n        )\n    }\n\n    private attachProgramMat4(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of mat4!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniformMatrix4fv(location, false, v)\n        )\n    }\n}\n\nfunction displayWarningForNotFoundUniform(uniformName: string) {\n    console.warn(`Uniform \"${uniformName}\" has not been compiled in this program!`)\n    console.warn(\"Shader compilation removes everything that is not used by the code.\")\n}\n","import Shader from '../shader/abstract-shader'\nimport AsyncLoader from '../async-loader'\nimport LookupTables from '../lookup-tables'\nimport UniformSetter from './uniform-setters'\n\nimport {\n    IAttributeTypes,\n    IVaryingTypes,\n    IUniformTypes,\n    IFunctionTypes,\n    IWebGL\n} from '../types'\n\n\nconst BPE = Float32Array.BYTES_PER_ELEMENT\n\ninterface IWebGLAttribute {\n    location: number\n    size: number\n    type: number\n    normalization: boolean\n    totalSize: number\n    offset: number\n}\n\nexport default class Program {\n    private prg?: WebGLProgram\n    public readonly vertexShader: Shader\n    public readonly fragmentShader: Shader\n    // Attributes ready for binding.\n    private attributes: IWebGLAttribute[] = []\n    private uniformSetters?: UniformSetter\n\n    constructor(\n        private gl: IWebGL,\n        vertexShader: Shader,\n        fragmentShader: Shader\n    ) {\n        this.vertexShader = vertexShader\n        this.fragmentShader = fragmentShader\n    }\n\n    bindAttribs(buffer: WebGLBuffer) {\n        const { gl, prg, attributes } = this\n        if (!prg) throw Error(\"This program has not been attached yet!\")\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n        for (const attrib of attributes) {\n            gl.enableVertexAttribArray(attrib.location)\n            gl.vertexAttribPointer(\n                attrib.location,\n                attrib.size,\n                gl.FLOAT,\n                attrib.normalization, // No normalisation.\n                attrib.totalSize,\n                attrib.offset\n            )\n        }\n    }\n\n    async attach() {\n        if (this.prg) this.detach()\n\n        const flatVertShader = flattenShaderDependencies(this.vertexShader)\n        const flatFragShader = flattenShaderDependencies(this.fragmentShader)\n\n        // No attributes in fragment shaders.\n        flatFragShader.attributes = {}\n        // Varying must reflect those of vertex shader.\n        flatFragShader.varyings = {\n            ...flatVertShader.varyings,\n            ...flatFragShader.varyings\n        }\n\n        const vertShaderCode = await flatVertShaderToCode(flatVertShader)\n        const fragShaderCode = await flatFragShaderToCode(flatFragShader)\n\n        const { gl } = this\n        const vertShader = createVertexShader(gl, vertShaderCode)\n        const fragShader = createFragementShader(gl, fragShaderCode)\n\n        const prg = gl.createProgram()\n        if (!prg) throw Error(\"Unable to create a new WebGLProgram!\")\n        this.prg = prg\n\n        gl.attachShader(prg, vertShader)\n        gl.attachShader(prg, fragShader)\n        gl.linkProgram(prg)\n\n        this.prepareUniformsForFastBinding(flatVertShader.attributes)\n        this.uniformSetters = new UniformSetter(\n            this.gl, this.prg, {\n                ...flatVertShader.uniforms,\n                ...flatFragShader.uniforms\n            }\n        )\n    }\n\n    get uniforms(): UniformSetter {\n        const { uniformSetters } = this\n        if (!uniformSetters) {\n            throw Error(\n                \"Can't get uniforms because the program has not been attached yet!\\nprg.attach()\"\n            )\n        }\n        return uniformSetters\n    }\n\n    detach() {\n        const { prg, gl } = this\n        if (!prg) return\n        gl.deleteProgram(prg)\n        delete this.prg\n    }\n\n    private prepareUniformsForFastBinding(attDef: IAttributeTypes) {\n        const { gl, prg } = this\n        if (!prg) throw Error(\"This program has not been attached yet!\")\n\n        const attributes: IWebGLAttribute[] = []\n        let offset = 0\n        for (const attName of Object.keys(attDef)) {\n            const attType = attDef[attName]\n            const location = gl.getAttribLocation(prg, attName)\n            const attrib: IWebGLAttribute = {\n                location,\n                offset,\n                normalization: false,\n                size: LookupTables.getAttributeSize(attType),\n                totalSize: 0,\n                type: LookupTables.getWebGLTypeFromAttributeType(gl, attType)\n            }\n            attributes.push(attrib)\n            offset += attrib.size * BPE\n        }\n\n        const totalSize = offset\n        for (const attrib of attributes) {\n            attrib.totalSize = totalSize\n        }\n\n        this.attributes = attributes\n    }\n\n    use() {\n        const { prg, gl } = this\n        if (!prg) throw Error(\"This program has not been attached yet!\")\n        gl.useProgram(prg)\n    }\n}\n\nfunction createVertexShader(gl: IWebGL, code: string) {\n    return createShader(gl.VERTEX_SHADER, gl, code)\n}\n\nfunction createFragementShader(gl: IWebGL, code: string) {\n    return createShader(gl.FRAGMENT_SHADER, gl, code)\n}\n\nfunction createShader(type: number, gl: IWebGL, code: string): WebGLShader {\n    if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\n        throw Error('Type must be VERTEX_SHADER or FRAGMENT_SHADER!')\n    }\n    const shader = gl.createShader(type)\n    if (!shader) {\n        throw Error(\n            `Unable to create a ${type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT'} shader!`\n        )\n    }\n    gl.shaderSource(shader, code)\n    gl.compileShader(shader)\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        const errorMessage: string = gl.getShaderInfoLog(shader) || \"NULL\"\n        console.error(`An error occurred compiling the shader with the following code:`)\n        // tslint:disable-next-line:no-console\n        console.info(writeLineNumbers(code))\n        // tslint:disable-next-line:no-console\n        console.error(`Here is the error: ${errorMessage}`)\n        // tslint:disable-next-line:no-console\n        console.info(getCodeSection(code, errorMessage))\n        // tslint:disable-next-line:no-console\n        throw Error(\n            `Unable to create a ${type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT'} shader!`\n        )\n    }\n\n    return shader\n}\n\nasync function flatVertShaderToCode(shader: IFlattenedShader): Promise<string> {\n    const code: string[] = []\n    const uniCode = getUniformsSourceCode(shader.uniforms)\n    if (uniCode) code.push(uniCode)\n    const attCode = getAttributesSourceCode(shader.attributes)\n    if (attCode) code.push(attCode)\n    const varCode = getVaryingsSourceCode(shader.varyings)\n    if (varCode) code.push(varCode)\n\n    const codeForFunctions = await getFunctionsSourceCode(shader.functions)\n    code.push(codeForFunctions)\n\n    return code.join(\"\\n\")\n}\n\nasync function flatFragShaderToCode(shader: IFlattenedShader): Promise<string> {\n    const code: string[] = [\n        \"precision mediump float;\"\n    ]\n    const uniCode = getUniformsSourceCode(shader.uniforms)\n    if (uniCode) code.push(uniCode)\n    const varCode = getVaryingsSourceCode(shader.varyings)\n    if (varCode) code.push(varCode)\n\n    const codeForFunctions = await getFunctionsSourceCode(shader.functions)\n    code.push(codeForFunctions)\n\n    return code.join(\"\\n\")\n}\n\nfunction getUniformsSourceCode(uniforms: IUniformTypes) {\n    return Object.keys(uniforms)\n        .map(name => {\n            const typeEnum = uniforms[name]\n            const type = LookupTables.getUniformTypeCodeName(typeEnum.type)\n            if (!type) {\n                throw Error(`Unknown type for uniform \"${name}\": ${typeEnum}!`)\n            }\n            const arraySuffix =\n                (typeEnum.size || 0) > 1 ?\n                    `[${typeEnum.size}]` : \"\"\n            return `uniform ${type} ${name}${arraySuffix};`\n        })\n        .join(\"\\n\")\n}\n\nfunction getVaryingsSourceCode(varyings: IVaryingTypes) {\n    return Object.keys(varyings)\n        .map(name => {\n            const typeEnum = varyings[name]\n            const type = LookupTables.getVaryingTypeCodeName(typeEnum.type)\n            if (!type) {\n                throw Error(`Unknown type for varying \"${name}\": ${typeEnum}!`)\n            }\n            const arraySuffix =\n                (typeEnum.size || 0) > 1 ?\n                    `[${typeEnum.size}]` : \"\"\n            return `varying ${type} ${name}${arraySuffix};`\n        })\n        .join(\"\\n\")\n}\n\nfunction getAttributesSourceCode(attributes: IAttributeTypes) {\n    return Object.keys(attributes)\n        .map(name => {\n            const typeEnum = attributes[name]\n            const typeString = LookupTables.getAttributeTypeCodeName(typeEnum)\n            if (!typeString) {\n                throw Error(`Unknown type for attribute \"${name}\": ${typeEnum}!`)\n            }\n            return `attribute ${typeString} ${name};`\n        })\n        .join(\"\\n\")\n}\n\nasync function getFunctionsSourceCode(functions: IFunctionTypes): Promise<string> {\n    const code: string[] = []\n    const functionNames = Object.keys(functions)\n\n    // Take the functions in reverve order because the dependencies\n    // must be declared first.\n    while (functionNames.length > 0) {\n        const functionName = functionNames.pop()\n        if (!functionName) break\n        const functionCodeUrlOrArray = functions[functionName]\n        if (Array.isArray(functionCodeUrlOrArray)) {\n            code.push(...functionCodeUrlOrArray)\n        } else {\n            const functionCode = await AsyncLoader.loadText(functionCodeUrlOrArray)\n            code.push(functionCode)\n        }\n    }\n\n    return code.join(\"\\n\")\n}\n\nconst RX_ERROR_MESSAGE = /ERROR: ([0-9]+):([0-9]+):/g\n\n/**\n * Return a portion of the code that is two lines before the error and two lines after.\n */\nfunction getCodeSection(code: string, errorMessage: string) {\n    const lines = code.split(/\\n\\r?/)\n    lines.unshift(\"\")  // Because lines numbers start at 1\n    RX_ERROR_MESSAGE.lastIndex = -1  // Reinit RegExp\n    const matcher = RX_ERROR_MESSAGE.exec(errorMessage)\n    if (!matcher) {\n        return code\n    }\n    const SURROUNDING_LINES = 2\n    const [, , lineNumberMatch] = matcher\n    const lineNumber = Number(lineNumberMatch)\n    const firstLine = Math.max(1, lineNumber - SURROUNDING_LINES)\n    const lastLine = Math.min(lines.length - 1, lineNumber + SURROUNDING_LINES)\n    const outputLines = [\"Here is an extract of the shader code:\"]\n    for (let n = firstLine; n <= lastLine; n++) {\n        outputLines.push(\n            `| ${n}:    ${lines[n]}`\n        )\n    }\n    return outputLines.join(\"\\n\")\n}\n\n/**\n * A shader can have dependencies.\n * The final shader code will be an aggregate of it's own code and of the\n * the code of all its dependencies.\n * Checks will be done to prevent declaration of same variables with\n * different types.\n */\nfunction flattenShaderDependencies(\n    shader: Shader,\n    shadersAlreadyLoaded: Shader[] = []\n): IFlattenedShader {\n    try {\n        const flattenedShader: IFlattenedShader = {\n            attributes: { ...shader.attributesDefinition },\n            functions: { ...shader.functionsDefinition },\n            uniforms: { ...shader.uniformsDefinition },\n            varyings: { ...shader.varyingsDefinition }\n        }\n\n        if (shadersAlreadyLoaded.length === 0 && typeof flattenedShader.functions.main === 'undefined') {\n            throw Error(\"A shader must have a 'void main()' function!\")\n        }\n        shadersAlreadyLoaded.push(shader)\n\n        for (const depShader of shader.dependenciesDefinition) {\n            // Skip already included shaders.\n            if (shadersAlreadyLoaded.indexOf(depShader) !== -1) continue\n\n            const depFlattenedShader: IFlattenedShader = {\n                attributes: { ...depShader.attributesDefinition },\n                functions: { ...depShader.functionsDefinition },\n                uniforms: { ...depShader.uniformsDefinition },\n                varyings: { ...depShader.varyingsDefinition }\n            }\n            // Remove potential main function because it has no sense for dependencies.\n            delete depFlattenedShader.functions.main\n\n            // Merge with current shader.\n            mergeAttributes(flattenedShader.attributes, depFlattenedShader.attributes)\n            mergeUniforms(flattenedShader.uniforms, depFlattenedShader.uniforms)\n            mergeVaryings(flattenedShader.varyings, depFlattenedShader.varyings)\n            mergeFunctions(flattenedShader.functions, depFlattenedShader.functions)\n        }\n\n        return flattenedShader\n    } catch (ex) {\n        throw Error(`Error in ${shader.constructor.name}:\\n${ex}`)\n    }\n}\n\n/**\n * We just ignore functions that have already been declared.\n * We don't check if the code is different.\n */\nfunction mergeFunctions(oldFunctions: IFunctionTypes, newFunctions: IFunctionTypes) {\n    for (const funName of Object.keys(newFunctions)) {\n        const oldFun = oldFunctions[funName]\n        const newFun = newFunctions[funName]\n        if (!oldFun) {\n            // Brand new attribute.\n            oldFunctions[funName] = newFun\n        }\n    }\n}\n\nfunction mergeAttributes(oldAttribs: IAttributeTypes, newAttribs: IAttributeTypes) {\n    for (const attName of Object.keys(newAttribs)) {\n        const oldAtt = oldAttribs[attName]\n        const newAtt = newAttribs[attName]\n        if (!oldAtt) {\n            // Brand new attribute.\n            oldAttribs[attName] = newAtt\n        } else {\n            // This attributes already exists.\n            // Check if the types are the same.\n            if (oldAtt !== newAtt) {\n                throw Error(`Attribute \"${attName}\" is redeclared in a dependency, but with a different type!`)\n            }\n        }\n    }\n}\n\nfunction mergeUniforms(oldUniforms: IUniformTypes, newUniforms: IUniformTypes) {\n    for (const uniName of Object.keys(newUniforms)) {\n        const oldUni = oldUniforms[uniName]\n        const newUni = newUniforms[uniName]\n        if (!oldUni) {\n            // Brand new uniform.\n            oldUniforms[uniName] = newUni\n        } else {\n            // This attributes already exists.\n            // Check if the types are the same.\n            if (oldUni.type !== newUni.type) {\n                throw Error(`Uniform \"${uniName}\" is redeclared in a dependency, but with a different type!`)\n            }\n            if ((oldUni.size || 1) !== (newUni.size || 1)) {\n                throw Error(`Uniform \"${uniName}[]\" is redeclared in a dependency, but with a different number of items!`)\n            }\n        }\n    }\n}\n\nfunction mergeVaryings(oldVarying: IVaryingTypes, newVarying: IVaryingTypes) {\n    for (const varName of Object.keys(newVarying)) {\n        const oldVar = oldVarying[varName]\n        const newVar = newVarying[varName]\n        if (!oldVar) {\n            // Brand new varying.\n            oldVarying[varName] = newVar\n        } else {\n            // This attributes already exists.\n            // Check if the types are the same.\n            if (oldVar.type !== newVar.type) {\n                throw Error(`Varying \"${varName}\" is redeclared in a dependency, but with a different type!`)\n            }\n            if ((oldVar.size || 1) !== (newVar.size || 1)) {\n                throw Error(`Varying \"${varName}[]\" is redeclared in a dependency, but with a different number of items!`)\n            }\n        }\n    }\n}\n\nfunction writeLineNumbers(code: string) {\n    const result: string[] = []\n    const lines = code.split(\"\\n\")\n    let lineNumber = 0\n    for (const line of lines) {\n        lineNumber++\n        result.push(`${pad(lineNumber)} | ${line}`)\n    }\n\n    return result.join(\"\\n\")\n}\n\nfunction pad(num: number, len: number = 3) {\n    let txt = `${num}`\n    while (txt.length < len) txt = ` ${txt}`\n    return txt\n}\n\ninterface IFlattenedShader {\n    attributes: IAttributeTypes\n    functions: IFunctionTypes\n    uniforms: IUniformTypes\n    varyings: IVaryingTypes\n}\n","import {\n    IFunctionTypes,\n    IAttributeTypes,\n    IVaryingTypes,\n    IUniformType, IUniformTypes,\n    IUniformSetter,\n    IWebGL\n} from '../types'\n\nexport default abstract class AbstractShader {\n    abstract get uniformsDefinition(): IUniformTypes\n    abstract get attributesDefinition(): IAttributeTypes\n    abstract get varyingsDefinition(): IVaryingTypes\n    abstract get functionsDefinition(): IFunctionTypes\n    abstract get dependenciesDefinition(): AbstractShader[]\n}\n","import AbstractShader from '../../shader/abstract-shader'\nimport {\n    IAttributeType,\n    IAttributeTypes,\n    IVaryingType,\n    IVaryingTypes,\n    IUniformType,\n    IUniformTypes,\n    IFunctionTypes,\n    IFriendlyVertexDefinition,\n    IFriendlyFragmentDefinition,\n    IUniformStringType,\n    IAttributeStringType,\n    IVaryingStringType\n} from '../../types'\n\nexport default {\n    createVertShader: (def: Partial<IFriendlyVertexDefinition>) =>\n        new CustomVertexShader(def),\n    createFragShader: (def: Partial<IFriendlyFragmentDefinition>) =>\n        new CustomFragmentShader(def)\n}\n\n\nclass CustomVertexShader extends AbstractShader {\n    private readonly definition: IDefinition\n\n    constructor(def: Partial<IFriendlyVertexDefinition>) {\n        super()\n        this.definition = {\n            uniforms: convertFriendlyUniforms(def.uniforms),\n            attributes: convertFriendlyAttributes(def.attributes),\n            varyings: convertFriendlyVaryings(def.varyings),\n            functions: def.functions || {},\n            dependencies: convertFriendlyVertexDependencies(def.dependencies)\n        }\n    }\n\n    get uniformsDefinition() { return this.definition.uniforms }\n    get attributesDefinition() { return this.definition.attributes }\n    get varyingsDefinition() { return this.definition.varyings }\n    get functionsDefinition() { return this.definition.functions }\n    get dependenciesDefinition() { return this.definition.dependencies }\n}\n\n\nclass CustomFragmentShader extends AbstractShader {\n    private readonly definition: IDefinition\n\n    constructor(def: Partial<IFriendlyFragmentDefinition>) {\n        super()\n        this.definition = {\n            uniforms: convertFriendlyUniforms(def.uniforms),\n            attributes: {},\n            varyings: {},\n            functions: def.functions || {},\n            dependencies: convertFriendlyFragmentDependencies(def.dependencies)\n        }\n    }\n\n    get uniformsDefinition() { return this.definition.uniforms }\n    get attributesDefinition() { return this.definition.attributes }\n    get varyingsDefinition() { return this.definition.varyings }\n    get functionsDefinition() { return this.definition.functions }\n    get dependenciesDefinition() { return this.definition.dependencies }\n}\n\n\nfunction convertFriendlyVertexDependencies(dependencies?: Array<Partial<IFriendlyVertexDefinition>>) {\n    if (!Array.isArray(dependencies)) return []\n    return dependencies.map(\n        (dep: Partial<IFriendlyVertexDefinition>) =>\n            new CustomVertexShader(dep)\n    )\n}\n\nfunction convertFriendlyFragmentDependencies(dependencies?: Array<Partial<IFriendlyFragmentDefinition>>) {\n    if (!Array.isArray(dependencies)) return []\n    return dependencies.map(\n        (dep: Partial<IFriendlyFragmentDefinition>) =>\n            new CustomFragmentShader(dep)\n    )\n}\n\nfunction convertFriendlyUniforms(uniforms?: IMap<IArray<IUniformStringType>>): IUniformTypes {\n    if (!uniforms) return {}\n\n    const result: IUniformTypes = {}\n    for (const key of Object.keys(uniforms)) {\n        result[key] = convertFriendlyUniform(uniforms[key])\n    }\n    return result\n}\n\nfunction convertFriendlyUniform(uniform: IArray<IUniformStringType>): { type: IUniformType, size: number } {\n    if (!Array.isArray(uniform)) return convertFriendlyUniform([uniform, 1])\n\n    const [stringType, size] = uniform\n    switch (stringType) {\n        case \"vec2\": return { type: IUniformType.FLOAT_VEC2, size }\n        case \"vec3\": return { type: IUniformType.FLOAT_VEC3, size }\n        case \"vec4\": return { type: IUniformType.FLOAT_VEC4, size }\n        case \"mat2\": return { type: IUniformType.FLOAT_MAT2, size }\n        case \"mat3\": return { type: IUniformType.FLOAT_MAT3, size }\n        case \"mat4\": return { type: IUniformType.FLOAT_MAT4, size }\n        case \"sampler2D\": return { type: IUniformType.SAMPLER_2D, size }\n        case \"samplerCube\": return { type: IUniformType.SAMPLER_CUBE, size }\n        default: return { type: IUniformType.FLOAT, size }\n    }\n}\n\n\nfunction convertFriendlyAttributes(attributes?: IMap<IAttributeStringType>): IAttributeTypes {\n    if (!attributes) return {}\n\n    const result: IAttributeTypes = {}\n    for (const key of Object.keys(attributes)) {\n        result[key] = convertFriendlyAttribute(attributes[key])\n    }\n    return result\n}\n\nfunction convertFriendlyAttribute(attribute: IArray<IAttributeStringType>): IAttributeType {\n    switch (attribute) {\n        case \"vec2\": return IAttributeType.FLOAT_VEC2\n        case \"vec3\": return IAttributeType.FLOAT_VEC3\n        case \"vec4\": return IAttributeType.FLOAT_VEC4\n        default: return IAttributeType.FLOAT\n    }\n}\n\n\nfunction convertFriendlyVaryings(varyings?: IMap<IArray<IVaryingStringType>>): IVaryingTypes {\n    if (!varyings) return {}\n\n    const result: IVaryingTypes = {}\n    for (const key of Object.keys(varyings)) {\n        result[key] = convertFriendlyVarying(varyings[key])\n    }\n    return result\n}\n\nfunction convertFriendlyVarying(varying: IArray<IVaryingStringType>): { type: IVaryingType, size: number } {\n    if (!Array.isArray(varying)) return convertFriendlyVarying([varying, 1])\n\n    const [stringType, size] = varying\n    switch (stringType) {\n        case \"vec2\": return { type: IVaryingType.FLOAT_VEC2, size }\n        case \"vec3\": return { type: IVaryingType.FLOAT_VEC3, size }\n        case \"vec4\": return { type: IVaryingType.FLOAT_VEC4, size }\n        case \"mat2\": return { type: IVaryingType.FLOAT_MAT2, size }\n        case \"mat3\": return { type: IVaryingType.FLOAT_MAT3, size }\n        case \"mat4\": return { type: IVaryingType.FLOAT_MAT4, size }\n        default: return { type: IVaryingType.FLOAT, size }\n    }\n}\n\n\ninterface IDefinition {\n    uniforms: IUniformTypes\n    attributes: IAttributeTypes\n    varyings: IVaryingTypes\n    functions: IFunctionTypes\n    dependencies: AbstractShader[]\n}\n\ninterface IMap<T> { [key: string]: T }\ntype IArray<T> = T | [T, number]\n","// tslint:disable:no-bitwise\nimport { IVec3, IVec4, IMat3, IMat4 } from '../types'\n\nconst FULL_TURN = 4096\nconst MODULO = FULL_TURN - 1\nconst HALF_TURN = 2048\nconst HALF = 0.5\nconst EPSILON = 0.00000001\n\nconst COS = new Float32Array(FULL_TURN)\nconst SIN = new Float32Array(FULL_TURN)\n\n// Temporary vectors to used for internal computations.\nconst vec3tmp1 = new Float32Array(3)\nconst vec3tmp2 = new Float32Array(3)\nconst vec3tmp3 = new Float32Array(3)\nconst vec3tmp4 = new Float32Array(3)\n\n// Prepare acceleration table for COS and SIN.\nfor (let i = 0; i < FULL_TURN; i++) {\n    const angle = (Math.PI * i) / HALF_TURN\n    COS[i] = Math.cos(angle)\n    SIN[i] = Math.sin(angle)\n}\n\n/**\n * Fast cosine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction cos(angle: number) {\n    return COS[(angle | 0) & MODULO]\n}\n\n/**\n * Fast sine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction sin(angle: number) {\n    return SIN[(angle | 0) & MODULO]\n}\n\n/**\n * Force a number to stay between two bounds.\n */\nfunction clamp(v: number, min = 0, max = 1) {\n    if (v < min) return min\n    if (v > max) return max\n    return v\n}\n\nconst M4_00 = 0\nconst M4_10 = 1\nconst M4_20 = 2\nconst M4_30 = 3\nconst M4_01 = 4\nconst M4_11 = 5\nconst M4_21 = 6\nconst M4_31 = 7\nconst M4_02 = 8\nconst M4_12 = 9\nconst M4_22 = 10\nconst M4_32 = 11\nconst M4_03 = 12\nconst M4_13 = 13\nconst M4_23 = 14\nconst M4_33 = 15\n\nconst M3_00 = 0\nconst M3_10 = 1\nconst M3_20 = 2\nconst M3_01 = 3\nconst M3_11 = 4\nconst M3_21 = 5\nconst M3_02 = 6\nconst M3_12 = 7\nconst M3_22 = 8\n\nconst V_0 = 0\nconst V_1 = 1\nconst V_2 = 2\nconst V_3 = 3\n\nconst X = 0\nconst Y = 1\nconst Z = 2\nconst W = 3\n\nconst vector = {\n    areEqual(a: Float32Array, b: Float32Array): boolean {\n        if (a.length !== b.length) return false\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) return false\n        }\n        return true\n    },\n\n    createVec3(): IVec3 {\n        const VEC3_LENGTH = 3\n        return new Float32Array(VEC3_LENGTH)\n    },\n\n    createVec4(): IVec4 {\n        const VEC4_LENGTH = 4\n        return new Float32Array(VEC4_LENGTH)\n    },\n\n    add3(a: IVec3, b: IVec3, output: IVec3) {\n        output[X] = a[X] + b[X]\n        output[Y] = a[Y] + b[Y]\n        output[Z] = a[Z] + b[Z]\n    },\n\n    substract3(a: IVec3, b: IVec3, output: IVec3) {\n        output[X] = a[X] - b[X]\n        output[Y] = a[Y] - b[Y]\n        output[Z] = a[Z] - b[Z]\n    },\n\n    cross3(a: IVec3, b: IVec3, output: IVec3) {\n        output[X] = a[Y] * b[Z] - a[Z] * b[Y]\n        output[Y] = a[Z] * b[X] - a[X] * b[Z]\n        output[Z] = a[X] * b[Y] - a[Y] * b[X]\n    },\n\n    dot3(a: IVec3, b: IVec3): number {\n        const [xa, ya, za] = a\n        const [xb, yb, zb] = b\n        return xa * xb + ya * yb + za * zb\n    },\n\n    /**\n     * @return Length of a 3D vector.\n     */\n    length3(input: IVec3): number {\n        return Math.sqrt(vector.dot3(input, input))\n    },\n\n    /**\n     * Create a 3D vector with length 1.\n     */\n    normalize3(input: IVec3, output: IVec3) {\n        const len = vector.length3(input)\n        const lenInv = len > 0 ? 1 / len : 1\n        output[X] = input[X] * lenInv\n        output[Y] = input[Y] * lenInv\n        output[Z] = input[Z] * lenInv\n    },\n\n    /**\n     * Create a 3D vector of length 1, pointing in latitude/longitude position.\n     * Latitude goes along with Y axis.\n     * orbital3(0, 0) === (0,0,-1)\n     *\n     * Latitude and longitude are expressed in radians.\n     */\n    orbital3(latitude: number, longitude: number, output: IVec3) {\n        const height = Math.sin(latitude)\n        const radius = Math.cos(latitude)\n        const angle = longitude - Math.PI * HALF\n        output[X] = radius * Math.cos(angle)\n        output[Y] = radius * Math.sin(angle)\n        output[Z] = height\n    },\n\n    /**\n     * @return Length of a 3D vector.\n     */\n    length4(input: IVec4): number {\n        const [x, y, z, w] = input\n        return Math.sqrt(x * x + y * y + z * z + w * w)\n    },\n\n    /**\n     * Create a 3D vector with length 1.\n     */\n    normalize4(input: IVec4, output: IVec4) {\n        const len = vector.length4(input)\n        output[X] = input[X] * len\n        output[Y] = input[Y] * len\n        output[Z] = input[Z] * len\n        output[W] = input[W] * len\n    },\n\n    transform4(mat: IMat4, vec: IVec4, out: IVec4) {\n        out[V_0] =\n            mat[M4_00] * vec[V_0] +\n            mat[M4_01] * vec[V_1] +\n            mat[M4_02] * vec[V_2] +\n            mat[M4_03] * vec[V_3]\n        out[V_1] =\n            mat[M4_10] * vec[V_0] +\n            mat[M4_11] * vec[V_1] +\n            mat[M4_12] * vec[V_2] +\n            mat[M4_13] * vec[V_3]\n        out[V_2] =\n            mat[M4_20] * vec[V_0] +\n            mat[M4_21] * vec[V_1] +\n            mat[M4_22] * vec[V_2] +\n            mat[M4_23] * vec[V_3]\n        out[V_3] =\n            mat[M4_30] * vec[V_0] +\n            mat[M4_31] * vec[V_1] +\n            mat[M4_32] * vec[V_2] +\n            mat[M4_33] * vec[V_3]\n    }\n}\n\nconst matrix = {\n    areEqual: vector.areEqual,\n\n    createMat3(): IMat3 {\n        const MAT3_LENGTH = 9\n        return new Float32Array(MAT3_LENGTH)\n    },\n\n    createMat4(): IMat4 {\n        const MAT4_LENGTH = 16\n        return new Float32Array(MAT4_LENGTH)\n    },\n\n    identity3(output: IMat3) {\n        output[M3_00] = 1\n        output[M3_10] = 0\n        output[M3_20] = 0\n        output[M3_01] = 0\n        output[M3_11] = 1\n        output[M3_21] = 0\n        output[M3_02] = 0\n        output[M3_12] = 0\n        output[M3_22] = 1\n    },\n\n    /**\n     * Extract a 3x3 matrix from the top/left corner of a 4x4 matrix.\n     */\n    extract3From4(mat4: IMat4, mat3: IMat3) {\n        mat3[M3_00] = mat4[M4_00]\n        mat3[M3_10] = mat4[M4_10]\n        mat3[M3_20] = mat4[M4_20]\n        mat3[M3_01] = mat4[M4_01]\n        mat3[M3_11] = mat4[M4_11]\n        mat3[M3_21] = mat4[M4_21]\n        mat3[M3_02] = mat4[M4_02]\n        mat3[M3_12] = mat4[M4_12]\n        mat3[M3_22] = mat4[M4_22]\n    },\n\n    extractX3From4(mat4: IMat4, vec3: IVec3) {\n        vec3[X] = mat4[M4_00]\n        vec3[Y] = mat4[M4_10]\n        vec3[Z] = mat4[M4_20]\n    },\n\n    extractX4From4(mat4: IMat4, vec4: IVec4) {\n        vec4[X] = mat4[M4_00]\n        vec4[Y] = mat4[M4_10]\n        vec4[Z] = mat4[M4_20]\n        vec4[W] = mat4[M4_30]\n    },\n\n    extractY3From4(mat4: IMat4, vec3: IVec3) {\n        vec3[X] = mat4[M4_01]\n        vec3[Y] = mat4[M4_11]\n        vec3[Z] = mat4[M4_21]\n    },\n\n    extractY4From4(mat4: IMat4, vec4: IVec4) {\n        vec4[X] = mat4[M4_01]\n        vec4[Y] = mat4[M4_11]\n        vec4[Z] = mat4[M4_21]\n        vec4[W] = mat4[M4_31]\n    },\n\n    extractZ3From4(mat4: IMat4, vec3: IVec3) {\n        vec3[X] = mat4[M4_02]\n        vec3[Y] = mat4[M4_12]\n        vec3[Z] = mat4[M4_22]\n    },\n\n    extractZ4From4(mat4: IMat4, vec4: IVec4) {\n        vec4[X] = mat4[M4_02]\n        vec4[Y] = mat4[M4_12]\n        vec4[Z] = mat4[M4_22]\n        vec4[W] = mat4[M4_32]\n    },\n\n    lookAt4(pos: IVec3, target: IVec3, up: IVec3, mat4: IMat4) {\n        mat4[M4_03] = pos[X]\n        mat4[M4_13] = pos[Y]\n        mat4[M4_23] = pos[Z]\n        mat4[M4_33] = 1\n\n        const dir = vec3tmp1\n        const right = vec3tmp2\n        const orthogonalUp = vec3tmp3\n        const normalizedUp = vec3tmp4\n\n        vector.substract3(target, pos, dir)\n        vector.normalize3(dir, dir)\n        vector.normalize3(up, normalizedUp)\n        vector.cross3(dir, normalizedUp, right)\n        vector.cross3(right, dir, orthogonalUp)\n\n        mat4[M4_00] = right[X]\n        mat4[M4_10] = right[Y]\n        mat4[M4_20] = right[Z]\n        mat4[M4_30] = 0\n        mat4[M4_01] = orthogonalUp[X]\n        mat4[M4_11] = orthogonalUp[Y]\n        mat4[M4_21] = orthogonalUp[Z]\n        mat4[M4_31] = 0\n        mat4[M4_02] = dir[X]\n        mat4[M4_12] = dir[Y]\n        mat4[M4_22] = dir[Z]\n        mat4[M4_32] = 0\n    },\n\n    multiply3(a: IMat3, b: IMat3, output: IMat3) {\n        output[M3_00] = a[M3_00] * b[M3_00] + a[M3_01] * b[M3_10] + a[M3_02] * b[M3_20]\n        output[M3_10] = a[M3_10] * b[M3_00] + a[M3_11] * b[M3_10] + a[M3_12] * b[M3_20]\n        output[M3_20] = a[M3_20] * b[M3_00] + a[M3_21] * b[M3_10] + a[M3_22] * b[M3_20]\n        output[M3_01] = a[M3_00] * b[M3_01] + a[M3_01] * b[M3_11] + a[M3_02] * b[M3_21]\n        output[M3_11] = a[M3_10] * b[M3_01] + a[M3_11] * b[M3_11] + a[M3_12] * b[M3_21]\n        output[M3_21] = a[M3_20] * b[M3_01] + a[M3_21] * b[M3_11] + a[M3_22] * b[M3_21]\n        output[M3_02] = a[M3_00] * b[M3_02] + a[M3_01] * b[M3_12] + a[M3_02] * b[M3_22]\n        output[M3_12] = a[M3_10] * b[M3_02] + a[M3_11] * b[M3_12] + a[M3_12] * b[M3_22]\n        output[M3_22] = a[M3_20] * b[M3_02] + a[M3_21] * b[M3_12] + a[M3_22] * b[M3_22]\n    },\n\n    identity4(output: IMat4) {\n        output[M4_00] = 1\n        output[M4_10] = 0\n        output[M4_20] = 0\n        output[M4_30] = 0\n        output[M4_01] = 0\n        output[M4_11] = 1\n        output[M4_21] = 0\n        output[M4_31] = 0\n        output[M4_02] = 0\n        output[M4_12] = 0\n        output[M4_22] = 1\n        output[M4_32] = 0\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    },\n\n    multiply4(a: IMat4, b: IMat4, output: IMat4) {\n        const output00 = a[M4_00] * b[M4_00] + a[M4_01] * b[M4_10] + a[M4_02] * b[M4_20] + a[M4_03] * b[M4_30]\n        const output10 = a[M4_10] * b[M4_00] + a[M4_11] * b[M4_10] + a[M4_12] * b[M4_20] + a[M4_13] * b[M4_30]\n        const output20 = a[M4_20] * b[M4_00] + a[M4_21] * b[M4_10] + a[M4_22] * b[M4_20] + a[M4_23] * b[M4_30]\n        const output30 = a[M4_30] * b[M4_00] + a[M4_31] * b[M4_10] + a[M4_32] * b[M4_20] + a[M4_33] * b[M4_30]\n        const output01 = a[M4_00] * b[M4_01] + a[M4_01] * b[M4_11] + a[M4_02] * b[M4_21] + a[M4_03] * b[M4_31]\n        const output11 = a[M4_10] * b[M4_01] + a[M4_11] * b[M4_11] + a[M4_12] * b[M4_21] + a[M4_13] * b[M4_31]\n        const output21 = a[M4_20] * b[M4_01] + a[M4_21] * b[M4_11] + a[M4_22] * b[M4_21] + a[M4_23] * b[M4_31]\n        const output31 = a[M4_30] * b[M4_01] + a[M4_31] * b[M4_11] + a[M4_32] * b[M4_21] + a[M4_33] * b[M4_31]\n        const output02 = a[M4_00] * b[M4_02] + a[M4_01] * b[M4_12] + a[M4_02] * b[M4_22] + a[M4_03] * b[M4_32]\n        const output12 = a[M4_10] * b[M4_02] + a[M4_11] * b[M4_12] + a[M4_12] * b[M4_22] + a[M4_13] * b[M4_32]\n        const output22 = a[M4_20] * b[M4_02] + a[M4_21] * b[M4_12] + a[M4_22] * b[M4_22] + a[M4_23] * b[M4_32]\n        const output32 = a[M4_30] * b[M4_02] + a[M4_31] * b[M4_12] + a[M4_32] * b[M4_22] + a[M4_33] * b[M4_32]\n        const output03 = a[M4_00] * b[M4_03] + a[M4_01] * b[M4_13] + a[M4_02] * b[M4_23] + a[M4_03] * b[M4_33]\n        const output13 = a[M4_10] * b[M4_03] + a[M4_11] * b[M4_13] + a[M4_12] * b[M4_23] + a[M4_13] * b[M4_33]\n        const output23 = a[M4_20] * b[M4_03] + a[M4_21] * b[M4_13] + a[M4_22] * b[M4_23] + a[M4_23] * b[M4_33]\n        const output33 = a[M4_30] * b[M4_03] + a[M4_31] * b[M4_13] + a[M4_32] * b[M4_23] + a[M4_33] * b[M4_33]\n\n        output[M4_00] = output00\n        output[M4_10] = output10\n        output[M4_20] = output20\n        output[M4_30] = output30\n        output[M4_01] = output01\n        output[M4_11] = output11\n        output[M4_21] = output21\n        output[M4_31] = output31\n        output[M4_02] = output02\n        output[M4_12] = output12\n        output[M4_22] = output22\n        output[M4_32] = output32\n        output[M4_03] = output03\n        output[M4_13] = output13\n        output[M4_23] = output23\n        output[M4_33] = output33\n    },\n\n    /**\n     * @return false if the matrix is not invertible.\n     */\n    invert4(a: IMat4, output: IMat4): boolean {\n        const [\n            a00, a10, a20, a30,\n            a01, a11, a21, a31,\n            a02, a12, a22, a32,\n            a03, a13, a23, a33\n        ] = a\n\n        const b00 = a00 * a11 - a01 * a10\n        const b01 = a00 * a12 - a02 * a10\n        const b02 = a00 * a13 - a03 * a10\n        const b03 = a01 * a12 - a02 * a11\n        const b04 = a01 * a13 - a03 * a11\n        const b05 = a02 * a13 - a03 * a12\n        const b06 = a20 * a31 - a21 * a30\n        const b07 = a20 * a32 - a22 * a30\n        const b08 = a20 * a33 - a23 * a30\n        const b09 = a21 * a32 - a22 * a31\n        const b10 = a21 * a33 - a23 * a31\n        const b11 = a22 * a33 - a23 * a32\n        // Calculate the determinant\n        const invDet = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\n\n        if (Math.abs(invDet) < EPSILON) return false\n\n        const det = 1 / invDet\n\n        output[M4_00] = (a11 * b11 - a12 * b10 + a13 * b09) * det\n        output[M4_01] = (a02 * b10 - a01 * b11 - a03 * b09) * det\n        output[M4_02] = (a31 * b05 - a32 * b04 + a33 * b03) * det\n        output[M4_03] = (a22 * b04 - a21 * b05 - a23 * b03) * det\n        output[M4_10] = (a12 * b08 - a10 * b11 - a13 * b07) * det\n        output[M4_11] = (a00 * b11 - a02 * b08 + a03 * b07) * det\n        output[M4_12] = (a32 * b02 - a30 * b05 - a33 * b01) * det\n        output[M4_13] = (a20 * b05 - a22 * b02 + a23 * b01) * det\n        output[M4_20] = (a10 * b10 - a11 * b08 + a13 * b06) * det\n        output[M4_21] = (a01 * b08 - a00 * b10 - a03 * b06) * det\n        output[M4_22] = (a30 * b04 - a31 * b02 + a33 * b00) * det\n        output[M4_23] = (a21 * b02 - a20 * b04 - a23 * b00) * det\n        output[M4_30] = (a11 * b07 - a10 * b09 - a12 * b06) * det\n        output[M4_31] = (a00 * b09 - a01 * b07 + a02 * b06) * det\n        output[M4_32] = (a31 * b01 - a30 * b03 - a32 * b00) * det\n        output[M4_33] = (a20 * b03 - a21 * b01 + a22 * b00) * det\n\n        return true\n    },\n\n    /**\n     * Rotation around X axis of `angle` radians.\n     */\n    rotation4X(angle: number, output: IMat4) {\n        const c = Math.cos(angle)\n        const s = Math.sin(angle)\n\n        output[M4_00] = 1\n        output[M4_10] = 0\n        output[M4_20] = 0\n        output[M4_30] = 0\n\n        output[M4_01] = 0\n        output[M4_11] = c\n        output[M4_21] = s\n        output[M4_31] = 0\n\n        output[M4_02] = 0\n        output[M4_12] = -s\n        output[M4_22] = c\n        output[M4_32] = 0\n\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    },\n\n    /**\n     * Rotation around X axis of `angle` radians.\n     */\n    rotation4Y(angle: number, output: IMat4) {\n        const c = Math.cos(angle)\n        const s = Math.sin(angle)\n\n        output[M4_00] = c\n        output[M4_10] = 0\n        output[M4_20] = -s\n        output[M4_30] = 0\n\n        output[M4_01] = 0\n        output[M4_11] = 1\n        output[M4_21] = 0\n        output[M4_31] = 0\n\n        output[M4_02] = s\n        output[M4_12] = 0\n        output[M4_22] = c\n        output[M4_32] = 0\n\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    },\n\n    /**\n     * Rotation around X axis of `angle` radians.\n     */\n    rotation4Z(angle: number, output: IMat4) {\n        const c = Math.cos(angle)\n        const s = Math.sin(angle)\n\n        output[M4_00] = c\n        output[M4_10] = s\n        output[M4_20] = 0\n        output[M4_30] = 0\n\n        output[M4_01] = -s\n        output[M4_11] = c\n        output[M4_21] = 0\n        output[M4_31] = 0\n\n        output[M4_02] = 0\n        output[M4_12] = 0\n        output[M4_22] = 1\n        output[M4_32] = 0\n\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    }\n}\n\nfunction deg2rad(deg: number) {\n    const HALF_TURN_DEF = 180\n    return deg * Math.PI / HALF_TURN_DEF\n}\n\nfunction rad2deg(rad: number) {\n    const HALF_TURN_DEF = 180\n    return rad * HALF_TURN_DEF / Math.PI\n}\n\nexport default {\n    deg2rad, rad2deg,\n    cos, sin, clamp, vector, matrix,\n    M4_00, M4_10, M4_20, M4_30,\n    M4_01, M4_11, M4_21, M4_31,\n    M4_02, M4_12, M4_22, M4_32,\n    M4_03, M4_13, M4_23, M4_33,\n    M3_00, M3_10, M3_20,\n    M3_01, M3_11, M3_21,\n    M3_02, M3_12, M3_22\n}\n","import AssetsMap from '../../assets-map'\nimport Program from '../../program'\nimport ShaderFactory from '../shader'\nimport { IWebGL, IFriendlyVertexDefinition, IFriendlyFragmentDefinition } from '../../types'\n\nexport default class ProgramFactory {\n    private programMap = new AssetsMap<Program>()\n\n    constructor(private gl: IWebGL) { }\n\n    async createProgramAsync(\n        id: string,\n        vertShader: Partial<IFriendlyVertexDefinition>,\n        fragShader: Partial<IFriendlyFragmentDefinition>\n    ): Promise<Program> {\n        if (this.programMap.exists(id)) {\n            return this.programMap.get(id) as Program\n        }\n\n        const { gl } = this\n        const program = new Program(\n            gl,\n            ShaderFactory.createVertShader(vertShader),\n            ShaderFactory.createFragShader(fragShader)\n        )\n        await program.attach()\n        this.programMap.add(id, program)\n        return program\n    }\n}\n","import { IWebGL } from '../types'\n\ninterface IArrayBufferParams {\n    gl: IWebGL\n    buffer: WebGLBuffer\n    confirmDestroy(): boolean\n}\n\nexport default class ArrayBuffer {\n    constructor(private params: IArrayBufferParams) { }\n\n    setData(data: Float32Array) {\n        const { gl, buffer } = this.params\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW)\n    }\n\n    get buffer(): WebGLBuffer { return this.params.buffer }\n\n    bind() {\n        const { gl, buffer } = this.params\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n    }\n\n    destroy() {\n        const { gl, buffer, confirmDestroy } = this.params\n        if (confirmDestroy() === false) return\n        gl.deleteBuffer(buffer)\n    }\n}\n","import AssetsMap from '../../assets-map'\nimport ArrayBuffer from '../../buffer/array-buffer'\nimport { IWebGL } from '../../types'\n\nexport default class BufferFactory {\n    private arrayBufferMap = new AssetsMap<ArrayBuffer>()\n\n    constructor(private gl: IWebGL) { }\n\n    createArrayBuffer(id: string, data: Float32Array): ArrayBuffer {\n        if (this.arrayBufferMap.exists(id)) {\n            return this.arrayBufferMap.get(id) as ArrayBuffer\n        }\n\n        const { gl } = this\n        const buffer = gl.createBuffer()\n        if (!buffer) {\n            throw Error(\"Unable to create a new WebGLBuffer!\")\n        }\n        const arrayBuffer = new ArrayBuffer({\n            gl, buffer,\n            confirmDestroy: () => this.arrayBufferMap.remove(id) === 0\n        })\n        arrayBuffer.setData(data)\n        this.arrayBufferMap.add(id, arrayBuffer)\n        return arrayBuffer\n    }\n}\n","import Program from \"../program\"\nimport { IFriendlyVertexDefinition } from '../types'\n\n/**\n * The Camera is responsible of transforming World coordinates into\n * Screen coordinates.\n * To do this, the Camera defines the following Vertex Shader function:\n *\n * ```glsl\n * vec4 worldPointToScreen(vec3 point)\n * vec3 worldVectorToScreen(vec3 vector)\n * ```\n *\n * And it can work only if the following attributes are defined:\n *\n * ```glsl\n * attribute float uniCanvasWidth;\n * attribute float uniCanvasHeight;\n * ```\n *\n * Because there is a lot of different cameras, they can need extra attributes.\n * That's why Camera provides two readonly properties:\n * * `glslUniforms`:\n * * `glslFunction`\n */\nexport default abstract class AbstractCamera {\n    abstract get id(): string\n\n    abstract get vertexShader(): Partial<IFriendlyVertexDefinition>\n\n    /**\n     * @param prg - Attributes have to be set in this Program.\n     * @param width - Canvas Width.\n     * @param height - Canvas Height.\n     * @param time - Time of the rendered frame in milliseconds.\n     */\n    abstract setUniformValues(\n        prg: Program,\n        width: number,\n        height: number,\n        time: number\n    ): void\n}\n","import AbstractCamera from \"./abstract-camera\"\nimport Calc from \"../calc\"\nimport { IMat3, IMat4 } from '../types'\n\nconst HALF = 0.5\n// Its PI/2 - Epsilon\nconst ALMOST_HALF_PI = 1.570796326794896\n\n/**\n * Abstract camera for 3D space.\n */\nexport default abstract class Space3D extends AbstractCamera {\n    protected readonly cameraMatrix: IMat4 = Calc.matrix.createMat4()\n    private readonly rotationY = Calc.matrix.createMat4()\n    private readonly rotationX = Calc.matrix.createMat4()\n\n    /**\n     * The camera matrix holds all the transformations to get a point\n     * from the world space into the camera space. This matrix is 4x4\n     * and it allows translations.\n     * This function will return a 3x3 matrix without the translations.\n     * It can be useful for vectors instead of points.\n     */\n    extractCameraMatrix(mat3: IMat3) {\n        Calc.matrix.extract3From4(this.cameraMatrix, mat3)\n    }\n\n    /**\n     * The camera looks at (targetX, targetY, targetZ)\n     * and it is at a distance of `distance`.\n     * That defines a sphere. We use `latitude` and `longitude` to know\n     * where the camera lies on the sphere.\n     * For {dis: 1, lat: 0, lng: 0} the camera location will be (0,0,1).\n     * For {dis: 1, lat: 0, lng: 90} the camera location will be (1,0,0).\n     * Only the latitude will influence the Y coord.\n     *\n     * @param distance - Expressed in meters.\n     * @param latitude - Expressed in radians.\n     * @param longitude - Expressed in radians.\n     */\n    orbit(\n        targetX: number, targetY: number, targetZ: number,\n        distance: number, latitude: number, longitude: number\n    ) {\n        const { rotationY, rotationX, cameraMatrix } = this\n\n        const lat = Calc.clamp(latitude, -ALMOST_HALF_PI, ALMOST_HALF_PI)\n        const lng = longitude\n\n        Calc.matrix.rotation4X(lat, rotationX)\n        Calc.matrix.rotation4Y(-lng, rotationY)\n        Calc.matrix.identity4(cameraMatrix)\n        Calc.matrix.multiply4(rotationX, rotationY, cameraMatrix)\n\n        const tX = targetX\n        const tY = targetY\n        const tZ = targetZ + distance\n\n        cameraMatrix[Calc.M4_03] = -tX\n        cameraMatrix[Calc.M4_13] = -tY\n        cameraMatrix[Calc.M4_23] = -tZ\n    }\n}\n","import Space3D from \"../space-3d\"\nimport Program from \"../../program\"\nimport PointVertexShaderCode from \"./perspective.world-point-to-screen.vert\"\nimport VectorVertexShaderCode from \"./perspective.world-vector-to-screen.vert\"\nimport Calc from \"../../calc\"\nimport { IFriendlyVertexDefinition } from '../../types'\n\nconst HALF_TURN_DEG = 180\nconst DEFAULT_FIELD_ANGLE_DEG = 39.6\nconst DEFAULT_FIELD_ANGLE_RAD = DEFAULT_FIELD_ANGLE_DEG * Math.PI / HALF_TURN_DEG\nconst HALF = 0.5\nconst DOUBLE = 2\n\n\nexport default class Perspective extends Space3D {\n    private perspectiveMatrix = Calc.matrix.createMat4()\n    private cameraMatrix3 = Calc.matrix.createMat3()\n\n    /**\n     * Field view angle expressed in radians.\n     */\n    fieldAngle = DEFAULT_FIELD_ANGLE_RAD\n    near = 0.1\n    far = 1000\n\n    constructor() {\n        super()\n        const distance = 15\n        this.orbit(0, 0, 0, distance, 0, 0)\n    }\n\n    get id() { return \"[CAMERA/PERSPECTIVE]\" }\n\n    get vertexShader(): Partial<IFriendlyVertexDefinition> {\n        return {\n            uniforms: {\n                uniPerspectiveMatrix: \"mat4\",\n                uniCameraMatrix: \"mat4\",\n                uniCameraMatrix3: \"mat3\"\n            },\n            functions: {\n                worldPointToScreen: PointVertexShaderCode,\n                worldVectorToScreen: VectorVertexShaderCode\n            }\n        }\n    }\n\n    /**\n     * @param prg - Attributes have to be set in this Program.\n     * @param width - Canvas Width.\n     * @param height - Canvas Height.\n     * @param time - Time of the rendered frame in milliseconds.\n     */\n    setUniformValues(prg: Program, width: number, height: number) {\n        const { near, far, fieldAngle } = this\n        const f = Math.tan(HALF * (Math.PI - fieldAngle))\n        const rangeInv = 1 / (near - far)\n\n        const result = this.perspectiveMatrix\n        result[Calc.M4_00] = f * height / width\n        result[Calc.M4_10] = 0\n        result[Calc.M4_20] = 0\n        result[Calc.M4_30] = 0\n\n        result[Calc.M4_01] = 0\n        result[Calc.M4_11] = f\n        result[Calc.M4_21] = 0\n        result[Calc.M4_31] = 0\n\n        result[Calc.M4_02] = 0\n        result[Calc.M4_12] = 0\n        result[Calc.M4_22] = (near + far) * rangeInv\n        result[Calc.M4_32] = -1\n\n        result[Calc.M4_03] = 0\n        result[Calc.M4_13] = 0\n        result[Calc.M4_23] = near * far * rangeInv * DOUBLE\n        result[Calc.M4_33] = 0\n\n        // Used to rotate normals without translating them.\n        Calc.matrix.extract3From4(this.cameraMatrix, this.cameraMatrix3)\n\n        prg.use()\n        prg.uniforms.set(\"uniCameraMatrix\", this.cameraMatrix)\n        prg.uniforms.set(\"uniCameraMatrix3\", this.cameraMatrix3)\n        prg.uniforms.set(\"uniPerspectiveMatrix\", this.perspectiveMatrix)\n    }\n}\n","import Pointer from '../pointer'\nimport Resize from '../resize'\nimport TextureFactory from '../factory/texture'\nimport ProgramFactory from '../factory/program'\nimport BufferFactory from '../factory/buffer'\nimport Camera from '../camera'\nimport PerspectiveCamera from '../camera/perpective'\nimport { IWebGL } from '../types'\n\ntype IAnimationFunction = (time: number, width: number, height: number) => void\nexport interface ISceneParams {\n    canvas: HTMLCanvasElement\n    onAnimation?: IAnimationFunction\n}\n\nexport default class Scene {\n    resolution = 1\n    onAnimation?: IAnimationFunction\n\n    private readonly _gl: IWebGL\n    private readonly _pointer: Pointer\n    private _isRendering = false\n    private lastRenderingTime = 0\n    public readonly textures: TextureFactory\n    public readonly buffers: BufferFactory\n    public readonly programs: ProgramFactory\n    public camera: Camera = new PerspectiveCamera()\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._pointer = new Pointer(canvas)\n        let gl: IWebGL | null = canvas.getContext('webgl2', {\n            // Specify WebGL options.\n        })\n        if (!gl) {\n            console.warn(\"WebGL2 is not available! Switching to WebGL.\")\n            gl = canvas.getContext('webgl', {\n                // Specify WebGL options.\n            })\n        }\n        if (!gl) {\n            throw new Error('Unable to create a WegGL context!')\n        }\n\n        this._gl = gl\n        this.textures = new TextureFactory(gl)\n        this.buffers = new BufferFactory(gl)\n        this.programs = new ProgramFactory(gl)\n    }\n\n    get isRendering() { return this._isRendering }\n    set isRendering(value: boolean) {\n        if (value === this._isRendering) return\n        this._isRendering = value\n        if (value) {\n            window.requestAnimationFrame(this.render)\n        }\n    }\n\n    get gl(): IWebGL {\n        return this._gl\n    }\n\n    /**\n     * Retreive information about pointer (mouse, pen, finger, ...) state.\n     */\n    get pointer() {\n        return this._pointer\n    }\n\n    /**\n     * Visible width. Between 0 and 1024.\n     */\n    get width(): number {\n        return this._gl.drawingBufferWidth\n    }\n    /**\n     * Visible height. Between 0 and 1024.\n     */\n    get height(): number {\n        return this._gl.drawingBufferHeight\n    }\n\n    /**\n     * Trigger a rendering now.\n     */\n    refresh() {\n        const savedRendering = this._isRendering\n        const savedLastRenderingTime = this.lastRenderingTime\n        this._isRendering = true\n        const time = Date.now()\n        this.lastRenderingTime = time - 15\n        this.render(time)\n        this._isRendering = savedRendering\n        this.lastRenderingTime = savedLastRenderingTime\n    }\n\n    private readonly render = (time: number) => {\n        if (!this._isRendering) return\n        window.requestAnimationFrame(this.render)\n\n        const { gl, lastRenderingTime } = this\n        this.lastRenderingTime = time\n        if (lastRenderingTime === 0) {\n            // Skip the first frame to have a correct delta time.\n            return\n        }\n\n        Resize(gl, this.resolution)\n\n        gl.clearDepth(+1)\n        gl.clear(gl.DEPTH_BUFFER_BIT)\n        gl.depthFunc(gl.LESS)\n        gl.disable(gl.DEPTH_TEST)\n\n        try {\n            const { onAnimation } = this\n            if (typeof onAnimation === 'function') {\n                const width = gl.drawingBufferWidth\n                const height = gl.drawingBufferHeight\n                onAnimation(time, width, height)\n                this.pointer.reset()\n            }\n        } catch (ex) {\n            this._isRendering = false\n            console.error('##################################')\n            console.error('# Rendering   has  been  stopped #')\n            console.error('# because of the following error #')\n            console.error('##################################')\n            console.error(ex)\n        }\n    }\n}\n","/**\n * Resolution in CSS pixels. If omitted, the real resolution\n * of the device is taken. On smartphones, for instance,\n * the resolution is often greater than 1.\n *\n * Return `true` if the size has changed.\n */\nexport default (gl: WebGLRenderingContext, _resolution = 0) => {\n  const resolution = _resolution <= 0 ? window.devicePixelRatio : _resolution\n\n  const canvas = gl.canvas\n  if (canvas instanceof HTMLCanvasElement) {\n    const displayWidth = Math.floor(canvas.clientWidth * resolution)\n    const displayHeight = Math.floor(canvas.clientHeight * resolution)\n\n    // Check if the canvas is not the same size.\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      canvas.width = displayWidth\n      canvas.height = displayHeight\n      gl.viewport(0, 0, displayWidth, displayHeight)\n      return true\n    }\n  }\n  return false\n}\n","export interface IMeshDefinition {\n    name: string\n    vertices: number[]\n    textures: number[]\n    normals: number[]\n    faces: number[]\n    smoothness: string\n}\n\nconst VERTICES_PER_FACE = 3\nconst VALUES_PER_VERTEX = 3\nconst VALUES_PER_TEXTURE = 2\nconst VALUES_PER_NORMAL = 3\nconst VALUES_PER_FACE_VERTEX = 3\nconst VALUES_PER_FACE = VALUES_PER_FACE_VERTEX * VERTICES_PER_FACE\n\nconst X = 0\nconst Y = 1\nconst Z = 2\nconst U = 0\nconst V = 1\nconst VER = 0\nconst TEX = 1\nconst NOR = 2\n\nexport default class MeshDefinition {\n    public readonly id: string\n    public readonly verticesCount: number\n    public readonly texturesCount: number\n    public readonly normalsCount: number\n    public readonly facesCount: number\n\n    constructor(id: string, private def: IMeshDefinition) {\n        this.id = id\n        this.verticesCount = Math.floor(def.vertices.length / VALUES_PER_VERTEX)\n        this.texturesCount = Math.floor(def.textures.length / VALUES_PER_TEXTURE)\n        this.normalsCount = Math.floor(def.normals.length / VALUES_PER_NORMAL)\n        this.facesCount = Math.floor(def.faces.length / VALUES_PER_FACE)\n    }\n\n    getVertexX(index: number): number {\n        ensureIndexInRange(index, this.verticesCount)\n        return this.def.vertices[index * VALUES_PER_VERTEX + X]\n    }\n\n    getVertexY(index: number): number {\n        ensureIndexInRange(index, this.verticesCount)\n        return this.def.vertices[index * VALUES_PER_VERTEX + Y]\n    }\n\n    getVertexZ(index: number): number {\n        ensureIndexInRange(index, this.verticesCount)\n        return this.def.vertices[index * VALUES_PER_VERTEX + Z]\n    }\n\n    getTextureU(index: number): number {\n        ensureIndexInRange(index, this.texturesCount)\n        return this.def.textures[index * VALUES_PER_TEXTURE + U]\n    }\n\n    getTextureV(index: number): number {\n        ensureIndexInRange(index, this.texturesCount)\n        return this.def.textures[index * VALUES_PER_TEXTURE + V]\n    }\n\n    getNormalX(index: number): number {\n        ensureIndexInRange(index, this.normalsCount)\n        return this.def.normals[index * VALUES_PER_NORMAL + X]\n    }\n\n    getNormalY(index: number): number {\n        ensureIndexInRange(index, this.normalsCount)\n        return this.def.normals[index * VALUES_PER_NORMAL + Y]\n    }\n\n    getNormalZ(index: number): number {\n        ensureIndexInRange(index, this.normalsCount)\n        return this.def.normals[index * VALUES_PER_NORMAL + Z]\n    }\n\n    getFaceSmoothness(index: number): boolean {\n        ensureIndexInRange(index, this.facesCount)\n        return this.def.smoothness.charAt(index) === '1'\n    }\n\n    getFaceVertex(faceIdx: number, pointIdx: number): number {\n        ensureIndexInRange(faceIdx, this.facesCount)\n        const idx = faceIdx * VALUES_PER_FACE\n            + VALUES_PER_FACE_VERTEX * pointIdx\n            + VER\n        return this.def.faces[idx]\n    }\n\n    getFaceTexture(faceIdx: number, pointIdx: number): number {\n        ensureIndexInRange(faceIdx, this.facesCount)\n        const idx = faceIdx * VALUES_PER_FACE\n            + VALUES_PER_FACE_VERTEX * pointIdx\n            + TEX\n        return this.def.faces[idx]\n    }\n\n    getFaceNormal(faceIdx: number, pointIdx: number): number {\n        ensureIndexInRange(faceIdx, this.facesCount)\n        const idx = faceIdx * VALUES_PER_FACE\n            + VALUES_PER_FACE_VERTEX * pointIdx\n            + NOR\n        return this.def.faces[idx]\n    }\n}\n\n\n/**\n * Throw an exception is index is out of range.\n */\nfunction ensureIndexInRange(index: number, upperLimit: number) {\n    if (index < 0 || index >= upperLimit) {\n        throw `Index ${index} is out of range [0..${upperLimit - 1}]!`\n    }\n}\n","import AssetsMap from '../../assets-map'\nimport AsyncLoader from '../../async-loader'\nimport MeshDefinition, { IMeshDefinition } from './mesh-definition'\n\nconst MeshDefinitions = new AssetsMap<MeshDefinition>()\n\n\nexport default {\n    createOrGetFromCacheMeshDefinition\n}\n\n\nasync function createOrGetFromCacheMeshDefinition(definitionURL: string): Promise<MeshDefinition> {\n    const id = definitionURL\n    if (!MeshDefinitions.exists(definitionURL)) {\n        const definition = (await AsyncLoader.loadJson(definitionURL)) as IMeshDefinition\n        MeshDefinitions.add(id, new MeshDefinition(id, definition))\n    }\n    return MeshDefinitions.get(id) as MeshDefinition\n}\n","import Calc from '../calc'\nimport Program from '../program'\nimport { IVec3 } from '../types'\n\nconst X = 0\nconst Y = 1\nconst Z = 2\nconst UP: IVec3 = new Float32Array([0, 1, 0])\n\nexport default abstract class Mesh {\n    protected location: IVec3 = new Float32Array([0, 0, 0])\n    protected transfo = Calc.matrix.createMat4()\n\n    constructor() {\n        Calc.matrix.identity4(this.transfo)\n    }\n\n    abstract get program(): Program\n\n    get x() { return this.location[X] }\n    set x(value: number) {\n        this.location[X] = value\n        this.transfo[Calc.M4_03] = value\n    }\n    get y() { return this.location[Y] }\n    set y(value: number) {\n        this.location[Y] = value\n        this.transfo[Calc.M4_13] = value\n    }\n    get z() { return this.location[Z] }\n    set z(value: number) {\n        this.location[Z] = value\n        this.transfo[Calc.M4_23] = value\n    }\n\n    lookAt(target: IVec3, up: IVec3 = UP) {\n        Calc.matrix.lookAt4(\n            this.location,\n            target,\n            up,\n            this.transfo\n        )\n    }\n\n    /**\n     * Paint the mesh on a scene.\n     */\n    abstract paint(time: number): void\n\n    /**\n     * Clean up.\n     */\n    abstract destroy(): void\n}\n","import Mesh from '../mesh'\nimport Scene from '../../scene'\nimport Program from '../../program'\nimport Texture from '../../texture'\nimport ArrayBuffer from '../../buffer/array-buffer'\n\ninterface IFresnelMeshParams {\n    scene: Scene\n    attributesCount: number\n    arrayBuffer: ArrayBuffer\n    colorTexture: Texture\n    program: Program\n}\n\nexport default class FresnelMesh extends Mesh {\n    constructor(private params: IFresnelMeshParams) {\n        super()\n    }\n\n    get program() { return this.params.program }\n\n    paint(time: number) {\n        const { scene, arrayBuffer, colorTexture, program, attributesCount } = this.params\n        const { gl, camera } = scene\n\n        gl.enable(gl.CULL_FACE)\n        gl.cullFace(gl.BACK)\n        program.use()\n        camera.setUniformValues(program, scene.width, scene.height, time)\n        colorTexture.attachToUnit(0)\n        program.uniforms.set(\"uniObjectTransfo\", this.transfo)\n        program.uniforms.set(\"uniTexture\", 0)\n        program.bindAttribs(arrayBuffer.buffer)\n        gl.drawArrays(gl.TRIANGLES, 0, attributesCount)\n    }\n\n    destroy() {\n        const { arrayBuffer, colorTexture } = this.params\n        arrayBuffer.destroy()\n        colorTexture.destroy()\n    }\n}\n","import Common from '../common'\nimport Scene from '../../../scene'\nimport Camera from '../../../camera'\nimport Program from '../../../program'\nimport FresnelMesh from '../../../mesh/fresnel'\nimport MeshDefinition from '../mesh-definition'\n\nimport MainVertShader from './main.vert'\nimport MainFragShader from './main.frag'\n\nexport default { createAsync }\n\nconst ATTRIBUTE_PER_VERTEX = 8\n\ninterface IParams {\n    scene: Scene\n    definitionURL: string\n    colorTextureURL: string\n}\n\nasync function createAsync(params: IParams): Promise<FresnelMesh> {\n    const { scene, definitionURL, colorTextureURL } = params\n    const { camera } = scene\n    const id = `[FRESNEL]:${definitionURL}`\n    const meshDef = await Common.createOrGetFromCacheMeshDefinition(definitionURL)\n    const data = createData(meshDef)\n    const attributesCount = Math.floor(data.length / ATTRIBUTE_PER_VERTEX)\n    const arrayBuffer = scene.buffers.createArrayBuffer(id, data)\n    const colorTexture = await scene.textures.createImageTextureAsync({\n        url: colorTextureURL,\n        linear: false\n    })\n    const program = await createProgramAsync(scene, camera)\n    return new FresnelMesh({\n        scene: params.scene,\n        arrayBuffer,\n        attributesCount,\n        colorTexture,\n        program\n    })\n}\n\n\nasync function createProgramAsync(scene: Scene, camera: Camera): Promise<Program> {\n    const id = `[FRESNEL]:${camera.id}`\n    const program = await scene.programs.createProgramAsync(\n        id,\n        {\n            uniforms: {\n                uniObjectTransfo: \"mat4\"\n            },\n            attributes: {\n                attLocation: \"vec3\",\n                attUV: \"vec2\",\n                attNormal: \"vec3\"\n            },\n            varyings: {\n                varNormal: \"vec3\",\n                varReflexion: \"vec3\",\n                varUV: \"vec2\"\n            },\n            functions: { main: MainVertShader },\n            dependencies: [camera.vertexShader]\n        },\n        {\n            uniforms: {\n                uniTexture: \"sampler2D\"\n            },\n            functions: { main: MainFragShader }\n        }\n    )\n    return program\n}\n\n\n/**\n * Each vertex has the following attributes:\n * float vertexX\n * float vertexY\n * float vertexZ\n * float textureU\n * float textureV\n * float normalX\n * float normalY\n * float normalZ\n */\nfunction createData(meshDef: MeshDefinition): Float32Array {\n    const data: number[] = []\n    const POINTS_PER_FACE = 3\n\n    for (let faceIdx = 0; faceIdx < meshDef.facesCount; faceIdx++) {\n        for (let pointIdx = 0; pointIdx < POINTS_PER_FACE; pointIdx++) {\n            const vertexIdx = meshDef.getFaceVertex(faceIdx, pointIdx)\n            data.push(\n                meshDef.getVertexX(vertexIdx),\n                meshDef.getVertexY(vertexIdx),\n                meshDef.getVertexZ(vertexIdx)\n            )\n            const textureIdx = meshDef.getFaceTexture(faceIdx, pointIdx)\n            data.push(\n                meshDef.getTextureU(textureIdx),\n                meshDef.getTextureV(textureIdx)\n            )\n            const normalIdx = meshDef.getFaceNormal(faceIdx, pointIdx)\n            data.push(\n                meshDef.getNormalX(normalIdx),\n                meshDef.getNormalY(normalIdx),\n                meshDef.getNormalZ(normalIdx)\n            )\n        }\n    }\n\n    return new Float32Array(data)\n}\n","import Mesh from '../mesh'\nimport Scene from '../../scene'\nimport Program from '../../program'\nimport ArrayBuffer from '../../buffer/array-buffer'\n\ninterface IFresnelMeshParams {\n    scene: Scene\n    attributesCount: number\n    arrayBuffer: ArrayBuffer\n    program: Program\n}\n\nconst R = 0\nconst G = 1\nconst B = 2\nconst A = 3\n\nexport default class OutlineMesh extends Mesh {\n    public readonly color = new Float32Array([0, 0, 0, 1])\n    public thickness = 1\n\n    constructor(private params: IFresnelMeshParams) {\n        super()\n        console.info(\"params=\", params)\n    }\n\n    get program() { return this.params.program }\n\n    setRGB(r: number, g: number, b: number) {\n        const { color } = this\n        color[R] = r\n        color[G] = g\n        color[B] = b\n    }\n\n    setRGBA(r: number, g: number, b: number, a: number) {\n        const { color } = this\n        color[R] = r\n        color[G] = g\n        color[B] = b\n        color[A] = a\n    }\n\n    paint(time: number) {\n        const THICKNESS_MULTIPLIER = 0.001\n        const { scene, arrayBuffer, program, attributesCount } = this.params\n        const { gl, camera } = scene\n        gl.enable(gl.CULL_FACE)\n        // The trick for outlining is to show only back faces.\n        gl.cullFace(gl.FRONT)\n        program.use()\n        camera.setUniformValues(program, scene.width, scene.height, time)\n        program.uniforms.set(\"uniColor\", this.color)\n        program.uniforms.set(\"uniThickness\", this.thickness * THICKNESS_MULTIPLIER)\n        program.uniforms.set(\"uniObjectTransfo\", this.transfo)\n        program.bindAttribs(arrayBuffer.buffer)\n        gl.drawArrays(gl.TRIANGLES, 0, attributesCount)\n    }\n\n    destroy() {\n        const { arrayBuffer } = this.params\n        arrayBuffer.destroy()\n    }\n}\n","import Calc from '../../../calc'\nimport Common from '../common'\nimport Scene from '../../../scene'\nimport Program from '../../../program'\nimport OutlineMesh from '../../../mesh/outline'\nimport MeshDefinition from '../mesh-definition'\n\nimport MainVertShader from './main.vert'\nimport MainFragShader from './main.frag'\n\nexport default { createAsync }\n\nconst ATTRIBUTE_PER_VERTEX = 6\n\ninterface IParams {\n    scene: Scene\n    definitionURL: string\n}\n\nasync function createAsync(params: IParams): Promise<OutlineMesh> {\n    const { scene, definitionURL } = params\n    const id = `[OUTLINE]:${definitionURL}`\n    const meshDef = await Common.createOrGetFromCacheMeshDefinition(definitionURL)\n    const data = createData(meshDef)\n    const attributesCount = Math.floor(data.length / ATTRIBUTE_PER_VERTEX)\n    const arrayBuffer = scene.buffers.createArrayBuffer(id, data)\n    const program = await createProgramAsync(scene)\n    return new OutlineMesh({\n        scene,\n        arrayBuffer,\n        attributesCount,\n        program\n    })\n}\n\n\nasync function createProgramAsync(scene: Scene): Promise<Program> {\n    const { camera } = scene\n    const id = `[OUTLINE]:${camera.id}`\n    const program = await scene.programs.createProgramAsync(\n        id,\n        {\n            uniforms: {\n                uniObjectTransfo: \"mat4\",\n                uniThickness: \"float\"\n            },\n            attributes: {\n                attLocation: \"vec3\",\n                attNormal: \"vec3\"\n            },\n            functions: { main: MainVertShader },\n            dependencies: [camera.vertexShader]\n        },\n        {\n            uniforms: {\n                uniColor: \"vec4\"\n            },\n            functions: { main: MainFragShader }\n        }\n    )\n    return program\n}\n\n\n/**\n * Each vertex has the following attributes:\n * float vertexX\n * float vertexY\n * float vertexZ\n * float textureU\n * float textureV\n * float normalX\n * float normalY\n * float normalZ\n */\nfunction createData(meshDef: MeshDefinition): Float32Array {\n    const data: number[] = []\n    const vertices: Vertex[] = []\n    const POINTS_PER_FACE = 3\n\n    for (let faceIdx = 0; faceIdx < meshDef.facesCount; faceIdx++) {\n        for (let pointIdx = 0; pointIdx < POINTS_PER_FACE; pointIdx++) {\n            const vertexIdx = meshDef.getFaceVertex(faceIdx, pointIdx)\n            if (!vertices[vertexIdx]) {\n                vertices[vertexIdx] = new Vertex(\n                    meshDef.getVertexX(vertexIdx),\n                    meshDef.getVertexY(vertexIdx),\n                    meshDef.getVertexZ(vertexIdx)\n                )\n            }\n            const vertex = vertices[vertexIdx]\n            const normalIdx = meshDef.getFaceNormal(faceIdx, pointIdx)\n            vertex.addNormal(\n                meshDef.getNormalX(normalIdx),\n                meshDef.getNormalY(normalIdx),\n                meshDef.getNormalZ(normalIdx)\n            )\n        }\n    }\n\n    for (let faceIdx = 0; faceIdx < meshDef.facesCount; faceIdx++) {\n        for (let pointIdx = 0; pointIdx < POINTS_PER_FACE; pointIdx++) {\n            const vertexIdx = meshDef.getFaceVertex(faceIdx, pointIdx)\n            const vertex = vertices[vertexIdx]\n            data.push(...vertex.data)\n        }\n    }\n\n    console.info(\"data=\", data)\n    return new Float32Array(data)\n}\n\nclass Vertex {\n    private normalX = 0\n    private normalY = 0\n    private normalZ = 0\n    private normalsCount = 0\n\n    constructor(private x: number, private y: number, private z: number) { }\n\n    addNormal(x: number, y: number, z: number) {\n        this.normalX += x\n        this.normalY += y\n        this.normalZ += z\n        this.normalsCount++\n    }\n\n    get data() {\n        const n = Math.max(1, this.normalsCount)\n        const nx = this.normalX / n\n        const ny = this.normalY / n\n        const nz = this.normalZ / n\n        const lenInv = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz)\n\n        return [\n            this.x,\n            this.y,\n            this.z,\n            nx * lenInv,\n            ny * lenInv,\n            nz * lenInv\n        ]\n    }\n}\n","import Fresnel from './fresnel'\nimport Outline from './outline'\n\nexport default {\n    Fresnel,\n    Outline\n}\n","import Scene from '../gl/scene'\nimport MeshFactory from '../gl/factory/mesh'\nimport Mesh from '../gl/mesh'\nimport OutlineMesh from '../gl/mesh/outline'\n\n\nconst PALETTE = \"./assets/palette/default-64.png\"\n\nexport default {\n    async createAsync(scene: Scene, url: string): Promise<WorldObj> {\n        const body = await MeshFactory.Fresnel.createAsync({\n            colorTextureURL: PALETTE,\n            definitionURL: url,\n            scene\n        })\n        const outline = await MeshFactory.Outline.createAsync({\n            definitionURL: url,\n            scene\n        })\n        return new WorldObj(body, outline)\n    }\n}\n\n\nclass WorldObj {\n    constructor(private body: Mesh, private outline: OutlineMesh) { }\n\n    get color() { return this.outline.color }\n    get thickness() { return this.outline.thickness }\n    set thickness(v: number) { this.outline.thickness = v }\n\n    get x() { return this.body.x }\n    set x(v: number) {\n        this.body.x = v\n        this.outline.x = v\n    }\n    get y() { return this.body.y }\n    set y(v: number) {\n        this.body.y = v\n        this.outline.y = v\n    }\n    get z() { return this.body.z }\n    set z(v: number) {\n        this.body.z = v\n        this.outline.z = v\n    }\n\n    paint(time: number) {\n        this.outline.paint(time)\n        this.body.paint(time)\n    }\n}\n","// tslint:disable:no-magic-numbers\nimport Tfw from 'tfw'\nimport React from \"react\"\nimport Scene from '../gl/scene'\nimport WorldObj from './world-obj'\nimport PerspectiveCamera from '../gl/camera/perpective'\nimport Calc from '../gl/calc'\n\nimport \"./App.css\"\n\nconst Slider = Tfw.View.Slider\n\ninterface IAppProps {\n    className?: string\n}\n\ninterface IAppState {\n    thickness: number\n    distance: number\n}\n\nexport default class App extends React.Component<IAppProps, IAppState> {\n    state = {\n        thickness: 2,\n        distance: 35\n    }\n\n    private refCanvas = React.createRef<HTMLCanvasElement>()\n    private scene?: Scene\n\n    async componentDidMount() {\n        const canvas = this.refCanvas.current\n        if (!canvas) return\n        const scene = new Scene(canvas)\n        scene.camera = new PerspectiveCamera()\n        const { gl } = scene\n\n        const car = await WorldObj.createAsync(scene, \"./assets/mesh/Car.json\")\n        const island = await WorldObj.createAsync(scene, \"./assets/mesh/Island-A.json\")\n        island.thickness = 2\n\n        let dis = 35\n        let lat = 0\n        let lng = 30\n\n        scene.onAnimation = (time: number) => {\n            //gl.clearColor(0, 0.4, 0.867, 1.0)\n            gl.clearColor(0.2, 0.3, 0.4, 1.0)\n            gl.clearDepth(+1)\n            gl.depthFunc(gl.LESS)\n            gl.enable(gl.DEPTH_TEST)\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n            island.thickness = this.state.thickness\n            car.thickness = this.state.thickness\n            // island.color[0] = 1 - Math.abs(Math.cos(time * 0.003))\n            // island.color[1] = island.color[0] * 0.5\n            car.y = Math.abs(Math.cos(time * 0.002)) * 3\n            car.x = 3 + Math.sin(time * 0.002) * 3\n\n            lng = time * 0.000314\n            lat = Math.cos(time * 0.0004841)\n            dis = this.state.distance\n            const camera = scene.camera as PerspectiveCamera\n            camera.orbit(car.x, 0, 0, dis, lat, lng)\n\n            island.paint(time)\n            car.paint(time)\n        }\n\n        this.scene = scene\n        scene.isRendering = true\n    }\n\n    render() {\n        const classes = ['App', 'thm-bg0']\n        if (this.props.className) classes.push(this.props.className)\n\n        return (<div className={classes.join(' ')}>\n            <canvas ref={this.refCanvas}></canvas>\n            <div className=\"controls\">\n                <Slider\n                    label=\"Thickness\"\n                    min={0}\n                    max={20}\n                    step={1}\n                    value={this.state.thickness}\n                    onChange={thickness => this.setState({ thickness })}\n                />\n                <Slider\n                    label=\"Distance\"\n                    min={1}\n                    max={100}\n                    step={1}\n                    value={this.state.distance}\n                    onChange={distance => this.setState({ distance })}\n                />\n            </div>\n        </div>)\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Tfw from 'tfw'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nTfw.Theme.register(\n    \"default\", {\n        bg0: \"#222\",\n        bg3: \"#555\"\n    }\n)\nTfw.Theme.apply(\"default\")\nTfw.Font.loadJosefin()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}