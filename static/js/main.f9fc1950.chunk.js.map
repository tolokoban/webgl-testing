{"version":3,"sources":["gl/camera/perpective/perspective.world-point-to-screen.vert","gl/camera/perpective/perspective.world-vector-to-screen.vert","gl/factory/mesh/fresnel/main.vert","gl/factory/mesh/fresnel/main.frag","gl/factory/mesh/outline/main.vert","gl/factory/mesh/outline/main.frag","App/painter/volcano/smoke/main.vert","App/painter/volcano/smoke/main.frag","App/painter/stone/rain/main.vert","App/painter/stone/rain/main.frag","App/view/controls/controls.yaml","gl/pointer.ts","gl/async-loader.ts","gl/texture/texture.ts","gl/texture/image-texture.ts","gl/texture/cube-map-texture.ts","gl/assets-map.ts","gl/types.ts","gl/factory/texture/texture-factory.ts","gl/lookup-tables.ts","gl/program/uniform-setters.ts","gl/program/program.ts","gl/shader/abstract-shader.ts","gl/factory/shader/shader-factory.ts","gl/calc/calc.ts","gl/factory/program/program-factory.ts","gl/buffer/array-buffer.ts","gl/factory/buffer/buffer-factory.ts","gl/camera/abstract-camera.ts","gl/camera/space-3d.ts","gl/camera/perpective/perspective.ts","gl/scene/scene.ts","gl/resize.ts","App/view/preview/preview.tsx","App/painter/painter.ts","gl/factory/mesh/mesh-definition.ts","gl/factory/mesh/common.ts","gl/mesh/mesh.ts","gl/mesh/fresnel/fresnel.ts","gl/factory/mesh/fresnel/fresnel-factory.ts","gl/mesh/outline/outline.ts","gl/factory/mesh/outline/outline-factory.ts","gl/factory/mesh/mesh-factory.ts","gl/transfo/transfo.ts","gl/transfo/polar-loc-sca.ts","App/world-obj.ts","App/world-obj-factory.ts","App/painter/golgoth.ts","App/painter/balzac.ts","App/painter/hydre.ts","App/painter/tyson.ts","gl/transfo/static-transfo.ts","App/painter/volcano/smoke/smoke.ts","App/painter/volcano/smoke/smoke-factory.ts","App/painter/volcano/volcano.ts","App/painter/stone/rain/rain.ts","App/painter/stone/rain/rain-factory.ts","App/painter/stone/stone.ts","App/painter/molino.ts","App/painter/umbrella.ts","App/view/intro/intro.tsx","App/view/game/game.tsx","App/view/controls/controls.tsx","App/manager/game.ts","App/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Pointer","canvas","_x","_y","_down","_downTime","_eventDown","_eventUp","onMouseMove","evt","computeCoords","clientX","clientY","onTouchMove","te","touches","onMouseDown","onDown","onTouchStart","onMouseUp","onUp","onTouchEnd","this","window","addEventListener","x","y","Date","now","pointerX","pointerY","rect","getBoundingClientRect","left","top","w","width","h","height","loadImage","url","Promise","resolve","reject","img","Image","onload","onerror","console","error","src","loadJson","loadText","a","fetch","request","text","JSON","parse","Texture","gl","id","target","texture","units","createTexture","Error","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE0","TEXTURE1","TEXTURE2","TEXTURE3","TEXTURE4","TEXTURE5","TEXTURE6","TEXTURE7","TEXTURE8","TEXTURE9","TEXTURE10","TEXTURE11","TEXTURE12","TEXTURE13","TEXTURE14","TEXTURE15","unitIndex","length","activeTexture","bindTexture","ImageTexture","params","smoothness","linear","LINEAR","NEAREST","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","source","confirmDestroy","deleteTexture","CubeMapTexture","TEXTURE_CUBE_MAP_POSITIVE_X","sourcePosX","TEXTURE_CUBE_MAP_NEGATIVE_X","sourceNegX","TEXTURE_CUBE_MAP_POSITIVE_Y","sourcePosY","TEXTURE_CUBE_MAP_NEGATIVE_Y","sourceNegY","TEXTURE_CUBE_MAP_POSITIVE_Z","sourcePosZ","TEXTURE_CUBE_MAP_NEGATIVE_Z","sourceNegZ","WebGL2RenderingContext","TEXTURE_WRAP_R","generateMipmap","LINEAR_MIPMAP_LINEAR","AssetsMap","lockedIds","Set","map","Map","sleepDelay","has","sleepAsync","add","delete","createValue","lockAsync","item","get","count","value","set","unlock","delayInMs","setTimeout","IAttributeType","IUniformType","IVaryingType","TextureFactory","imageTexturesMap","cubeMapTexturesMap","addAsync","AsyncLoader","remove","urlPattern","parts","split","join","imgPosX","imgNegX","imgPosY","imgNegY","imgPosZ","imgNegZ","getAttributeSize","type","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","getAttributeTypeCodeName","mapEnumAttributeTypeToStringType","getUniformTypeCodeName","mapEnumUniformTypeToStringType","getVaryingTypeCodeName","mapEnumVaryingTypeToStringType","getWebGLTypeFromAttributeType","FLOAT","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","BOOL","BYTE","SHORT","INT","UNSIGNED_SHORT","UNSIGNED_INT","SAMPLER_2D","SAMPLER_CUBE","UniformSetter","prg","uniformsDefinition","uniformSetters","attachProgram","name","setter","Object","keys","uniformName","getUniformLocation","uniformType","isArray","size","attachProgramInt","attachProgramFloat","attachProgramVec2","attachProgramVec3","attachProgramVec4","attachProgramMat2","attachProgramMat3","attachProgramMat4","displayWarningForNotFoundUniform","location","v","uniform1iv","uniform1i","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","warn","BPE","Float32Array","BYTES_PER_ELEMENT","Program","vertexShader","fragmentShader","attributes","buffer","bindBuffer","ARRAY_BUFFER","attrib","enableVertexAttribArray","vertexAttribPointer","normalization","totalSize","offset","detach","flatVertShader","flattenShaderDependencies","flatFragShader","varyings","flatVertShaderToCode","vertShaderCode","flatFragShaderToCode","fragShaderCode","vertShader","createVertexShader","fragShader","createFragementShader","createProgram","attachShader","linkProgram","prepareUniformsForFastBinding","uniforms","deleteProgram","attDef","attName","attType","getAttribLocation","LookupTables","push","useProgram","code","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","errorMessage","getShaderInfoLog","info","result","lines","lineNumber","line","pad","writeLineNumbers","unshift","RX_ERROR_MESSAGE","lastIndex","matcher","exec","lineNumberMatch","Number","firstLine","Math","max","lastLine","min","outputLines","n","getCodeSection","uniCode","getUniformsSourceCode","attCode","getAttributesSourceCode","varCode","getVaryingsSourceCode","getFunctionsSourceCode","functions","codeForFunctions","typeEnum","arraySuffix","typeString","functionNames","functionName","pop","functionCodeUrlOrArray","Array","functionCode","shadersAlreadyLoaded","flattenedShader","attributesDefinition","functionsDefinition","varyingsDefinition","main","dependenciesDefinition","depShader","indexOf","depFlattenedShader","mergeAttributes","mergeUniforms","mergeVaryings","mergeFunctions","ex","constructor","oldFunctions","newFunctions","funName","oldFun","newFun","oldAttribs","newAttribs","oldAtt","newAtt","oldUniforms","newUniforms","uniName","oldUni","newUni","oldVarying","newVarying","varName","oldVar","newVar","num","len","txt","AbstractShader","def","CustomVertexShader","CustomFragmentShader","definition","convertFriendlyUniforms","convertFriendlyAttributes","convertFriendlyVaryings","dependencies","convertFriendlyVertexDependencies","convertFriendlyFragmentDependencies","dep","key","convertFriendlyUniform","uniform","stringType","convertFriendlyAttribute","attribute","convertFriendlyVarying","varying","ProgramFactory","programMap","program","ShaderFactory","attach","ArrayBuffer","data","bufferData","STATIC_DRAW","deleteBuffer","BufferFactory","arrayBufferMap","createBuffer","arrayBuffer","setData","AbstractCamera","COS","SIN","vec3tmp1","vec3tmp2","vec3tmp3","vec3tmp4","i","angle","PI","cos","sin","vector","areEqual","b","createVec3","createVec4","add3","output","substract3","cross3","dot3","xa","ya","za","length3","input","sqrt","normalize3","lenInv","orbital3","latitude","longitude","radius","length4","z","normalize4","transform4","mat","vec","out","matrix","createMat3","createMat4","identity3","extract3From4","mat4","mat3","extractX3From4","vec3","extractX4From4","vec4","extractY3From4","extractY4From4","extractZ3From4","extractZ4From4","lookAt4","pos","up","dir","right","orthogonalUp","normalizedUp","multiply3","identity4","multiply4","output00","output10","output20","output30","output01","output11","output21","output31","output02","output12","output22","output32","output03","output13","output23","output33","invert4","a00","a10","a20","a30","a01","a11","a21","a31","a02","a12","a22","a32","a03","a13","a23","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","invDet","abs","det","rotation4X","c","s","rotation4Y","rotation4Z","deg2rad","deg","rad2deg","rad","FULL_TURN","clamp","M4_00","M4_10","M4_20","M4_30","M4_01","M4_11","M4_21","M4_31","M4_02","M4_12","M4_22","M4_32","M4_03","M4_13","M4_23","M4_33","M3_00","M3_10","M3_20","M3_01","M3_11","M3_21","M3_02","M3_12","M3_22","Space3D","cameraMatrix","Calc","rotationY","rotationX","targetX","targetY","targetZ","distance","lat","lng","tX","tY","tZ","DEFAULT_FIELD_ANGLE_RAD","Perspective","perspectiveMatrix","cameraMatrix3","fieldAngle","near","far","orbit","f","tan","rangeInv","use","uniPerspectiveMatrix","uniCameraMatrix","uniCameraMatrix3","worldPointToScreen","PointVertexShaderCode","worldVectorToScreen","VectorVertexShaderCode","Scene","resolution","onAnimation","_gl","_pointer","_isRendering","lastRenderingTime","textures","buffers","programs","camera","PerspectiveCamera","render","time","requestAnimationFrame","_resolution","devicePixelRatio","HTMLCanvasElement","displayWidth","floor","clientWidth","displayHeight","clientHeight","viewport","Resize","clearDepth","clear","DEPTH_BUFFER_BIT","depthFunc","LESS","disable","DEPTH_TEST","drawingBufferWidth","drawingBufferHeight","pointer","reset","getContext","savedRendering","savedLastRenderingTime","Preview","scene","refCanvas","React","createRef","current","props","painter","clearColor","dis","enable","COLOR_BUFFER_BIT","paint","isRendering","onLoad","classes","Tfw","Converter","StringArray","className","ref","Component","Painter","MeshDefinition","verticesCount","texturesCount","normalsCount","facesCount","vertices","normals","faces","VALUES_PER_FACE_VERTEX","index","ensureIndexInRange","charAt","faceIdx","pointIdx","idx","upperLimit","MeshDefinitions","createOrGetFromCacheMeshDefinition","definitionURL","Mesh","transfo","FresnelMesh","colorTexture","attributesCount","CULL_FACE","cullFace","BACK","setUniformValues","attachToUnit","bindAttribs","drawArrays","TRIANGLES","destroy","createAsync","colorTextureURL","Common","meshDef","createData","createArrayBuffer","createImageTextureAsync","createProgramAsync","uniObjectTransfo","attLocation","attUV","attNormal","varNormal","varReflexion","varUV","MainVertShader","uniTexture","MainFragShader","vertexIdx","getFaceVertex","getVertexX","getVertexY","getVertexZ","textureIdx","getFaceTexture","getTextureU","getTextureV","normalIdx","getFaceNormal","getNormalX","getNormalY","getNormalZ","OutlineMesh","color","thickness","r","g","FRONT","uniThickness","uniColor","Vertex","vertex","addNormal","normalX","normalY","normalZ","nx","ny","nz","Fresnel","Outline","Transfo","parent","composedTransfo","compute","PolarLocSca","_z","_sx","_sy","_sz","_lat","_lng","_dirty","sx","sy","sz","latRad","lngRad","cosX","sinX","cosY","sinY","WorldObj","body","outline","MeshFactory","Golgoth","mainObject","WorldObjFactory","Balzac","Hydre","Tyson","StaticTransfo","_transfo","t","SmokePainter","dropsCount","depthMask","BLEND","blendFunc","ONE","DST_ALPHA","POINTS","uniTime","uniDropSize","varTime","attShift","attCycle","attCycleInv","loop","cycleTime","rnd","LIFE_TIME","shiftTime","random","VolcanoIsland","smoke","SmokeFactory","RainPainter","LINES","varSegment","attSegment","TIME_TO_FALL","StoneIsland","helixObject","rain","RainFactory","MolinoIsland","Umbrella","_","Intl","make","require","Button","View","Intro","state","page","golgoth","balzac","hydre","tyson","done","handleLoad","setState","checkIsLoaded","handleNextPage","onDone","document","sectionPage","GolgothPainter","BalzacPainter","HydrePainter","TysonPainter","VolcanoPainter","icon","warning","onClick","MolinoPainter","StonePainter","UmbrellaPainter","Game","objects","loaded","sceneRender","move","initCamera","volcano","molino","umbrella","stone","gameManager","play","Controls","label","GameManager","animating","currentTime","beginTime","endTime","jumpers","steps","sides","timeUsed","locateIslands","alpha","getIslandsInfluence","locateUmbrella","locateHeroes","locateTyson","locateHydre","locateBalzac","locateGolgoth","remainingTime","alphaTime","aa","bb","Font","loadJosefin","loadMysteryQuest","App","intro","handleStart","removeSplash","splash","getElementById","classList","parentNode","removeChild","Boolean","hostname","match","Theme","register","bg0","bg3","apply","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f9fc1950.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/perspective.world-point-to-screen.34658b6e.vert\";","module.exports = __webpack_public_path__ + \"static/media/perspective.world-vector-to-screen.79a1763d.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.a91ec25c.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.a27a283f.frag\";","module.exports = __webpack_public_path__ + \"static/media/main.d0ebbab8.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.cb7cba22.frag\";","module.exports = __webpack_public_path__ + \"static/media/main.68b24702.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.ebbb337c.frag\";","module.exports = __webpack_public_path__ + \"static/media/main.f9be4724.vert\";","module.exports = __webpack_public_path__ + \"static/media/main.727c4dcd.frag\";","module.exports = __webpack_public_path__ + \"static/media/controls.b6ff455b.yaml\";","const HALF = 0.5\nconst DOUBLE = 2\n\nexport default class Pointer {\n    private _x = 0\n    private _y = 0\n    private _down = false\n    // If 0, pointer is up.\n    private _downTime = 0\n    private _eventDown = false\n    private _eventUp = false\n    private readonly canvas: HTMLCanvasElement\n\n    /** @hidden */\n    constructor(canvas: HTMLCanvasElement) {\n        this.canvas = canvas\n        window.addEventListener('mousemove', this.onMouseMove, true)\n        window.addEventListener('touchmove', this.onTouchMove, true)\n        window.addEventListener('mousedown', this.onMouseDown, true)\n        window.addEventListener('touchstart', this.onTouchStart, true)\n        window.addEventListener('mouseup', this.onMouseUp, true)\n        window.addEventListener('touchend', this.onTouchEnd, true)\n    }\n\n    /** @hidden */\n    reset() {\n        this._eventDown = false\n        this._eventUp = false\n    }\n\n    get x() {\n        return this._x\n    }\n    get y() {\n        return this._y\n    }\n\n    /** Test if the pointer is touching the screen. */\n    get down() {\n        return this._down\n    }\n    /** `true` only if the pointer started touching the screen this very last frame. */\n    get eventUp() {\n        return this._eventUp\n    }\n    /** `true` only if the pointer stopped touching the screen this very last frame. */\n    get eventDown() {\n        return this._eventDown\n    }\n\n    private readonly onMouseMove = (evt: MouseEvent) => {\n        this.computeCoords(evt.clientX, evt.clientY)\n    }\n\n    private readonly onTouchMove = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.computeCoords(evt.clientX, evt.clientY)\n    }\n\n    private readonly onMouseDown = (evt: MouseEvent) => {\n        this.onDown(evt.clientX, evt.clientY)\n    }\n\n    private readonly onTouchStart = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.onDown(evt.clientX, evt.clientY)\n    }\n\n    private onDown(x: number, y: number) {\n        if (this._downTime !== 0) { return }\n        this.computeCoords(x, y)\n        this._down = true\n        this._eventDown = true\n        this._downTime = Date.now()\n    }\n\n    private readonly onMouseUp = (evt: MouseEvent) => {\n        this.onUp(evt.clientX, evt.clientY)\n    }\n\n    private readonly onTouchEnd = (te: TouchEvent) => {\n        const evt = te.touches[0]\n        this.onUp(evt.clientX, evt.clientY)\n    }\n\n    private onUp(x: number, y: number) {\n        if (this._downTime === 0) { return }\n        this.computeCoords(x, y)\n        this._down = false\n        this._eventUp = true\n        this._downTime = 0\n    }\n\n    private computeCoords(pointerX: number, pointerY: number) {\n        const { canvas } = this\n        const rect = canvas.getBoundingClientRect()\n\n        const x = pointerX - rect.left\n        const y = pointerY - rect.top\n        const w = rect.width\n        const h = rect.height\n\n        this._x = DOUBLE * (x / w - HALF)\n        this._y = DOUBLE * (y / h - HALF)\n    }\n}\n","export default {\n    loadImage,\n    loadJson,\n    loadText\n}\n\n\nfunction loadImage(url: string): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        const img = new Image()\n        img.onload = () => resolve(img)\n        img.onerror = () => {\n            console.error(\"Unable to load image from URL:\", url)\n            reject(url)\n        }\n        img.src = url\n    })\n}\n\n\nasync function loadText(url: string): Promise<string> {\n    try {\n        const request = await fetch(url)\n        const text = await request.text()\n        return text\n    } catch (ex) {\n        console.error(\"Unable to load text from URL:\", url)\n        console.error(ex)\n        throw ex\n    }\n}\n\n\nasync function loadJson(url: string): Promise<{ [key: string]: any }> {\n    const text = await loadText(url)\n    try {\n        return JSON.parse(text)\n    } catch (ex) {\n        console.error(\"Unable to parse JSON:\", url)\n        console.error(ex)\n        throw ex\n    }\n}\n","import { IWebGL } from '../types'\n\ntype ITarget = \"2d\" | \"cubeMap\" | \"3d\" | \"2dArray\"\n\nexport default abstract class Texture {\n    protected readonly texture: WebGLTexture\n    protected readonly target: GLenum\n    protected readonly units: GLenum[]\n\n    constructor(\n        protected readonly gl: IWebGL,\n        protected readonly id: string,\n        target: ITarget\n    ) {\n        const texture = gl.createTexture()\n        if (!texture) throw Error(`[FlatLand] Unable to create texture \"${id}\"!`)\n        this.texture = texture\n        switch (target) {\n            case \"2d\":\n                this.target = gl.TEXTURE_2D\n                break\n            case \"cubeMap\":\n                this.target = gl.TEXTURE_CUBE_MAP\n                break\n            /*\n            case \"3d\":\n                this.target = gl.TEXTURE_3D\n                break\n            case \"2dArray\":\n                this.target = gl.TEXTURE_2D_ARRAY\n                break\n            */\n            default:\n                throw Error(`[FlatLand.Texture] Unknow target \"${target}\"! Available targets are \"2d\", \"cubeMap\", \"3d\" and \"2dArray\".`)\n        }\n        this.units = [\n            gl.TEXTURE0,\n            gl.TEXTURE1,\n            gl.TEXTURE2,\n            gl.TEXTURE3,\n            gl.TEXTURE4,\n            gl.TEXTURE5,\n            gl.TEXTURE6,\n            gl.TEXTURE7,\n            gl.TEXTURE8,\n            gl.TEXTURE9,\n            gl.TEXTURE10,\n            gl.TEXTURE11,\n            gl.TEXTURE12,\n            gl.TEXTURE13,\n            gl.TEXTURE14,\n            gl.TEXTURE15\n        ]\n    }\n\n    /**\n     * Remove the texture from the graphic card memory\n     * as soon as no one is using it anymore.\n     */\n    abstract destroy(): boolean\n\n    /**\n     * Attach this texture to a unit.\n     * If you use only one unit, your texture must be attached to unit 0.\n     */\n    attachToUnit(unitIndex: number) {\n        const { gl, texture, target, units } = this\n        if (unitIndex < 0) throw Error(\"[FlatLand.Texture.attachToUnit] unitIndex must be positive!\")\n        if (unitIndex > units.length - 1) throw Error(`[FlatLand.Texture.attachToUnit] unitIndex must be lower than ${units.length}!`)\n        gl.activeTexture(units[unitIndex])\n        gl.bindTexture(target, texture)\n    }\n}\n","import Texture from './texture'\nimport { IWebGL } from '../types'\n\nexport interface IImageTextureParams {\n    id: string\n    gl: IWebGL\n    source: HTMLImageElement | HTMLCanvasElement\n    width: number\n    height: number\n    linear: boolean\n    confirmDestroy(): boolean\n}\n\nexport default class ImageTexture extends Texture {\n    constructor(private readonly params: IImageTextureParams) {\n        super(params.gl, params.id, \"2d\")\n\n        const { gl } = params\n        const smoothness = params.linear ? gl.LINEAR : gl.NEAREST\n        gl.bindTexture(gl.TEXTURE_2D, this.texture)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, smoothness)\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, smoothness)\n\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, params.source)\n    }\n\n    get width() { return this.params.width }\n    get height() { return this.params.height }\n\n    update(source: HTMLImageElement | HTMLCanvasElement) {\n        const { gl } = this.params\n        gl.bindTexture(gl.TEXTURE_2D, this.texture)\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, source)\n    }\n\n    /**\n     * When a client doen't need this texture anymore,\n     * it calls `destroy()` on it.\n     * The texture will be destroyed if this is the last client using it.\n     */\n    destroy() {\n        if (!this.params.confirmDestroy()) return false\n        this.params.gl.deleteTexture(this.texture)\n        return true\n    }\n}\n","import Texture from './texture'\n\nexport interface ICubeMapTextureParams {\n    id: string,\n    gl: WebGL2RenderingContext | WebGLRenderingContext,\n    sourcePosX: HTMLImageElement | HTMLCanvasElement,\n    sourceNegX: HTMLImageElement | HTMLCanvasElement,\n    sourcePosY: HTMLImageElement | HTMLCanvasElement,\n    sourceNegY: HTMLImageElement | HTMLCanvasElement,\n    sourcePosZ: HTMLImageElement | HTMLCanvasElement,\n    sourceNegZ: HTMLImageElement | HTMLCanvasElement,\n    confirmDestroy(): boolean\n}\n\nexport default class CubeMapTexture extends Texture {\n    constructor(private params: ICubeMapTextureParams) {\n        super(params.gl, params.id, \"cubeMap\")\n\n        const { gl } = params\n        gl.bindTexture(gl.TEXTURE_CUBE_MAP, this.texture)\n\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourcePosX)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourceNegX)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourcePosY)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourceNegY)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourcePosZ)\n        gl.texImage2D(\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE,\n            params.sourceNegZ)\n\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n        if (gl instanceof WebGL2RenderingContext) {\n            gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE)\n        }\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP)\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, gl.LINEAR_MIPMAP_LINEAR)\n    }\n\n    /**\n     * When a client doen't need this texture anymore,\n     * it calls `destroy()` on it.\n     * The texture will be destroyed if this is the last client using it.\n     */\n    destroy() {\n        if (!this.params.confirmDestroy()) return false\n        this.params.gl.deleteTexture(this.texture)\n        return true\n    }\n\n}\n","export default class AssetsMap<T> {\n    private lockedIds = new Set<string>()\n    private map = new Map<string, { count: number, value: T }>()\n\n\n    private async lockAsync(id: string): Promise<void> {\n        const sleepDelay = 100\n        const { lockedIds } = this\n        while (lockedIds.has(id)) {\n            await sleepAsync(sleepDelay)\n        }\n        lockedIds.add(id)\n    }\n\n    private unlock(id: string) {\n        this.lockedIds.delete(id)\n    }\n\n    /**\n     * If the ID already exist, the link counter is incremented and nothing else is done.\n     * Otherwise, the async function `createValue` is called and its return is stored in the map.\n     *\n     * This function is thread-safe.\n     * Fo the same ID, `createValue` is only called for the first call of `add`.\n     */\n    async addAsync(id: string, createValue: () => Promise<T>): Promise<T> {\n        await this.lockAsync(id)\n        try {\n            const { map } = this\n            if (map.has(id)) {\n                const item = map.get(id)\n                if (!item) throw Error(\"Impossible error on map!\")\n                item.count++\n                return item.value\n            }\n            const value = await createValue()\n            map.set(id, { count: 1, value })\n            return value\n        } finally {\n            this.unlock(id)\n        }\n    }\n\n    add(id: string, createValue: () => T): T {\n        const { map } = this\n        if (map.has(id)) {\n            const item = map.get(id)\n            if (!item) throw Error(\"Impossible error on map!\")\n            item.count++\n            return item.value\n        }\n        const value = createValue()\n        map.set(id, { count: 1, value })\n        return value\n    }\n\n    /**\n     * Remove an item from the map and return -1 if this item does not exist.\n     * Otherwise, it will return the number of links still attached to this item.\n     * 0 means that no one is using this item anymore and cleanup can be performed.\n     */\n    remove(id: string): number {\n        const item = this.map.get(id)\n        if (!item) return -1\n        item.count--\n        if (item.count <= 0) {\n            this.map.delete(id)\n        }\n        return item.count\n    }\n}\n\n\nasync function sleepAsync(delayInMs: number): Promise<void> {\n    return new Promise(resolve => window.setTimeout(resolve, delayInMs))\n}\n","export enum IAttributeType {\n    //INT, BYTE, SHORT, UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT,\n    FLOAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4\n}\n\nexport enum IUniformType {\n    FLOAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4, FLOAT_MAT2, FLOAT_MAT3, FLOAT_MAT4,\n    BYTE, UNSIGNED_BYTE, SHORT, UNSIGNED_SHORT, INT, UNSIGNED_INT,\n    BOOL,\n    SAMPLER_2D, SAMPLER_CUBE\n}\n\nexport enum IVaryingType {\n    FLOAT, FLOAT_VEC2, FLOAT_VEC3, FLOAT_VEC4, FLOAT_MAT2, FLOAT_MAT3, FLOAT_MAT4\n}\n\nexport interface IAttributeTypes { [key: string]: IAttributeType }\n\nexport interface IFunctionTypes { [key: string]: string | string[] }\n\nexport interface IUniformTypes {\n    [key: string]: {\n        type: IUniformType,\n        size?: number\n    }\n}\n\nexport interface IVaryingTypes {\n    [key: string]: {\n        type: IVaryingType,\n        size?: number\n    }\n}\n\nexport type IUniformSetterNumber = (value: number) => void\nexport type IUniformSetterFloat32Array = (value: Float32Array) => void\nexport type IUniformSetterInt32Array = (value: Int32Array) => void\nexport type IUniformSetter = IUniformSetterNumber | IUniformSetterFloat32Array | IUniformSetterInt32Array\n\nexport type IWebGL = WebGLRenderingContext | WebGL2RenderingContext\n\nexport type IVec3 = Float32Array\nexport type IVec4 = Float32Array\nexport type IMat3 = Float32Array\nexport type IMat4 = Float32Array\n\nexport type IUniformStringType =\n    \"float\" | \"vec2\" | \"vec3\" | \"vec4\" | \"mat2\" | \"mat3\" | \"mat4\" | \"sampler2D\" | \"samplerCube\"\nexport type IAttributeStringType =\n    \"float\" | \"vec2\" | \"vec3\" | \"vec4\"\nexport type IVaryingStringType =\n    \"float\" | \"vec2\" | \"vec3\" | \"vec4\" | \"mat2\" | \"mat3\" | \"mat4\"\n\ninterface IMap<T> { [key: string]: T }\ntype IArray<T> = T | [T, number]\n\ninterface IFriendlyShaderDefinition {\n    uniforms: IMap<IArray<IUniformStringType>>\n    functions: IFunctionTypes\n}\n\nexport interface IFriendlyFragmentDefinition extends IFriendlyShaderDefinition {\n    dependencies: Array<Partial<IFriendlyFragmentDefinition>>\n}\n\nexport interface IFriendlyVertexDefinition extends IFriendlyShaderDefinition {\n    attributes: IMap<IAttributeStringType>\n    varyings: IMap<IArray<IVaryingStringType>>\n    dependencies: Array<Partial<IFriendlyVertexDefinition>>\n}\n","import AsyncLoader from '../../async-loader'\nimport ImageTexture from '../../texture/image-texture'\nimport CubeMapTexture from '../../texture/cube-map-texture'\nimport AssetsMap from '../../assets-map'\nimport { IWebGL } from '../../types'\n\ninterface IImageTextureParams {\n    url: string\n    linear: boolean\n}\n\nexport default class TextureFactory {\n    private imageTexturesMap = new AssetsMap<ImageTexture>()\n    private cubeMapTexturesMap = new AssetsMap<CubeMapTexture>()\n\n    constructor(private gl: IWebGL) { }\n\n    async createImageTextureAsync(params: IImageTextureParams): Promise<ImageTexture> {\n        return this.imageTexturesMap.addAsync(\n            params.url,\n            async () => {\n                const { gl } = this\n                const { url, linear } = params\n\n                const img = await AsyncLoader.loadImage(url)\n                const texture = new ImageTexture({\n                    id: url,\n                    gl,\n                    source: img,\n                    width: img.width,\n                    height: img.height,\n                    linear,\n                    confirmDestroy: () => this.imageTexturesMap.remove(url) === 0\n                })\n                return texture\n            }\n        )\n    }\n\n    /**\n     * The pattern is used to load 6 images:\n     * posX (1), negX (2), posY (3), negY (4), posZ (5) and negZ (6).\n     *\n     * The image index (1 to 6) will replace the question mark in the pattern.\n     * Example:\n     * createCubeMapTextureAsync(\"texture-000?.png\")\n     */\n    async createCubeMapTextureAsync(urlPattern: string): Promise<CubeMapTexture> {\n        return this.cubeMapTexturesMap.addAsync(\n            urlPattern,\n            async () => {\n                const { gl } = this\n\n                const parts = urlPattern.split('?')\n                const imgPosX = await AsyncLoader.loadImage(parts.join(\"1\"))\n                const imgNegX = await AsyncLoader.loadImage(parts.join(\"2\"))\n                const imgPosY = await AsyncLoader.loadImage(parts.join(\"3\"))\n                const imgNegY = await AsyncLoader.loadImage(parts.join(\"4\"))\n                const imgPosZ = await AsyncLoader.loadImage(parts.join(\"5\"))\n                const imgNegZ = await AsyncLoader.loadImage(parts.join(\"6\"))\n                const texture = new CubeMapTexture({\n                    gl,\n                    id: urlPattern,\n                    sourcePosX: imgPosX,\n                    sourceNegX: imgNegX,\n                    sourcePosY: imgPosY,\n                    sourceNegY: imgNegY,\n                    sourcePosZ: imgPosZ,\n                    sourceNegZ: imgNegZ,\n                    confirmDestroy: () => this.cubeMapTexturesMap.remove(urlPattern) === 0\n                })\n                return texture\n            }\n        )\n    }\n}\n","import {\n    IWebGL,\n    IAttributeType,\n    IVaryingType,\n    IUniformType\n} from './types'\n\nexport default {\n    getAttributeSize,\n    getAttributeTypeCodeName,\n    getUniformTypeCodeName,\n    getVaryingTypeCodeName,\n    getWebGLTypeFromAttributeType\n}\n\nfunction getWebGLTypeFromAttributeType(gl: IWebGL, type: IAttributeType): number {\n    switch (type) {\n        case IAttributeType.FLOAT_VEC2: return gl.FLOAT_VEC2\n        case IAttributeType.FLOAT_VEC3: return gl.FLOAT_VEC3\n        case IAttributeType.FLOAT_VEC4: return gl.FLOAT_VEC4\n        default: return gl.FLOAT\n    }\n}\n\nfunction getAttributeTypeCodeName(type: IAttributeType): string | undefined {\n    return mapEnumAttributeTypeToStringType.get(type)\n}\n\nfunction getUniformTypeCodeName(type: IUniformType): string | undefined {\n    return mapEnumUniformTypeToStringType.get(type)\n}\n\nfunction getVaryingTypeCodeName(type: IVaryingType): string | undefined {\n    return mapEnumVaryingTypeToStringType.get(type)\n}\n\nfunction getAttributeSize(type: IAttributeType): number {\n    switch (type) {\n        case IAttributeType.FLOAT_VEC2: return 2\n        case IAttributeType.FLOAT_VEC3: return 3\n        case IAttributeType.FLOAT_VEC4: return 4\n        default: return 1\n    }\n}\n\n\nconst mapEnumAttributeTypeToStringType = new Map<IAttributeType, string>()\n\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT, \"float\")\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT_VEC2, \"vec2\")\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT_VEC3, \"vec3\")\nmapEnumAttributeTypeToStringType.set(IAttributeType.FLOAT_VEC4, \"vec4\")\n\nconst mapEnumVaryingTypeToStringType = new Map<IVaryingType, string>()\n\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT, \"float\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_VEC2, \"vec2\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_VEC3, \"vec3\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_VEC4, \"vec4\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_MAT2, \"mat2\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_MAT3, \"mat3\")\nmapEnumVaryingTypeToStringType.set(IVaryingType.FLOAT_MAT4, \"mat4\")\n\nconst mapEnumUniformTypeToStringType = new Map<IUniformType, string>()\n\nmapEnumUniformTypeToStringType.set(IUniformType.BOOL, \"bool\")\nmapEnumUniformTypeToStringType.set(IUniformType.BYTE, \"int\")\nmapEnumUniformTypeToStringType.set(IUniformType.SHORT, \"int\")\nmapEnumUniformTypeToStringType.set(IUniformType.INT, \"int\")\nmapEnumUniformTypeToStringType.set(IUniformType.UNSIGNED_BYTE, \"uint\")\nmapEnumUniformTypeToStringType.set(IUniformType.UNSIGNED_SHORT, \"uint\")\nmapEnumUniformTypeToStringType.set(IUniformType.UNSIGNED_INT, \"uint\")\nmapEnumUniformTypeToStringType.set(IUniformType.SAMPLER_2D, \"sampler2D\")\nmapEnumUniformTypeToStringType.set(IUniformType.SAMPLER_CUBE, \"samplerCube\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT, \"float\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_VEC2, \"vec2\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_VEC3, \"vec3\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_VEC4, \"vec4\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_MAT2, \"mat2\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_MAT3, \"mat3\")\nmapEnumUniformTypeToStringType.set(IUniformType.FLOAT_MAT4, \"mat4\")\n","import {\n    IUniformSetter,\n    IUniformTypes,\n    IUniformType,\n    IWebGL\n} from '../types'\n\nexport default class UniformSetter {\n    private uniformSetters = new Map<string, IUniformSetter>()\n\n    constructor(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        private uniformsDefinition: IUniformTypes\n    ) {\n        this.attachProgram(gl, prg)\n    }\n\n    set(name: string, value: number | Float32Array | Int32Array) {\n        const setter = this.uniformSetters.get(name)\n        if (!setter) return\n        setter(value as any)\n    }\n\n    exists(name: string): boolean {\n        return this.uniformSetters.has(name)\n    }\n\n    private attachProgram(gl: IWebGL, prg: WebGLProgram) {\n        for (const uniformName of Object.keys(this.uniformsDefinition)) {\n            const location: WebGLUniformLocation | null =\n                gl.getUniformLocation(prg, uniformName)\n            if (!location) {\n                displayWarningForNotFoundUniform(uniformName)\n                continue\n            }\n\n            const uniformType = this.uniformsDefinition[uniformName]\n            const isArray = uniformType.size && uniformType.size > 1 ? true : false\n\n            switch (uniformType.type) {\n                case IUniformType.BYTE:\n                case IUniformType.UNSIGNED_BYTE:\n                case IUniformType.SHORT:\n                case IUniformType.UNSIGNED_SHORT:\n                case IUniformType.INT:\n                case IUniformType.UNSIGNED_INT:\n                case IUniformType.SAMPLER_2D: // For 2D textures, we specify the texture unit.\n                case IUniformType.SAMPLER_CUBE: // For CubeMap textures, we specify the texture unit.\n                    this.attachProgramInt(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT:\n                    this.attachProgramFloat(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_VEC2:\n                    this.attachProgramVec2(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_VEC3:\n                    this.attachProgramVec3(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_VEC4:\n                    this.attachProgramVec4(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_MAT2:\n                    this.attachProgramMat2(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_MAT3:\n                    this.attachProgramMat3(gl, prg, uniformName, isArray)\n                    break\n                case IUniformType.FLOAT_MAT4:\n                    this.attachProgramMat4(gl, prg, uniformName, isArray)\n                    break\n                default:\n                    throw Error(`[AbstractShader.attachProgram] Unknown type for uniform \"${uniformName}\": ${uniformType.type}[${uniformType.size || 1}]!`)\n            }\n        }\n    }\n\n    private attachProgramInt(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            isArray ?\n                (v: Int32Array) => gl.uniform1iv(location, v) :\n                (v: number) => gl.uniform1i(location, v)\n        )\n    }\n\n    private attachProgramFloat(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            isArray ?\n                (v: Float32Array) => gl.uniform1fv(location, v) :\n                (v: number) => gl.uniform1f(location, v)\n        )\n    }\n\n    private attachProgramVec2(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of vec2!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniform2fv(location, v)\n        )\n    }\n\n    private attachProgramVec3(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of vec3!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniform3fv(location, v)\n        )\n    }\n\n    private attachProgramVec4(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of vec4!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniform4fv(location, v)\n        )\n    }\n\n    private attachProgramMat2(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of mat2!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniformMatrix2fv(location, false, v)\n        )\n    }\n\n    private attachProgramMat3(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of mat3!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniformMatrix3fv(location, false, v)\n        )\n    }\n\n    private attachProgramMat4(\n        gl: IWebGL,\n        prg: WebGLProgram,\n        uniformName: string,\n        isArray: boolean\n    ) {\n        if (isArray) throw Error(\"You cannot use array of mat4!\")\n        const location = gl.getUniformLocation(prg, uniformName)\n        this.uniformSetters.set(\n            uniformName,\n            (v: Float32Array) => gl.uniformMatrix4fv(location, false, v)\n        )\n    }\n}\n\nfunction displayWarningForNotFoundUniform(uniformName: string) {\n    console.warn(`Uniform \"${uniformName}\" has not been compiled in this program!`)\n    console.warn(\"Shader compilation removes everything that is not used by the code.\")\n}\n","import Shader from '../shader/abstract-shader'\nimport AsyncLoader from '../async-loader'\nimport LookupTables from '../lookup-tables'\nimport UniformSetter from './uniform-setters'\n\nimport {\n    IAttributeTypes,\n    IVaryingTypes,\n    IUniformTypes,\n    IFunctionTypes,\n    IWebGL\n} from '../types'\n\n\nconst BPE = Float32Array.BYTES_PER_ELEMENT\n\ninterface IWebGLAttribute {\n    location: number\n    size: number\n    type: number\n    normalization: boolean\n    totalSize: number\n    offset: number\n}\n\nexport default class Program {\n    private prg?: WebGLProgram\n    public readonly vertexShader: Shader\n    public readonly fragmentShader: Shader\n    // Attributes ready for binding.\n    private attributes: IWebGLAttribute[] = []\n    private uniformSetters?: UniformSetter\n\n    constructor(\n        private gl: IWebGL,\n        vertexShader: Shader,\n        fragmentShader: Shader\n    ) {\n        this.vertexShader = vertexShader\n        this.fragmentShader = fragmentShader\n    }\n\n    bindAttribs(buffer: WebGLBuffer) {\n        const { gl, prg, attributes } = this\n        if (!prg) throw Error(\"This program has not been attached yet!\")\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n\n        for (const attrib of attributes) {\n            gl.enableVertexAttribArray(attrib.location)\n            gl.vertexAttribPointer(\n                attrib.location,\n                attrib.size,\n                gl.FLOAT,\n                attrib.normalization, // No normalisation.\n                attrib.totalSize,\n                attrib.offset\n            )\n        }\n    }\n\n    async attach() {\n        if (this.prg) this.detach()\n\n        const flatVertShader = flattenShaderDependencies(this.vertexShader)\n        const flatFragShader = flattenShaderDependencies(this.fragmentShader)\n\n        // No attributes in fragment shaders.\n        flatFragShader.attributes = {}\n        // Varying must reflect those of vertex shader.\n        flatFragShader.varyings = {\n            ...flatVertShader.varyings,\n            ...flatFragShader.varyings\n        }\n\n        const vertShaderCode = await flatVertShaderToCode(flatVertShader)\n        const fragShaderCode = await flatFragShaderToCode(flatFragShader)\n\n        const { gl } = this\n        const vertShader = createVertexShader(gl, vertShaderCode)\n        const fragShader = createFragementShader(gl, fragShaderCode)\n\n        const prg = gl.createProgram()\n        if (!prg) throw Error(\"Unable to create a new WebGLProgram!\")\n        this.prg = prg\n\n        gl.attachShader(prg, vertShader)\n        gl.attachShader(prg, fragShader)\n        gl.linkProgram(prg)\n\n        this.prepareUniformsForFastBinding(flatVertShader.attributes)\n        this.uniformSetters = new UniformSetter(\n            this.gl, this.prg, {\n                ...flatVertShader.uniforms,\n                ...flatFragShader.uniforms\n            }\n        )\n    }\n\n    get uniforms(): UniformSetter {\n        const { uniformSetters } = this\n        if (!uniformSetters) {\n            throw Error(\n                \"Can't get uniforms because the program has not been attached yet!\\nprg.attach()\"\n            )\n        }\n        return uniformSetters\n    }\n\n    detach() {\n        const { prg, gl } = this\n        if (!prg) return\n        gl.deleteProgram(prg)\n        delete this.prg\n    }\n\n    private prepareUniformsForFastBinding(attDef: IAttributeTypes) {\n        const { gl, prg } = this\n        if (!prg) throw Error(\"This program has not been attached yet!\")\n\n        const attributes: IWebGLAttribute[] = []\n        let offset = 0\n        for (const attName of Object.keys(attDef)) {\n            const attType = attDef[attName]\n            const location = gl.getAttribLocation(prg, attName)\n            const attrib: IWebGLAttribute = {\n                location,\n                offset,\n                normalization: false,\n                size: LookupTables.getAttributeSize(attType),\n                totalSize: 0,\n                type: LookupTables.getWebGLTypeFromAttributeType(gl, attType)\n            }\n            attributes.push(attrib)\n            offset += attrib.size * BPE\n        }\n\n        const totalSize = offset\n        for (const attrib of attributes) {\n            attrib.totalSize = totalSize\n        }\n\n        this.attributes = attributes\n    }\n\n    use() {\n        const { prg, gl } = this\n        if (!prg) throw Error(\"This program has not been attached yet!\")\n        gl.useProgram(prg)\n    }\n}\n\nfunction createVertexShader(gl: IWebGL, code: string) {\n    return createShader(gl.VERTEX_SHADER, gl, code)\n}\n\nfunction createFragementShader(gl: IWebGL, code: string) {\n    return createShader(gl.FRAGMENT_SHADER, gl, code)\n}\n\nfunction createShader(type: number, gl: IWebGL, code: string): WebGLShader {\n    if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\n        throw Error('Type must be VERTEX_SHADER or FRAGMENT_SHADER!')\n    }\n    const shader = gl.createShader(type)\n    if (!shader) {\n        throw Error(\n            `Unable to create a ${type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT'} shader!`\n        )\n    }\n    gl.shaderSource(shader, code)\n    gl.compileShader(shader)\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        const errorMessage: string = gl.getShaderInfoLog(shader) || \"NULL\"\n        console.error(`An error occurred compiling the shader with the following code:`)\n        // tslint:disable-next-line:no-console\n        console.info(writeLineNumbers(code))\n        // tslint:disable-next-line:no-console\n        console.error(`Here is the error: ${errorMessage}`)\n        // tslint:disable-next-line:no-console\n        console.info(getCodeSection(code, errorMessage))\n        // tslint:disable-next-line:no-console\n        throw Error(\n            `Unable to create a ${type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT'} shader!`\n        )\n    }\n\n    return shader\n}\n\nasync function flatVertShaderToCode(shader: IFlattenedShader): Promise<string> {\n    const code: string[] = []\n    const uniCode = getUniformsSourceCode(shader.uniforms)\n    if (uniCode) code.push(uniCode)\n    const attCode = getAttributesSourceCode(shader.attributes)\n    if (attCode) code.push(attCode)\n    const varCode = getVaryingsSourceCode(shader.varyings)\n    if (varCode) code.push(varCode)\n\n    const codeForFunctions = await getFunctionsSourceCode(shader.functions)\n    code.push(codeForFunctions)\n\n    return code.join(\"\\n\")\n}\n\nasync function flatFragShaderToCode(shader: IFlattenedShader): Promise<string> {\n    const code: string[] = [\n        \"precision mediump float;\"\n    ]\n    const uniCode = getUniformsSourceCode(shader.uniforms)\n    if (uniCode) code.push(uniCode)\n    const varCode = getVaryingsSourceCode(shader.varyings)\n    if (varCode) code.push(varCode)\n\n    const codeForFunctions = await getFunctionsSourceCode(shader.functions)\n    code.push(codeForFunctions)\n\n    return code.join(\"\\n\")\n}\n\nfunction getUniformsSourceCode(uniforms: IUniformTypes) {\n    return Object.keys(uniforms)\n        .map(name => {\n            const typeEnum = uniforms[name]\n            const type = LookupTables.getUniformTypeCodeName(typeEnum.type)\n            if (!type) {\n                throw Error(`Unknown type for uniform \"${name}\": ${typeEnum}!`)\n            }\n            const arraySuffix =\n                (typeEnum.size || 0) > 1 ?\n                    `[${typeEnum.size}]` : \"\"\n            return `uniform ${type} ${name}${arraySuffix};`\n        })\n        .join(\"\\n\")\n}\n\nfunction getVaryingsSourceCode(varyings: IVaryingTypes) {\n    return Object.keys(varyings)\n        .map(name => {\n            const typeEnum = varyings[name]\n            const type = LookupTables.getVaryingTypeCodeName(typeEnum.type)\n            if (!type) {\n                throw Error(`Unknown type for varying \"${name}\": ${typeEnum}!`)\n            }\n            const arraySuffix =\n                (typeEnum.size || 0) > 1 ?\n                    `[${typeEnum.size}]` : \"\"\n            return `varying ${type} ${name}${arraySuffix};`\n        })\n        .join(\"\\n\")\n}\n\nfunction getAttributesSourceCode(attributes: IAttributeTypes) {\n    return Object.keys(attributes)\n        .map(name => {\n            const typeEnum = attributes[name]\n            const typeString = LookupTables.getAttributeTypeCodeName(typeEnum)\n            if (!typeString) {\n                throw Error(`Unknown type for attribute \"${name}\": ${typeEnum}!`)\n            }\n            return `attribute ${typeString} ${name};`\n        })\n        .join(\"\\n\")\n}\n\nasync function getFunctionsSourceCode(functions: IFunctionTypes): Promise<string> {\n    const code: string[] = []\n    const functionNames = Object.keys(functions)\n\n    // Take the functions in reverve order because the dependencies\n    // must be declared first.\n    while (functionNames.length > 0) {\n        const functionName = functionNames.pop()\n        if (!functionName) break\n        const functionCodeUrlOrArray = functions[functionName]\n        if (Array.isArray(functionCodeUrlOrArray)) {\n            code.push(...functionCodeUrlOrArray)\n        } else {\n            const functionCode = await AsyncLoader.loadText(functionCodeUrlOrArray)\n            code.push(functionCode)\n        }\n    }\n\n    return code.join(\"\\n\")\n}\n\nconst RX_ERROR_MESSAGE = /ERROR: ([0-9]+):([0-9]+):/g\n\n/**\n * Return a portion of the code that is two lines before the error and two lines after.\n */\nfunction getCodeSection(code: string, errorMessage: string) {\n    const lines = code.split(/\\n\\r?/)\n    lines.unshift(\"\")  // Because lines numbers start at 1\n    RX_ERROR_MESSAGE.lastIndex = -1  // Reinit RegExp\n    const matcher = RX_ERROR_MESSAGE.exec(errorMessage)\n    if (!matcher) {\n        return code\n    }\n    const SURROUNDING_LINES = 2\n    const [, , lineNumberMatch] = matcher\n    const lineNumber = Number(lineNumberMatch)\n    const firstLine = Math.max(1, lineNumber - SURROUNDING_LINES)\n    const lastLine = Math.min(lines.length - 1, lineNumber + SURROUNDING_LINES)\n    const outputLines = [\"Here is an extract of the shader code:\"]\n    for (let n = firstLine; n <= lastLine; n++) {\n        outputLines.push(\n            `| ${n}:    ${lines[n]}`\n        )\n    }\n    return outputLines.join(\"\\n\")\n}\n\n/**\n * A shader can have dependencies.\n * The final shader code will be an aggregate of it's own code and of the\n * the code of all its dependencies.\n * Checks will be done to prevent declaration of same variables with\n * different types.\n */\nfunction flattenShaderDependencies(\n    shader: Shader,\n    shadersAlreadyLoaded: Shader[] = []\n): IFlattenedShader {\n    try {\n        const flattenedShader: IFlattenedShader = {\n            attributes: { ...shader.attributesDefinition },\n            functions: { ...shader.functionsDefinition },\n            uniforms: { ...shader.uniformsDefinition },\n            varyings: { ...shader.varyingsDefinition }\n        }\n\n        if (shadersAlreadyLoaded.length === 0 && typeof flattenedShader.functions.main === 'undefined') {\n            throw Error(\"A shader must have a 'void main()' function!\")\n        }\n        shadersAlreadyLoaded.push(shader)\n\n        for (const depShader of shader.dependenciesDefinition) {\n            // Skip already included shaders.\n            if (shadersAlreadyLoaded.indexOf(depShader) !== -1) continue\n\n            const depFlattenedShader: IFlattenedShader = {\n                attributes: { ...depShader.attributesDefinition },\n                functions: { ...depShader.functionsDefinition },\n                uniforms: { ...depShader.uniformsDefinition },\n                varyings: { ...depShader.varyingsDefinition }\n            }\n            // Remove potential main function because it has no sense for dependencies.\n            delete depFlattenedShader.functions.main\n\n            // Merge with current shader.\n            mergeAttributes(flattenedShader.attributes, depFlattenedShader.attributes)\n            mergeUniforms(flattenedShader.uniforms, depFlattenedShader.uniforms)\n            mergeVaryings(flattenedShader.varyings, depFlattenedShader.varyings)\n            mergeFunctions(flattenedShader.functions, depFlattenedShader.functions)\n        }\n\n        return flattenedShader\n    } catch (ex) {\n        throw Error(`Error in ${shader.constructor.name}:\\n${ex}`)\n    }\n}\n\n/**\n * We just ignore functions that have already been declared.\n * We don't check if the code is different.\n */\nfunction mergeFunctions(oldFunctions: IFunctionTypes, newFunctions: IFunctionTypes) {\n    for (const funName of Object.keys(newFunctions)) {\n        const oldFun = oldFunctions[funName]\n        const newFun = newFunctions[funName]\n        if (!oldFun) {\n            // Brand new attribute.\n            oldFunctions[funName] = newFun\n        }\n    }\n}\n\nfunction mergeAttributes(oldAttribs: IAttributeTypes, newAttribs: IAttributeTypes) {\n    for (const attName of Object.keys(newAttribs)) {\n        const oldAtt = oldAttribs[attName]\n        const newAtt = newAttribs[attName]\n        if (!oldAtt) {\n            // Brand new attribute.\n            oldAttribs[attName] = newAtt\n        } else {\n            // This attributes already exists.\n            // Check if the types are the same.\n            if (oldAtt !== newAtt) {\n                throw Error(`Attribute \"${attName}\" is redeclared in a dependency, but with a different type!`)\n            }\n        }\n    }\n}\n\nfunction mergeUniforms(oldUniforms: IUniformTypes, newUniforms: IUniformTypes) {\n    for (const uniName of Object.keys(newUniforms)) {\n        const oldUni = oldUniforms[uniName]\n        const newUni = newUniforms[uniName]\n        if (!oldUni) {\n            // Brand new uniform.\n            oldUniforms[uniName] = newUni\n        } else {\n            // This attributes already exists.\n            // Check if the types are the same.\n            if (oldUni.type !== newUni.type) {\n                throw Error(`Uniform \"${uniName}\" is redeclared in a dependency, but with a different type!`)\n            }\n            if ((oldUni.size || 1) !== (newUni.size || 1)) {\n                throw Error(`Uniform \"${uniName}[]\" is redeclared in a dependency, but with a different number of items!`)\n            }\n        }\n    }\n}\n\nfunction mergeVaryings(oldVarying: IVaryingTypes, newVarying: IVaryingTypes) {\n    for (const varName of Object.keys(newVarying)) {\n        const oldVar = oldVarying[varName]\n        const newVar = newVarying[varName]\n        if (!oldVar) {\n            // Brand new varying.\n            oldVarying[varName] = newVar\n        } else {\n            // This attributes already exists.\n            // Check if the types are the same.\n            if (oldVar.type !== newVar.type) {\n                throw Error(`Varying \"${varName}\" is redeclared in a dependency, but with a different type!`)\n            }\n            if ((oldVar.size || 1) !== (newVar.size || 1)) {\n                throw Error(`Varying \"${varName}[]\" is redeclared in a dependency, but with a different number of items!`)\n            }\n        }\n    }\n}\n\nfunction writeLineNumbers(code: string) {\n    const result: string[] = []\n    const lines = code.split(\"\\n\")\n    let lineNumber = 0\n    for (const line of lines) {\n        lineNumber++\n        result.push(`${pad(lineNumber)} | ${line}`)\n    }\n\n    return result.join(\"\\n\")\n}\n\nfunction pad(num: number, len: number = 3) {\n    let txt = `${num}`\n    while (txt.length < len) txt = ` ${txt}`\n    return txt\n}\n\ninterface IFlattenedShader {\n    attributes: IAttributeTypes\n    functions: IFunctionTypes\n    uniforms: IUniformTypes\n    varyings: IVaryingTypes\n}\n","import {\n    IFunctionTypes,\n    IAttributeTypes,\n    IVaryingTypes,\n    IUniformType, IUniformTypes,\n    IUniformSetter,\n    IWebGL\n} from '../types'\n\nexport default abstract class AbstractShader {\n    abstract get uniformsDefinition(): IUniformTypes\n    abstract get attributesDefinition(): IAttributeTypes\n    abstract get varyingsDefinition(): IVaryingTypes\n    abstract get functionsDefinition(): IFunctionTypes\n    abstract get dependenciesDefinition(): AbstractShader[]\n}\n","import AbstractShader from '../../shader/abstract-shader'\nimport {\n    IAttributeType,\n    IAttributeTypes,\n    IVaryingType,\n    IVaryingTypes,\n    IUniformType,\n    IUniformTypes,\n    IFunctionTypes,\n    IFriendlyVertexDefinition,\n    IFriendlyFragmentDefinition,\n    IUniformStringType,\n    IAttributeStringType,\n    IVaryingStringType\n} from '../../types'\n\nexport default {\n    createVertShader: (def: Partial<IFriendlyVertexDefinition>) =>\n        new CustomVertexShader(def),\n    createFragShader: (def: Partial<IFriendlyFragmentDefinition>) =>\n        new CustomFragmentShader(def)\n}\n\n\nclass CustomVertexShader extends AbstractShader {\n    private readonly definition: IDefinition\n\n    constructor(def: Partial<IFriendlyVertexDefinition>) {\n        super()\n        this.definition = {\n            uniforms: convertFriendlyUniforms(def.uniforms),\n            attributes: convertFriendlyAttributes(def.attributes),\n            varyings: convertFriendlyVaryings(def.varyings),\n            functions: def.functions || {},\n            dependencies: convertFriendlyVertexDependencies(def.dependencies)\n        }\n    }\n\n    get uniformsDefinition() { return this.definition.uniforms }\n    get attributesDefinition() { return this.definition.attributes }\n    get varyingsDefinition() { return this.definition.varyings }\n    get functionsDefinition() { return this.definition.functions }\n    get dependenciesDefinition() { return this.definition.dependencies }\n}\n\n\nclass CustomFragmentShader extends AbstractShader {\n    private readonly definition: IDefinition\n\n    constructor(def: Partial<IFriendlyFragmentDefinition>) {\n        super()\n        this.definition = {\n            uniforms: convertFriendlyUniforms(def.uniforms),\n            attributes: {},\n            varyings: {},\n            functions: def.functions || {},\n            dependencies: convertFriendlyFragmentDependencies(def.dependencies)\n        }\n    }\n\n    get uniformsDefinition() { return this.definition.uniforms }\n    get attributesDefinition() { return this.definition.attributes }\n    get varyingsDefinition() { return this.definition.varyings }\n    get functionsDefinition() { return this.definition.functions }\n    get dependenciesDefinition() { return this.definition.dependencies }\n}\n\n\nfunction convertFriendlyVertexDependencies(dependencies?: Array<Partial<IFriendlyVertexDefinition>>) {\n    if (!Array.isArray(dependencies)) return []\n    return dependencies.map(\n        (dep: Partial<IFriendlyVertexDefinition>) =>\n            new CustomVertexShader(dep)\n    )\n}\n\nfunction convertFriendlyFragmentDependencies(dependencies?: Array<Partial<IFriendlyFragmentDefinition>>) {\n    if (!Array.isArray(dependencies)) return []\n    return dependencies.map(\n        (dep: Partial<IFriendlyFragmentDefinition>) =>\n            new CustomFragmentShader(dep)\n    )\n}\n\nfunction convertFriendlyUniforms(uniforms?: IMap<IArray<IUniformStringType>>): IUniformTypes {\n    if (!uniforms) return {}\n\n    const result: IUniformTypes = {}\n    for (const key of Object.keys(uniforms)) {\n        result[key] = convertFriendlyUniform(uniforms[key])\n    }\n    return result\n}\n\nfunction convertFriendlyUniform(uniform: IArray<IUniformStringType>): { type: IUniformType, size: number } {\n    if (!Array.isArray(uniform)) return convertFriendlyUniform([uniform, 1])\n\n    const [stringType, size] = uniform\n    switch (stringType) {\n        case \"vec2\": return { type: IUniformType.FLOAT_VEC2, size }\n        case \"vec3\": return { type: IUniformType.FLOAT_VEC3, size }\n        case \"vec4\": return { type: IUniformType.FLOAT_VEC4, size }\n        case \"mat2\": return { type: IUniformType.FLOAT_MAT2, size }\n        case \"mat3\": return { type: IUniformType.FLOAT_MAT3, size }\n        case \"mat4\": return { type: IUniformType.FLOAT_MAT4, size }\n        case \"sampler2D\": return { type: IUniformType.SAMPLER_2D, size }\n        case \"samplerCube\": return { type: IUniformType.SAMPLER_CUBE, size }\n        default: return { type: IUniformType.FLOAT, size }\n    }\n}\n\n\nfunction convertFriendlyAttributes(attributes?: IMap<IAttributeStringType>): IAttributeTypes {\n    if (!attributes) return {}\n\n    const result: IAttributeTypes = {}\n    for (const key of Object.keys(attributes)) {\n        result[key] = convertFriendlyAttribute(attributes[key])\n    }\n    return result\n}\n\nfunction convertFriendlyAttribute(attribute: IArray<IAttributeStringType>): IAttributeType {\n    switch (attribute) {\n        case \"vec2\": return IAttributeType.FLOAT_VEC2\n        case \"vec3\": return IAttributeType.FLOAT_VEC3\n        case \"vec4\": return IAttributeType.FLOAT_VEC4\n        default: return IAttributeType.FLOAT\n    }\n}\n\n\nfunction convertFriendlyVaryings(varyings?: IMap<IArray<IVaryingStringType>>): IVaryingTypes {\n    if (!varyings) return {}\n\n    const result: IVaryingTypes = {}\n    for (const key of Object.keys(varyings)) {\n        result[key] = convertFriendlyVarying(varyings[key])\n    }\n    return result\n}\n\nfunction convertFriendlyVarying(varying: IArray<IVaryingStringType>): { type: IVaryingType, size: number } {\n    if (!Array.isArray(varying)) return convertFriendlyVarying([varying, 1])\n\n    const [stringType, size] = varying\n    switch (stringType) {\n        case \"vec2\": return { type: IVaryingType.FLOAT_VEC2, size }\n        case \"vec3\": return { type: IVaryingType.FLOAT_VEC3, size }\n        case \"vec4\": return { type: IVaryingType.FLOAT_VEC4, size }\n        case \"mat2\": return { type: IVaryingType.FLOAT_MAT2, size }\n        case \"mat3\": return { type: IVaryingType.FLOAT_MAT3, size }\n        case \"mat4\": return { type: IVaryingType.FLOAT_MAT4, size }\n        default: return { type: IVaryingType.FLOAT, size }\n    }\n}\n\n\ninterface IDefinition {\n    uniforms: IUniformTypes\n    attributes: IAttributeTypes\n    varyings: IVaryingTypes\n    functions: IFunctionTypes\n    dependencies: AbstractShader[]\n}\n\ninterface IMap<T> { [key: string]: T }\ntype IArray<T> = T | [T, number]\n","// tslint:disable:no-bitwise\nimport { IVec3, IVec4, IMat3, IMat4 } from '../types'\n\nconst FULL_TURN = 4096\nconst MODULO = FULL_TURN - 1\nconst HALF_TURN = 2048\nconst HALF = 0.5\nconst EPSILON = 0.00000001\n\nconst COS = new Float32Array(FULL_TURN)\nconst SIN = new Float32Array(FULL_TURN)\n\n// Temporary vectors to used for internal computations.\nconst vec3tmp1 = new Float32Array(3)\nconst vec3tmp2 = new Float32Array(3)\nconst vec3tmp3 = new Float32Array(3)\nconst vec3tmp4 = new Float32Array(3)\n\n// Prepare acceleration table for COS and SIN.\nfor (let i = 0; i < FULL_TURN; i++) {\n    const angle = (Math.PI * i) / HALF_TURN\n    COS[i] = Math.cos(angle)\n    SIN[i] = Math.sin(angle)\n}\n\n/**\n * Fast cosine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction cos(angle: number) {\n    return COS[(angle | 0) & MODULO]\n}\n\n/**\n * Fast sine.\n * Angle is define between 0 and 4095.\n * * PI/2  <=>  1023\n * * PI  <=>  2047\n * * 3*PI/2  <=>  3071\n */\nfunction sin(angle: number) {\n    return SIN[(angle | 0) & MODULO]\n}\n\n/**\n * Force a number to stay between two bounds.\n */\nfunction clamp(v: number, min = 0, max = 1) {\n    if (v < min) return min\n    if (v > max) return max\n    return v\n}\n\nconst M4_00 = 0\nconst M4_10 = 1\nconst M4_20 = 2\nconst M4_30 = 3\nconst M4_01 = 4\nconst M4_11 = 5\nconst M4_21 = 6\nconst M4_31 = 7\nconst M4_02 = 8\nconst M4_12 = 9\nconst M4_22 = 10\nconst M4_32 = 11\nconst M4_03 = 12\nconst M4_13 = 13\nconst M4_23 = 14\nconst M4_33 = 15\n\nconst M3_00 = 0\nconst M3_10 = 1\nconst M3_20 = 2\nconst M3_01 = 3\nconst M3_11 = 4\nconst M3_21 = 5\nconst M3_02 = 6\nconst M3_12 = 7\nconst M3_22 = 8\n\nconst V_0 = 0\nconst V_1 = 1\nconst V_2 = 2\nconst V_3 = 3\n\nconst X = 0\nconst Y = 1\nconst Z = 2\nconst W = 3\n\nconst vector = {\n    areEqual(a: Float32Array, b: Float32Array): boolean {\n        if (a.length !== b.length) return false\n        for (let i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) return false\n        }\n        return true\n    },\n\n    createVec3(): IVec3 {\n        const VEC3_LENGTH = 3\n        return new Float32Array(VEC3_LENGTH)\n    },\n\n    createVec4(): IVec4 {\n        const VEC4_LENGTH = 4\n        return new Float32Array(VEC4_LENGTH)\n    },\n\n    add3(a: IVec3, b: IVec3, output: IVec3) {\n        output[X] = a[X] + b[X]\n        output[Y] = a[Y] + b[Y]\n        output[Z] = a[Z] + b[Z]\n    },\n\n    substract3(a: IVec3, b: IVec3, output: IVec3) {\n        output[X] = a[X] - b[X]\n        output[Y] = a[Y] - b[Y]\n        output[Z] = a[Z] - b[Z]\n    },\n\n    cross3(a: IVec3, b: IVec3, output: IVec3) {\n        output[X] = a[Y] * b[Z] - a[Z] * b[Y]\n        output[Y] = a[Z] * b[X] - a[X] * b[Z]\n        output[Z] = a[X] * b[Y] - a[Y] * b[X]\n    },\n\n    dot3(a: IVec3, b: IVec3): number {\n        const [xa, ya, za] = a\n        const [xb, yb, zb] = b\n        return xa * xb + ya * yb + za * zb\n    },\n\n    /**\n     * @return Length of a 3D vector.\n     */\n    length3(input: IVec3): number {\n        return Math.sqrt(vector.dot3(input, input))\n    },\n\n    /**\n     * Create a 3D vector with length 1.\n     */\n    normalize3(input: IVec3, output: IVec3) {\n        const len = vector.length3(input)\n        const lenInv = len > 0 ? 1 / len : 1\n        output[X] = input[X] * lenInv\n        output[Y] = input[Y] * lenInv\n        output[Z] = input[Z] * lenInv\n    },\n\n    /**\n     * Create a 3D vector of length 1, pointing in latitude/longitude position.\n     * Latitude goes along with Y axis.\n     * orbital3(0, 0) === (0,0,-1)\n     *\n     * Latitude and longitude are expressed in radians.\n     */\n    orbital3(latitude: number, longitude: number, output: IVec3) {\n        const height = Math.sin(latitude)\n        const radius = Math.cos(latitude)\n        const angle = longitude - Math.PI * HALF\n        output[X] = radius * Math.cos(angle)\n        output[Y] = radius * Math.sin(angle)\n        output[Z] = height\n    },\n\n    /**\n     * @return Length of a 3D vector.\n     */\n    length4(input: IVec4): number {\n        const [x, y, z, w] = input\n        return Math.sqrt(x * x + y * y + z * z + w * w)\n    },\n\n    /**\n     * Create a 3D vector with length 1.\n     */\n    normalize4(input: IVec4, output: IVec4) {\n        const len = vector.length4(input)\n        output[X] = input[X] * len\n        output[Y] = input[Y] * len\n        output[Z] = input[Z] * len\n        output[W] = input[W] * len\n    },\n\n    transform4(mat: IMat4, vec: IVec4, out: IVec4) {\n        out[V_0] =\n            mat[M4_00] * vec[V_0] +\n            mat[M4_01] * vec[V_1] +\n            mat[M4_02] * vec[V_2] +\n            mat[M4_03] * vec[V_3]\n        out[V_1] =\n            mat[M4_10] * vec[V_0] +\n            mat[M4_11] * vec[V_1] +\n            mat[M4_12] * vec[V_2] +\n            mat[M4_13] * vec[V_3]\n        out[V_2] =\n            mat[M4_20] * vec[V_0] +\n            mat[M4_21] * vec[V_1] +\n            mat[M4_22] * vec[V_2] +\n            mat[M4_23] * vec[V_3]\n        out[V_3] =\n            mat[M4_30] * vec[V_0] +\n            mat[M4_31] * vec[V_1] +\n            mat[M4_32] * vec[V_2] +\n            mat[M4_33] * vec[V_3]\n    }\n}\n\nconst matrix = {\n    areEqual: vector.areEqual,\n\n    createMat3(): IMat3 {\n        const MAT3_LENGTH = 9\n        return new Float32Array(MAT3_LENGTH)\n    },\n\n    createMat4(): IMat4 {\n        const MAT4_LENGTH = 16\n        return new Float32Array(MAT4_LENGTH)\n    },\n\n    identity3(output: IMat3) {\n        output[M3_00] = 1\n        output[M3_10] = 0\n        output[M3_20] = 0\n        output[M3_01] = 0\n        output[M3_11] = 1\n        output[M3_21] = 0\n        output[M3_02] = 0\n        output[M3_12] = 0\n        output[M3_22] = 1\n    },\n\n    /**\n     * Extract a 3x3 matrix from the top/left corner of a 4x4 matrix.\n     */\n    extract3From4(mat4: IMat4, mat3: IMat3) {\n        mat3[M3_00] = mat4[M4_00]\n        mat3[M3_10] = mat4[M4_10]\n        mat3[M3_20] = mat4[M4_20]\n        mat3[M3_01] = mat4[M4_01]\n        mat3[M3_11] = mat4[M4_11]\n        mat3[M3_21] = mat4[M4_21]\n        mat3[M3_02] = mat4[M4_02]\n        mat3[M3_12] = mat4[M4_12]\n        mat3[M3_22] = mat4[M4_22]\n    },\n\n    extractX3From4(mat4: IMat4, vec3: IVec3) {\n        vec3[X] = mat4[M4_00]\n        vec3[Y] = mat4[M4_10]\n        vec3[Z] = mat4[M4_20]\n    },\n\n    extractX4From4(mat4: IMat4, vec4: IVec4) {\n        vec4[X] = mat4[M4_00]\n        vec4[Y] = mat4[M4_10]\n        vec4[Z] = mat4[M4_20]\n        vec4[W] = mat4[M4_30]\n    },\n\n    extractY3From4(mat4: IMat4, vec3: IVec3) {\n        vec3[X] = mat4[M4_01]\n        vec3[Y] = mat4[M4_11]\n        vec3[Z] = mat4[M4_21]\n    },\n\n    extractY4From4(mat4: IMat4, vec4: IVec4) {\n        vec4[X] = mat4[M4_01]\n        vec4[Y] = mat4[M4_11]\n        vec4[Z] = mat4[M4_21]\n        vec4[W] = mat4[M4_31]\n    },\n\n    extractZ3From4(mat4: IMat4, vec3: IVec3) {\n        vec3[X] = mat4[M4_02]\n        vec3[Y] = mat4[M4_12]\n        vec3[Z] = mat4[M4_22]\n    },\n\n    extractZ4From4(mat4: IMat4, vec4: IVec4) {\n        vec4[X] = mat4[M4_02]\n        vec4[Y] = mat4[M4_12]\n        vec4[Z] = mat4[M4_22]\n        vec4[W] = mat4[M4_32]\n    },\n\n    lookAt4(pos: IVec3, target: IVec3, up: IVec3, mat4: IMat4) {\n        // Translation.\n        mat4[M4_03] = pos[X]\n        mat4[M4_13] = pos[Y]\n        mat4[M4_23] = pos[Z]\n        mat4[M4_33] = 1\n\n        const dir = vec3tmp1\n        const right = vec3tmp2\n        const orthogonalUp = vec3tmp3\n        const normalizedUp = vec3tmp4\n\n        vector.substract3(target, pos, dir)\n        vector.normalize3(dir, dir)\n        vector.normalize3(up, normalizedUp)\n        vector.cross3(dir, normalizedUp, right)\n        vector.cross3(right, dir, orthogonalUp)\n\n        mat4[M4_00] = right[X]\n        mat4[M4_10] = right[Y]\n        mat4[M4_20] = right[Z]\n        mat4[M4_30] = 0\n        mat4[M4_01] = orthogonalUp[X]\n        mat4[M4_11] = orthogonalUp[Y]\n        mat4[M4_21] = orthogonalUp[Z]\n        mat4[M4_31] = 0\n        mat4[M4_02] = dir[X]\n        mat4[M4_12] = dir[Y]\n        mat4[M4_22] = dir[Z]\n        mat4[M4_32] = 0\n    },\n\n    multiply3(a: IMat3, b: IMat3, output: IMat3) {\n        output[M3_00] = a[M3_00] * b[M3_00] + a[M3_01] * b[M3_10] + a[M3_02] * b[M3_20]\n        output[M3_10] = a[M3_10] * b[M3_00] + a[M3_11] * b[M3_10] + a[M3_12] * b[M3_20]\n        output[M3_20] = a[M3_20] * b[M3_00] + a[M3_21] * b[M3_10] + a[M3_22] * b[M3_20]\n        output[M3_01] = a[M3_00] * b[M3_01] + a[M3_01] * b[M3_11] + a[M3_02] * b[M3_21]\n        output[M3_11] = a[M3_10] * b[M3_01] + a[M3_11] * b[M3_11] + a[M3_12] * b[M3_21]\n        output[M3_21] = a[M3_20] * b[M3_01] + a[M3_21] * b[M3_11] + a[M3_22] * b[M3_21]\n        output[M3_02] = a[M3_00] * b[M3_02] + a[M3_01] * b[M3_12] + a[M3_02] * b[M3_22]\n        output[M3_12] = a[M3_10] * b[M3_02] + a[M3_11] * b[M3_12] + a[M3_12] * b[M3_22]\n        output[M3_22] = a[M3_20] * b[M3_02] + a[M3_21] * b[M3_12] + a[M3_22] * b[M3_22]\n    },\n\n    identity4(output: IMat4) {\n        output[M4_00] = 1\n        output[M4_10] = 0\n        output[M4_20] = 0\n        output[M4_30] = 0\n        output[M4_01] = 0\n        output[M4_11] = 1\n        output[M4_21] = 0\n        output[M4_31] = 0\n        output[M4_02] = 0\n        output[M4_12] = 0\n        output[M4_22] = 1\n        output[M4_32] = 0\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    },\n\n    multiply4(a: IMat4, b: IMat4, output: IMat4) {\n        const output00 = a[M4_00] * b[M4_00] + a[M4_01] * b[M4_10] + a[M4_02] * b[M4_20] + a[M4_03] * b[M4_30]\n        const output10 = a[M4_10] * b[M4_00] + a[M4_11] * b[M4_10] + a[M4_12] * b[M4_20] + a[M4_13] * b[M4_30]\n        const output20 = a[M4_20] * b[M4_00] + a[M4_21] * b[M4_10] + a[M4_22] * b[M4_20] + a[M4_23] * b[M4_30]\n        const output30 = a[M4_30] * b[M4_00] + a[M4_31] * b[M4_10] + a[M4_32] * b[M4_20] + a[M4_33] * b[M4_30]\n        const output01 = a[M4_00] * b[M4_01] + a[M4_01] * b[M4_11] + a[M4_02] * b[M4_21] + a[M4_03] * b[M4_31]\n        const output11 = a[M4_10] * b[M4_01] + a[M4_11] * b[M4_11] + a[M4_12] * b[M4_21] + a[M4_13] * b[M4_31]\n        const output21 = a[M4_20] * b[M4_01] + a[M4_21] * b[M4_11] + a[M4_22] * b[M4_21] + a[M4_23] * b[M4_31]\n        const output31 = a[M4_30] * b[M4_01] + a[M4_31] * b[M4_11] + a[M4_32] * b[M4_21] + a[M4_33] * b[M4_31]\n        const output02 = a[M4_00] * b[M4_02] + a[M4_01] * b[M4_12] + a[M4_02] * b[M4_22] + a[M4_03] * b[M4_32]\n        const output12 = a[M4_10] * b[M4_02] + a[M4_11] * b[M4_12] + a[M4_12] * b[M4_22] + a[M4_13] * b[M4_32]\n        const output22 = a[M4_20] * b[M4_02] + a[M4_21] * b[M4_12] + a[M4_22] * b[M4_22] + a[M4_23] * b[M4_32]\n        const output32 = a[M4_30] * b[M4_02] + a[M4_31] * b[M4_12] + a[M4_32] * b[M4_22] + a[M4_33] * b[M4_32]\n        const output03 = a[M4_00] * b[M4_03] + a[M4_01] * b[M4_13] + a[M4_02] * b[M4_23] + a[M4_03] * b[M4_33]\n        const output13 = a[M4_10] * b[M4_03] + a[M4_11] * b[M4_13] + a[M4_12] * b[M4_23] + a[M4_13] * b[M4_33]\n        const output23 = a[M4_20] * b[M4_03] + a[M4_21] * b[M4_13] + a[M4_22] * b[M4_23] + a[M4_23] * b[M4_33]\n        const output33 = a[M4_30] * b[M4_03] + a[M4_31] * b[M4_13] + a[M4_32] * b[M4_23] + a[M4_33] * b[M4_33]\n\n        output[M4_00] = output00\n        output[M4_10] = output10\n        output[M4_20] = output20\n        output[M4_30] = output30\n        output[M4_01] = output01\n        output[M4_11] = output11\n        output[M4_21] = output21\n        output[M4_31] = output31\n        output[M4_02] = output02\n        output[M4_12] = output12\n        output[M4_22] = output22\n        output[M4_32] = output32\n        output[M4_03] = output03\n        output[M4_13] = output13\n        output[M4_23] = output23\n        output[M4_33] = output33\n    },\n\n    /**\n     * @return false if the matrix is not invertible.\n     */\n    invert4(a: IMat4, output: IMat4): boolean {\n        const [\n            a00, a10, a20, a30,\n            a01, a11, a21, a31,\n            a02, a12, a22, a32,\n            a03, a13, a23, a33\n        ] = a\n\n        const b00 = a00 * a11 - a01 * a10\n        const b01 = a00 * a12 - a02 * a10\n        const b02 = a00 * a13 - a03 * a10\n        const b03 = a01 * a12 - a02 * a11\n        const b04 = a01 * a13 - a03 * a11\n        const b05 = a02 * a13 - a03 * a12\n        const b06 = a20 * a31 - a21 * a30\n        const b07 = a20 * a32 - a22 * a30\n        const b08 = a20 * a33 - a23 * a30\n        const b09 = a21 * a32 - a22 * a31\n        const b10 = a21 * a33 - a23 * a31\n        const b11 = a22 * a33 - a23 * a32\n        // Calculate the determinant\n        const invDet = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06\n\n        if (Math.abs(invDet) < EPSILON) return false\n\n        const det = 1 / invDet\n\n        output[M4_00] = (a11 * b11 - a12 * b10 + a13 * b09) * det\n        output[M4_01] = (a02 * b10 - a01 * b11 - a03 * b09) * det\n        output[M4_02] = (a31 * b05 - a32 * b04 + a33 * b03) * det\n        output[M4_03] = (a22 * b04 - a21 * b05 - a23 * b03) * det\n        output[M4_10] = (a12 * b08 - a10 * b11 - a13 * b07) * det\n        output[M4_11] = (a00 * b11 - a02 * b08 + a03 * b07) * det\n        output[M4_12] = (a32 * b02 - a30 * b05 - a33 * b01) * det\n        output[M4_13] = (a20 * b05 - a22 * b02 + a23 * b01) * det\n        output[M4_20] = (a10 * b10 - a11 * b08 + a13 * b06) * det\n        output[M4_21] = (a01 * b08 - a00 * b10 - a03 * b06) * det\n        output[M4_22] = (a30 * b04 - a31 * b02 + a33 * b00) * det\n        output[M4_23] = (a21 * b02 - a20 * b04 - a23 * b00) * det\n        output[M4_30] = (a11 * b07 - a10 * b09 - a12 * b06) * det\n        output[M4_31] = (a00 * b09 - a01 * b07 + a02 * b06) * det\n        output[M4_32] = (a31 * b01 - a30 * b03 - a32 * b00) * det\n        output[M4_33] = (a20 * b03 - a21 * b01 + a22 * b00) * det\n\n        return true\n    },\n\n    /**\n     * Rotation around X axis of `angle` radians.\n     */\n    rotation4X(angle: number, output: IMat4) {\n        const c = Math.cos(angle)\n        const s = Math.sin(angle)\n\n        output[M4_00] = 1\n        output[M4_10] = 0\n        output[M4_20] = 0\n        output[M4_30] = 0\n\n        output[M4_01] = 0\n        output[M4_11] = c\n        output[M4_21] = s\n        output[M4_31] = 0\n\n        output[M4_02] = 0\n        output[M4_12] = -s\n        output[M4_22] = c\n        output[M4_32] = 0\n\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    },\n\n    /**\n     * Rotation around X axis of `angle` radians.\n     */\n    rotation4Y(angle: number, output: IMat4) {\n        const c = Math.cos(angle)\n        const s = Math.sin(angle)\n\n        output[M4_00] = c\n        output[M4_10] = 0\n        output[M4_20] = -s\n        output[M4_30] = 0\n\n        output[M4_01] = 0\n        output[M4_11] = 1\n        output[M4_21] = 0\n        output[M4_31] = 0\n\n        output[M4_02] = s\n        output[M4_12] = 0\n        output[M4_22] = c\n        output[M4_32] = 0\n\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    },\n\n    /**\n     * Rotation around X axis of `angle` radians.\n     */\n    rotation4Z(angle: number, output: IMat4) {\n        const c = Math.cos(angle)\n        const s = Math.sin(angle)\n\n        output[M4_00] = c\n        output[M4_10] = s\n        output[M4_20] = 0\n        output[M4_30] = 0\n\n        output[M4_01] = -s\n        output[M4_11] = c\n        output[M4_21] = 0\n        output[M4_31] = 0\n\n        output[M4_02] = 0\n        output[M4_12] = 0\n        output[M4_22] = 1\n        output[M4_32] = 0\n\n        output[M4_03] = 0\n        output[M4_13] = 0\n        output[M4_23] = 0\n        output[M4_33] = 1\n    }\n}\n\nfunction deg2rad(deg: number) {\n    const HALF_TURN_DEF = 180\n    return deg * Math.PI / HALF_TURN_DEF\n}\n\nfunction rad2deg(rad: number) {\n    const HALF_TURN_DEF = 180\n    return rad * HALF_TURN_DEF / Math.PI\n}\n\nexport default {\n    deg2rad, rad2deg,\n    cos, sin, clamp, vector, matrix,\n    M4_00, M4_10, M4_20, M4_30,\n    M4_01, M4_11, M4_21, M4_31,\n    M4_02, M4_12, M4_22, M4_32,\n    M4_03, M4_13, M4_23, M4_33,\n    M3_00, M3_10, M3_20,\n    M3_01, M3_11, M3_21,\n    M3_02, M3_12, M3_22\n}\n","import AssetsMap from '../../assets-map'\nimport Program from '../../program'\nimport ShaderFactory from '../shader'\nimport { IWebGL, IFriendlyVertexDefinition, IFriendlyFragmentDefinition } from '../../types'\n\nexport default class ProgramFactory {\n    private programMap = new AssetsMap<Program>()\n\n    constructor(private gl: IWebGL) { }\n\n    async createProgramAsync(\n        id: string,\n        vertShader: Partial<IFriendlyVertexDefinition>,\n        fragShader: Partial<IFriendlyFragmentDefinition>\n    ): Promise<Program> {\n        return this.programMap.addAsync(\n            id,\n            async () => {\n                const { gl } = this\n                const program = new Program(\n                    gl,\n                    ShaderFactory.createVertShader(vertShader),\n                    ShaderFactory.createFragShader(fragShader)\n                )\n                await program.attach()\n                return program\n            }\n        )\n    }\n}\n","import { IWebGL } from '../types'\n\ninterface IArrayBufferParams {\n    gl: IWebGL\n    buffer: WebGLBuffer\n    confirmDestroy(): boolean\n}\n\nexport default class ArrayBuffer {\n    constructor(private params: IArrayBufferParams) { }\n\n    setData(data: Float32Array) {\n        const { gl, buffer } = this.params\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n        gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW)\n    }\n\n    get buffer(): WebGLBuffer { return this.params.buffer }\n\n    bind() {\n        const { gl, buffer } = this.params\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\n    }\n\n    destroy() {\n        const { gl, buffer, confirmDestroy } = this.params\n        if (confirmDestroy() === false) return\n        gl.deleteBuffer(buffer)\n    }\n}\n","import AssetsMap from '../../assets-map'\nimport ArrayBuffer from '../../buffer/array-buffer'\nimport { IWebGL } from '../../types'\n\nexport default class BufferFactory {\n    private arrayBufferMap = new AssetsMap<ArrayBuffer>()\n\n    constructor(private gl: IWebGL) { }\n\n    createArrayBuffer(id: string, data: Float32Array): ArrayBuffer {\n        return this.arrayBufferMap.add(\n            id,\n            () => {\n                const { gl } = this\n                const buffer = gl.createBuffer()\n                if (!buffer) {\n                    throw Error(\"Unable to create a new WebGLBuffer!\")\n                }\n                const arrayBuffer = new ArrayBuffer({\n                    gl, buffer,\n                    confirmDestroy: () => this.arrayBufferMap.remove(id) === 0\n                })\n                arrayBuffer.setData(data)\n                return arrayBuffer\n            }\n        )\n    }\n}\n","import Program from \"../program\"\nimport { IFriendlyVertexDefinition } from '../types'\n\n/**\n * The Camera is responsible of transforming World coordinates into\n * Screen coordinates.\n * To do this, the Camera defines the following Vertex Shader function:\n *\n * ```glsl\n * vec4 worldPointToScreen(vec3 point)\n * vec3 worldVectorToScreen(vec3 vector)\n * ```\n *\n * And it can work only if the following attributes are defined:\n *\n * ```glsl\n * attribute float uniCanvasWidth;\n * attribute float uniCanvasHeight;\n * ```\n *\n * Because there is a lot of different cameras, they can need extra attributes.\n * That's why Camera provides two readonly properties:\n * * `glslUniforms`:\n * * `glslFunction`\n */\nexport default abstract class AbstractCamera {\n    abstract get id(): string\n\n    abstract get vertexShader(): Partial<IFriendlyVertexDefinition>\n\n    /**\n     * @param prg - Attributes have to be set in this Program.\n     * @param width - Canvas Width.\n     * @param height - Canvas Height.\n     * @param time - Time of the rendered frame in milliseconds.\n     */\n    abstract setUniformValues(\n        prg: Program,\n        width: number,\n        height: number,\n        time: number\n    ): void\n}\n","import AbstractCamera from \"./abstract-camera\"\nimport Calc from \"../calc\"\nimport { IMat3, IMat4 } from '../types'\n\nconst HALF = 0.5\n// Its PI/2 - Epsilon\nconst ALMOST_HALF_PI = 1.570796326794896\n\n/**\n * Abstract camera for 3D space.\n */\nexport default abstract class Space3D extends AbstractCamera {\n    protected readonly cameraMatrix: IMat4 = Calc.matrix.createMat4()\n    private readonly rotationY = Calc.matrix.createMat4()\n    private readonly rotationX = Calc.matrix.createMat4()\n\n    /**\n     * The camera matrix holds all the transformations to get a point\n     * from the world space into the camera space. This matrix is 4x4\n     * and it allows translations.\n     * This function will return a 3x3 matrix without the translations.\n     * It can be useful for vectors instead of points.\n     */\n    extractCameraMatrix(mat3: IMat3) {\n        Calc.matrix.extract3From4(this.cameraMatrix, mat3)\n    }\n\n    /**\n     * The camera looks at (targetX, targetY, targetZ)\n     * and it is at a distance of `distance`.\n     * That defines a sphere. We use `latitude` and `longitude` to know\n     * where the camera lies on the sphere.\n     * For {dis: 1, lat: 0, lng: 0} the camera location will be (0,0,1).\n     * For {dis: 1, lat: 0, lng: 90} the camera location will be (1,0,0).\n     * Only the latitude will influence the Y coord.\n     *\n     * @param distance - Expressed in meters.\n     * @param latitude - Expressed in radians.\n     * @param longitude - Expressed in radians.\n     */\n    orbit(\n        targetX: number, targetY: number, targetZ: number,\n        distance: number, latitude: number, longitude: number\n    ) {\n        const { rotationY, rotationX, cameraMatrix } = this\n\n        const lat = Calc.clamp(latitude, -ALMOST_HALF_PI, ALMOST_HALF_PI)\n        const lng = longitude\n\n        Calc.matrix.rotation4X(lat, rotationX)\n        Calc.matrix.rotation4Y(-lng, rotationY)\n        Calc.matrix.identity4(cameraMatrix)\n        Calc.matrix.multiply4(rotationX, rotationY, cameraMatrix)\n\n        const tX = targetX\n        const tY = targetY\n        const tZ = targetZ + distance\n\n        cameraMatrix[Calc.M4_03] = -tX\n        cameraMatrix[Calc.M4_13] = -tY\n        cameraMatrix[Calc.M4_23] = -tZ\n    }\n}\n","import Space3D from \"../space-3d\"\nimport Program from \"../../program\"\nimport PointVertexShaderCode from \"./perspective.world-point-to-screen.vert\"\nimport VectorVertexShaderCode from \"./perspective.world-vector-to-screen.vert\"\nimport Calc from \"../../calc\"\nimport { IFriendlyVertexDefinition } from '../../types'\n\nconst HALF_TURN_DEG = 180\nconst DEFAULT_FIELD_ANGLE_DEG = 39.6\nconst DEFAULT_FIELD_ANGLE_RAD = DEFAULT_FIELD_ANGLE_DEG * Math.PI / HALF_TURN_DEG\nconst HALF = 0.5\nconst DOUBLE = 2\n\n\nexport default class Perspective extends Space3D {\n    private perspectiveMatrix = Calc.matrix.createMat4()\n    private cameraMatrix3 = Calc.matrix.createMat3()\n\n    /**\n     * Field view angle expressed in radians.\n     */\n    fieldAngle = DEFAULT_FIELD_ANGLE_RAD\n    near = 0.1\n    far = 1000\n\n    constructor() {\n        super()\n        const distance = 15\n        this.orbit(0, 0, 0, distance, 0, 0)\n    }\n\n    get id() { return \"[CAMERA/PERSPECTIVE]\" }\n\n    get vertexShader(): Partial<IFriendlyVertexDefinition> {\n        return {\n            uniforms: {\n                uniPerspectiveMatrix: \"mat4\",\n                uniCameraMatrix: \"mat4\",\n                uniCameraMatrix3: \"mat3\"\n            },\n            functions: {\n                worldPointToScreen: PointVertexShaderCode,\n                worldVectorToScreen: VectorVertexShaderCode\n            }\n        }\n    }\n\n    /**\n     * @param prg - Attributes have to be set in this Program.\n     * @param width - Canvas Width.\n     * @param height - Canvas Height.\n     * @param time - Time of the rendered frame in milliseconds.\n     */\n    setUniformValues(prg: Program, width: number, height: number) {\n        const { near, far, fieldAngle } = this\n        const f = Math.tan(HALF * (Math.PI - fieldAngle))\n        const rangeInv = 1 / (near - far)\n\n        const result = this.perspectiveMatrix\n        result[Calc.M4_00] = f * height / width\n        result[Calc.M4_10] = 0\n        result[Calc.M4_20] = 0\n        result[Calc.M4_30] = 0\n\n        result[Calc.M4_01] = 0\n        result[Calc.M4_11] = f\n        result[Calc.M4_21] = 0\n        result[Calc.M4_31] = 0\n\n        result[Calc.M4_02] = 0\n        result[Calc.M4_12] = 0\n        result[Calc.M4_22] = (near + far) * rangeInv\n        result[Calc.M4_32] = -1\n\n        result[Calc.M4_03] = 0\n        result[Calc.M4_13] = 0\n        result[Calc.M4_23] = near * far * rangeInv * DOUBLE\n        result[Calc.M4_33] = 0\n\n        // Used to rotate normals without translating them.\n        Calc.matrix.extract3From4(this.cameraMatrix, this.cameraMatrix3)\n\n        prg.use()\n        prg.uniforms.set(\"uniCameraMatrix\", this.cameraMatrix)\n        prg.uniforms.set(\"uniCameraMatrix3\", this.cameraMatrix3)\n        prg.uniforms.set(\"uniPerspectiveMatrix\", this.perspectiveMatrix)\n    }\n}\n","import Pointer from '../pointer'\nimport Resize from '../resize'\nimport TextureFactory from '../factory/texture'\nimport ProgramFactory from '../factory/program'\nimport BufferFactory from '../factory/buffer'\nimport Camera from '../camera'\nimport PerspectiveCamera from '../camera/perpective'\nimport { IWebGL } from '../types'\n\ntype IAnimationFunction = (time: number, width: number, height: number) => void\nexport interface ISceneParams {\n    canvas: HTMLCanvasElement\n    onAnimation?: IAnimationFunction\n}\n\nexport default class Scene {\n    resolution = 1\n    onAnimation?: IAnimationFunction\n\n    private readonly _gl: IWebGL\n    private readonly _pointer: Pointer\n    private _isRendering = false\n    private lastRenderingTime = 0\n    public readonly textures: TextureFactory\n    public readonly buffers: BufferFactory\n    public readonly programs: ProgramFactory\n    public camera: Camera = new PerspectiveCamera()\n\n    constructor(canvas: HTMLCanvasElement) {\n        this._pointer = new Pointer(canvas)\n        let gl: IWebGL | null = canvas.getContext('webgl2', {\n            // Specify WebGL options.\n        })\n        if (!gl) {\n            console.warn(\"WebGL2 is not available! Switching to WebGL.\")\n            gl = canvas.getContext('webgl', {\n                // Specify WebGL options.\n            })\n        }\n        if (!gl) {\n            throw new Error('Unable to create a WegGL context!')\n        }\n\n        this._gl = gl\n        this.textures = new TextureFactory(gl)\n        this.buffers = new BufferFactory(gl)\n        this.programs = new ProgramFactory(gl)\n    }\n\n    get isRendering() { return this._isRendering }\n    set isRendering(value: boolean) {\n        if (value === this._isRendering) return\n        this._isRendering = value\n        if (value) {\n            window.requestAnimationFrame(this.render)\n        }\n    }\n\n    get gl(): IWebGL {\n        return this._gl\n    }\n\n    /**\n     * Retreive information about pointer (mouse, pen, finger, ...) state.\n     */\n    get pointer() {\n        return this._pointer\n    }\n\n    /**\n     * Visible width. Between 0 and 1024.\n     */\n    get width(): number {\n        return this._gl.drawingBufferWidth\n    }\n    /**\n     * Visible height. Between 0 and 1024.\n     */\n    get height(): number {\n        return this._gl.drawingBufferHeight\n    }\n\n    /**\n     * Trigger a rendering now.\n     */\n    refresh() {\n        const savedRendering = this._isRendering\n        const savedLastRenderingTime = this.lastRenderingTime\n        this._isRendering = true\n        const time = Date.now()\n        this.lastRenderingTime = time - 15\n        this.render(time)\n        this._isRendering = savedRendering\n        this.lastRenderingTime = savedLastRenderingTime\n    }\n\n    private readonly render = (time: number) => {\n        if (!this._isRendering) return\n        window.requestAnimationFrame(this.render)\n\n        const { gl, lastRenderingTime } = this\n        this.lastRenderingTime = time\n        if (lastRenderingTime === 0) {\n            // Skip the first frame to have a correct delta time.\n            return\n        }\n\n        Resize(gl, this.resolution)\n\n        gl.clearDepth(+1)\n        gl.clear(gl.DEPTH_BUFFER_BIT)\n        gl.depthFunc(gl.LESS)\n        gl.disable(gl.DEPTH_TEST)\n\n        try {\n            const { onAnimation } = this\n            if (typeof onAnimation === 'function') {\n                const width = gl.drawingBufferWidth\n                const height = gl.drawingBufferHeight\n                onAnimation(time, width, height)\n                this.pointer.reset()\n            }\n        } catch (ex) {\n            this._isRendering = false\n            console.error('##################################')\n            console.error('# Rendering   has  been  stopped #')\n            console.error('# because of the following error #')\n            console.error('##################################')\n            console.error(ex)\n        }\n    }\n}\n","/**\n * Resolution in CSS pixels. If omitted, the real resolution\n * of the device is taken. On smartphones, for instance,\n * the resolution is often greater than 1.\n *\n * Return `true` if the size has changed.\n */\nexport default (gl: WebGLRenderingContext, _resolution = 0) => {\n  const resolution = _resolution <= 0 ? window.devicePixelRatio : _resolution\n\n  const canvas = gl.canvas\n  if (canvas instanceof HTMLCanvasElement) {\n    const displayWidth = Math.floor(canvas.clientWidth * resolution)\n    const displayHeight = Math.floor(canvas.clientHeight * resolution)\n\n    // Check if the canvas is not the same size.\n    if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\n      // Make the canvas the same size\n      canvas.width = displayWidth\n      canvas.height = displayHeight\n      gl.viewport(0, 0, displayWidth, displayHeight)\n      return true\n    }\n  }\n  return false\n}\n","import React from \"react\"\nimport Tfw from 'tfw'\nimport Scene from '../../../gl/scene'\nimport PerspectiveCamera from '../../../gl/camera/perpective'\nimport Painter from '../../painter'\nimport Calc from '../../../gl/calc'\n\nimport \"./preview.css\"\n\ninterface IPreviewProps {\n    className?: string\n    painter(scene: Scene): Promise<Painter>\n    name?: string\n    type?: string\n    x?: number\n    y?: number\n    z?: number\n    dis?: number\n    lat?: number\n    onLoad?(): void\n}\n\nexport default class Preview extends React.Component<IPreviewProps, {}> {\n    private scene?: Scene\n    private refCanvas = React.createRef<HTMLCanvasElement>()\n\n    async componentDidMount() {\n        const canvas = this.refCanvas.current\n        if (!canvas) return\n        const scene = new Scene(canvas)\n        this.scene = scene\n        scene.camera = new PerspectiveCamera()\n        const painter = await this.props.painter(scene)\n        const { gl } = scene\n        gl.clearColor(0, 0, 0, 0)\n        if (!this.props.name) {\n            gl.clearColor(0.3, 0.5, 0.9, 1.0)\n        }\n        const dis = this.props.dis || 4\n        const lat = Calc.deg2rad(this.props.lat || 15)\n        const x = this.props.x || 0\n        const y = this.props.y || 0\n        const z = this.props.z || 0\n\n        scene.onAnimation = (time: number) => {\n            gl.clearDepth(+1)\n            gl.depthFunc(gl.LESS)\n            gl.enable(gl.DEPTH_TEST)\n            gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n            const lng = time * 0.001\n            const camera = scene.camera as PerspectiveCamera\n            camera.orbit(x, y, z, dis, lat, lng)\n\n            painter.paint(time)\n        }\n\n        scene.isRendering = true\n        if (typeof this.props.onLoad === 'function') this.props.onLoad()\n    }\n\n    componentWillUnmount() {\n        const { scene } = this\n        if (!scene) return\n        scene.isRendering = false\n    }\n\n    render() {\n        const classes = [\n            'app-view-Preview',\n            ...Tfw.Converter.StringArray(this.props.className, [])\n        ]\n        if (!this.props.name) classes.push(\"frame\")\n        const { name, type } = this.props\n\n        return (<div className={classes.join(' ')}>\n            <canvas ref={this.refCanvas}></canvas>\n            {name && <div className=\"name\">{name}</div>}\n            {type && <div className=\"type\">{type}</div>}\n        </div>)\n    }\n}\n","import Transfo from '../../gl/transfo'\nimport PolarLocSca from '../../gl/transfo/polar-loc-sca'\n\nexport default abstract class Painter<T extends Transfo = PolarLocSca> {\n    abstract get transfo(): T\n    abstract paint(time: number): void\n}\n","export interface IMeshDefinition {\n    name: string\n    vertices: number[]\n    textures: number[]\n    normals: number[]\n    faces: number[]\n    smoothness: string\n}\n\nconst VERTICES_PER_FACE = 3\nconst VALUES_PER_VERTEX = 3\nconst VALUES_PER_TEXTURE = 2\nconst VALUES_PER_NORMAL = 3\nconst VALUES_PER_FACE_VERTEX = 3\nconst VALUES_PER_FACE = VALUES_PER_FACE_VERTEX * VERTICES_PER_FACE\n\nconst X = 0\nconst Y = 1\nconst Z = 2\nconst U = 0\nconst V = 1\nconst VER = 0\nconst TEX = 1\nconst NOR = 2\n\nexport default class MeshDefinition {\n    public readonly id: string\n    public readonly verticesCount: number\n    public readonly texturesCount: number\n    public readonly normalsCount: number\n    public readonly facesCount: number\n\n    constructor(id: string, private def: IMeshDefinition) {\n        this.id = id\n        this.verticesCount = Math.floor(def.vertices.length / VALUES_PER_VERTEX)\n        this.texturesCount = Math.floor(def.textures.length / VALUES_PER_TEXTURE)\n        this.normalsCount = Math.floor(def.normals.length / VALUES_PER_NORMAL)\n        this.facesCount = Math.floor(def.faces.length / VALUES_PER_FACE)\n    }\n\n    getVertexX(index: number): number {\n        ensureIndexInRange(index, this.verticesCount)\n        return this.def.vertices[index * VALUES_PER_VERTEX + X]\n    }\n\n    getVertexY(index: number): number {\n        ensureIndexInRange(index, this.verticesCount)\n        return this.def.vertices[index * VALUES_PER_VERTEX + Y]\n    }\n\n    getVertexZ(index: number): number {\n        ensureIndexInRange(index, this.verticesCount)\n        return this.def.vertices[index * VALUES_PER_VERTEX + Z]\n    }\n\n    getTextureU(index: number): number {\n        ensureIndexInRange(index, this.texturesCount)\n        return this.def.textures[index * VALUES_PER_TEXTURE + U]\n    }\n\n    getTextureV(index: number): number {\n        ensureIndexInRange(index, this.texturesCount)\n        return this.def.textures[index * VALUES_PER_TEXTURE + V]\n    }\n\n    getNormalX(index: number): number {\n        ensureIndexInRange(index, this.normalsCount)\n        return this.def.normals[index * VALUES_PER_NORMAL + X]\n    }\n\n    getNormalY(index: number): number {\n        ensureIndexInRange(index, this.normalsCount)\n        return this.def.normals[index * VALUES_PER_NORMAL + Y]\n    }\n\n    getNormalZ(index: number): number {\n        ensureIndexInRange(index, this.normalsCount)\n        return this.def.normals[index * VALUES_PER_NORMAL + Z]\n    }\n\n    getFaceSmoothness(index: number): boolean {\n        ensureIndexInRange(index, this.facesCount)\n        return this.def.smoothness.charAt(index) === '1'\n    }\n\n    getFaceVertex(faceIdx: number, pointIdx: number): number {\n        ensureIndexInRange(faceIdx, this.facesCount)\n        const idx = faceIdx * VALUES_PER_FACE\n            + VALUES_PER_FACE_VERTEX * pointIdx\n            + VER\n        return this.def.faces[idx]\n    }\n\n    getFaceTexture(faceIdx: number, pointIdx: number): number {\n        ensureIndexInRange(faceIdx, this.facesCount)\n        const idx = faceIdx * VALUES_PER_FACE\n            + VALUES_PER_FACE_VERTEX * pointIdx\n            + TEX\n        return this.def.faces[idx]\n    }\n\n    getFaceNormal(faceIdx: number, pointIdx: number): number {\n        ensureIndexInRange(faceIdx, this.facesCount)\n        const idx = faceIdx * VALUES_PER_FACE\n            + VALUES_PER_FACE_VERTEX * pointIdx\n            + NOR\n        return this.def.faces[idx]\n    }\n}\n\n\n/**\n * Throw an exception is index is out of range.\n */\nfunction ensureIndexInRange(index: number, upperLimit: number) {\n    if (index < 0 || index >= upperLimit) {\n        throw `Index ${index} is out of range [0..${upperLimit - 1}]!`\n    }\n}\n","import AssetsMap from '../../assets-map'\nimport AsyncLoader from '../../async-loader'\nimport MeshDefinition, { IMeshDefinition } from './mesh-definition'\n\nconst MeshDefinitions = new AssetsMap<MeshDefinition>()\n\n\nexport default {\n    createOrGetFromCacheMeshDefinition\n}\n\n\nasync function createOrGetFromCacheMeshDefinition(definitionURL: string): Promise<MeshDefinition> {\n    const id = definitionURL\n    return MeshDefinitions.addAsync(\n        definitionURL,\n        async () => {\n            const definition =\n                (await AsyncLoader.loadJson(definitionURL)) as IMeshDefinition\n            return new MeshDefinition(id, definition)\n        }\n    )\n}\n","import Calc from '../calc'\nimport Program from '../program'\nimport Transfo from '../transfo'\nimport { IVec3 } from '../types'\n\nconst X = 0\nconst Y = 1\nconst Z = 2\nconst UP: IVec3 = new Float32Array([0, 1, 0])\n\nexport default abstract class Mesh {\n    protected location: IVec3 = Calc.vector.createVec3()\n    public readonly transfo: Transfo\n\n    constructor(transfo: Transfo) {\n        this.transfo = transfo\n    }\n\n    abstract get program(): Program\n\n    /**\n     * Paint the mesh on a scene.\n     */\n    abstract paint(time: number): void\n\n    /**\n     * Clean up.\n     */\n    abstract destroy(): void\n}\n","import Mesh from '../mesh'\nimport Scene from '../../scene'\nimport Program from '../../program'\nimport Texture from '../../texture'\nimport Transfo from '../../transfo'\nimport ArrayBuffer from '../../buffer/array-buffer'\n\ninterface IFresnelMeshParams {\n    scene: Scene\n    transfo: Transfo\n    attributesCount: number\n    arrayBuffer: ArrayBuffer\n    colorTexture: Texture\n    program: Program\n}\n\nexport default class FresnelMesh extends Mesh {\n    constructor(private params: IFresnelMeshParams) {\n        super(params.transfo)\n    }\n\n    get program() { return this.params.program }\n\n    paint(time: number) {\n        const { scene, arrayBuffer, colorTexture, program, attributesCount } = this.params\n        const { gl, camera } = scene\n\n        gl.enable(gl.CULL_FACE)\n        gl.cullFace(gl.BACK)\n        program.use()\n        camera.setUniformValues(program, scene.width, scene.height, time)\n        colorTexture.attachToUnit(0)\n        program.uniforms.set(\"uniObjectTransfo\", this.transfo.value)\n        program.uniforms.set(\"uniTexture\", 0)\n        program.bindAttribs(arrayBuffer.buffer)\n        gl.drawArrays(gl.TRIANGLES, 0, attributesCount)\n    }\n\n    destroy() {\n        const { arrayBuffer, colorTexture } = this.params\n        arrayBuffer.destroy()\n        colorTexture.destroy()\n    }\n}\n","import Common from '../common'\nimport Scene from '../../../scene'\nimport Camera from '../../../camera'\nimport Program from '../../../program'\nimport Transfo from '../../../transfo'\nimport FresnelMesh from '../../../mesh/fresnel'\nimport MeshDefinition from '../mesh-definition'\n\nimport MainVertShader from './main.vert'\nimport MainFragShader from './main.frag'\n\nexport default { createAsync }\n\nconst ATTRIBUTE_PER_VERTEX = 8\n\ninterface IParams {\n    scene: Scene\n    definitionURL: string\n    colorTextureURL: string\n}\n\nasync function createAsync(transfo: Transfo, params: IParams): Promise<FresnelMesh> {\n    const { scene, definitionURL, colorTextureURL } = params\n    const { camera } = scene\n    const id = `[FRESNEL]:${definitionURL}`\n    const meshDef = await Common.createOrGetFromCacheMeshDefinition(definitionURL)\n    const data = createData(meshDef)\n    const attributesCount = Math.floor(data.length / ATTRIBUTE_PER_VERTEX)\n    const arrayBuffer = scene.buffers.createArrayBuffer(id, data)\n    const colorTexture = await scene.textures.createImageTextureAsync({\n        url: colorTextureURL,\n        linear: false\n    })\n    const program = await createProgramAsync(scene, camera)\n    return new FresnelMesh({\n        scene: params.scene,\n        transfo,\n        arrayBuffer,\n        attributesCount,\n        colorTexture,\n        program\n    })\n}\n\n\nasync function createProgramAsync(scene: Scene, camera: Camera): Promise<Program> {\n    const id = `[FRESNEL]:${camera.id}`\n    const program = await scene.programs.createProgramAsync(\n        id,\n        {\n            uniforms: {\n                uniObjectTransfo: \"mat4\"\n            },\n            attributes: {\n                attLocation: \"vec3\",\n                attUV: \"vec2\",\n                attNormal: \"vec3\"\n            },\n            varyings: {\n                varNormal: \"vec3\",\n                varReflexion: \"vec3\",\n                varUV: \"vec2\"\n            },\n            functions: { main: MainVertShader },\n            dependencies: [camera.vertexShader]\n        },\n        {\n            uniforms: {\n                uniTexture: \"sampler2D\"\n            },\n            functions: { main: MainFragShader }\n        }\n    )\n    return program\n}\n\n\n/**\n * Each vertex has the following attributes:\n * float vertexX\n * float vertexY\n * float vertexZ\n * float textureU\n * float textureV\n * float normalX\n * float normalY\n * float normalZ\n */\nfunction createData(meshDef: MeshDefinition): Float32Array {\n    const data: number[] = []\n    const POINTS_PER_FACE = 3\n\n    for (let faceIdx = 0; faceIdx < meshDef.facesCount; faceIdx++) {\n        for (let pointIdx = 0; pointIdx < POINTS_PER_FACE; pointIdx++) {\n            const vertexIdx = meshDef.getFaceVertex(faceIdx, pointIdx)\n            data.push(\n                meshDef.getVertexX(vertexIdx),\n                meshDef.getVertexY(vertexIdx),\n                meshDef.getVertexZ(vertexIdx)\n            )\n            const textureIdx = meshDef.getFaceTexture(faceIdx, pointIdx)\n            data.push(\n                meshDef.getTextureU(textureIdx),\n                meshDef.getTextureV(textureIdx)\n            )\n            const normalIdx = meshDef.getFaceNormal(faceIdx, pointIdx)\n            data.push(\n                meshDef.getNormalX(normalIdx),\n                meshDef.getNormalY(normalIdx),\n                meshDef.getNormalZ(normalIdx)\n            )\n        }\n    }\n\n    return new Float32Array(data)\n}\n","import Mesh from '../mesh'\nimport Scene from '../../scene'\nimport Program from '../../program'\nimport Transfo from '../../transfo'\nimport ArrayBuffer from '../../buffer/array-buffer'\n\ninterface IFresnelMeshParams {\n    scene: Scene\n    transfo: Transfo\n    attributesCount: number\n    arrayBuffer: ArrayBuffer\n    program: Program\n}\n\nconst R = 0\nconst G = 1\nconst B = 2\nconst A = 3\n\nexport default class OutlineMesh extends Mesh {\n    public readonly color = new Float32Array([0, 0, 0, 1])\n    public thickness = 2\n\n    constructor(private params: IFresnelMeshParams) {\n        super(params.transfo)\n        console.info(\"params=\", params)\n    }\n\n    get program() { return this.params.program }\n\n    setRGB(r: number, g: number, b: number) {\n        const { color } = this\n        color[R] = r\n        color[G] = g\n        color[B] = b\n    }\n\n    setRGBA(r: number, g: number, b: number, a: number) {\n        const { color } = this\n        color[R] = r\n        color[G] = g\n        color[B] = b\n        color[A] = a\n    }\n\n    paint(time: number) {\n        const THICKNESS_MULTIPLIER = 0.001\n        const { scene, arrayBuffer, program, attributesCount } = this.params\n        const { gl, camera } = scene\n        gl.enable(gl.CULL_FACE)\n        // The trick for outlining is to show only back faces.\n        gl.cullFace(gl.FRONT)\n        program.use()\n        camera.setUniformValues(program, scene.width, scene.height, time)\n        program.uniforms.set(\"uniColor\", this.color)\n        program.uniforms.set(\"uniThickness\", this.thickness * THICKNESS_MULTIPLIER)\n        program.uniforms.set(\"uniObjectTransfo\", this.transfo.value)\n        program.bindAttribs(arrayBuffer.buffer)\n        gl.drawArrays(gl.TRIANGLES, 0, attributesCount)\n    }\n\n    destroy() {\n        const { arrayBuffer } = this.params\n        arrayBuffer.destroy()\n    }\n}\n","import Common from '../common'\nimport Scene from '../../../scene'\nimport Program from '../../../program'\nimport OutlineMesh from '../../../mesh/outline'\nimport MeshDefinition from '../mesh-definition'\nimport Transfo from '../../../transfo'\n\nimport MainVertShader from './main.vert'\nimport MainFragShader from './main.frag'\n\nexport default { createAsync }\n\nconst ATTRIBUTE_PER_VERTEX = 6\n\ninterface IParams {\n    scene: Scene\n    transfo: Transfo\n    definitionURL: string\n}\n\nasync function createAsync(params: IParams): Promise<OutlineMesh> {\n    const { scene, definitionURL } = params\n    const id = `[OUTLINE]:${definitionURL}`\n    const meshDef = await Common.createOrGetFromCacheMeshDefinition(definitionURL)\n    const data = createData(meshDef)\n    const attributesCount = Math.floor(data.length / ATTRIBUTE_PER_VERTEX)\n    const arrayBuffer = scene.buffers.createArrayBuffer(id, data)\n    const program = await createProgramAsync(scene)\n    return new OutlineMesh({\n        scene,\n        transfo: params.transfo,\n        arrayBuffer,\n        attributesCount,\n        program\n    })\n}\n\n\nasync function createProgramAsync(scene: Scene): Promise<Program> {\n    const { camera } = scene\n    const id = `[OUTLINE]:${camera.id}`\n    const program = await scene.programs.createProgramAsync(\n        id,\n        {\n            uniforms: {\n                uniObjectTransfo: \"mat4\",\n                uniThickness: \"float\"\n            },\n            attributes: {\n                attLocation: \"vec3\",\n                attNormal: \"vec3\"\n            },\n            functions: { main: MainVertShader },\n            dependencies: [camera.vertexShader]\n        },\n        {\n            uniforms: {\n                uniColor: \"vec4\"\n            },\n            functions: { main: MainFragShader }\n        }\n    )\n    return program\n}\n\n\n/**\n * Each vertex has the following attributes:\n * float vertexX\n * float vertexY\n * float vertexZ\n * float textureU\n * float textureV\n * float normalX\n * float normalY\n * float normalZ\n */\nfunction createData(meshDef: MeshDefinition): Float32Array {\n    const data: number[] = []\n    const vertices: Vertex[] = []\n    const POINTS_PER_FACE = 3\n\n    for (let faceIdx = 0; faceIdx < meshDef.facesCount; faceIdx++) {\n        for (let pointIdx = 0; pointIdx < POINTS_PER_FACE; pointIdx++) {\n            const vertexIdx = meshDef.getFaceVertex(faceIdx, pointIdx)\n            if (!vertices[vertexIdx]) {\n                vertices[vertexIdx] = new Vertex(\n                    meshDef.getVertexX(vertexIdx),\n                    meshDef.getVertexY(vertexIdx),\n                    meshDef.getVertexZ(vertexIdx)\n                )\n            }\n            const vertex = vertices[vertexIdx]\n            const normalIdx = meshDef.getFaceNormal(faceIdx, pointIdx)\n            vertex.addNormal(\n                meshDef.getNormalX(normalIdx),\n                meshDef.getNormalY(normalIdx),\n                meshDef.getNormalZ(normalIdx)\n            )\n        }\n    }\n\n    for (let faceIdx = 0; faceIdx < meshDef.facesCount; faceIdx++) {\n        for (let pointIdx = 0; pointIdx < POINTS_PER_FACE; pointIdx++) {\n            const vertexIdx = meshDef.getFaceVertex(faceIdx, pointIdx)\n            const vertex = vertices[vertexIdx]\n            data.push(...vertex.data)\n        }\n    }\n\n    console.info(\"data=\", data)\n    return new Float32Array(data)\n}\n\nclass Vertex {\n    private normalX = 0\n    private normalY = 0\n    private normalZ = 0\n    private normalsCount = 0\n\n    constructor(private x: number, private y: number, private z: number) { }\n\n    addNormal(x: number, y: number, z: number) {\n        this.normalX += x\n        this.normalY += y\n        this.normalZ += z\n        this.normalsCount++\n    }\n\n    get data() {\n        const n = Math.max(1, this.normalsCount)\n        const nx = this.normalX / n\n        const ny = this.normalY / n\n        const nz = this.normalZ / n\n        const lenInv = 1 / Math.sqrt(nx * nx + ny * ny + nz * nz)\n\n        return [\n            this.x,\n            this.y,\n            this.z,\n            nx * lenInv,\n            ny * lenInv,\n            nz * lenInv\n        ]\n    }\n}\n","import Fresnel from './fresnel'\nimport Outline from './outline'\n\nexport default {\n    Fresnel,\n    Outline\n}\n","import Calc from '../calc'\nimport { IMat4 } from '../types'\n\nexport default abstract class Transfo {\n    public parent?: Transfo\n    protected transfo: IMat4 = new Float32Array([\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n    ])\n    private composedTransfo: IMat4 = new Float32Array([\n        1, 0, 0, 0,\n        0, 1, 0, 0,\n        0, 0, 1, 0,\n        0, 0, 0, 1\n    ])\n    protected abstract compute(): IMat4\n\n    get value(): IMat4 {\n        const value = this.compute()\n        const { parent } = this\n        if (!parent) return value\n        Calc.matrix.multiply4(parent.transfo, value, this.composedTransfo)\n        return this.composedTransfo\n    }\n}\n","import Calc from '../calc'\nimport Transfo from './transfo'\n\nexport default class PolarLocSca extends Transfo {\n    private _x = 0\n    private _y = 0\n    private _z = 0\n    private _sx = 1\n    private _sy = 1\n    private _sz = 1\n    private _lat = 0\n    private _lng = 0\n    private _dirty = true\n\n    get x() { return this._x }\n    set x(v: number) {\n        this._x = v\n        this._dirty = true\n    }\n    get y() { return this._y }\n    set y(v: number) {\n        this._y = v\n        this._dirty = true\n    }\n    get z() { return this._z }\n    set z(v: number) {\n        this._z = v\n        this._dirty = true\n    }\n    get sx() { return this._sx }\n    set sx(v: number) {\n        this._sx = v\n        this._dirty = true\n    }\n    get sy() { return this._sy }\n    set sy(v: number) {\n        this._sy = v\n        this._dirty = true\n    }\n    get sz() { return this._sz }\n    set sz(v: number) {\n        this._sz = v\n        this._dirty = true\n    }\n    /**\n     * Latitude in degres.\n     */\n    get lat() { return this._lat }\n    /**\n     * Latitude in degres.\n     */\n    set lat(v: number) {\n        this._lat = v\n        this._dirty = true\n    }\n    /**\n     * Longitude in degres.\n     */\n    get lng() { return this._lng }\n    /**\n     * Longitude in degres.\n     */\n    set lng(v: number) {\n        this._lng = v\n        this._dirty = true\n    }\n\n    protected compute() {\n        if (!this._dirty) return this.transfo\n\n        const { x, y, z, sx, sy, sz, lat, lng, transfo } = this\n        const latRad = Calc.deg2rad(lat)\n        const lngRad = Calc.deg2rad(lng)\n        const cosX = Math.cos(latRad)\n        const sinX = Math.sin(latRad)\n        const cosY = Math.cos(lngRad)\n        const sinY = Math.sin(lngRad)\n\n        transfo[Calc.M4_00] = sx * cosY\n        transfo[Calc.M4_10] = 0\n        transfo[Calc.M4_20] = -sx * sinY\n        transfo[Calc.M4_30] = 0\n        transfo[Calc.M4_01] = sy * sinX * sinY\n        transfo[Calc.M4_11] = sy * cosX\n        transfo[Calc.M4_21] = sy * sinX * cosY\n        transfo[Calc.M4_31] = 0\n        transfo[Calc.M4_02] = sz * cosX * sinY\n        transfo[Calc.M4_12] = -sz * sinX\n        transfo[Calc.M4_22] = sz * cosX * cosY\n        transfo[Calc.M4_32] = 0\n        transfo[Calc.M4_03] = x\n        transfo[Calc.M4_13] = y\n        transfo[Calc.M4_23] = z\n        transfo[Calc.M4_33] = 1\n\n        this._dirty = false\n        return transfo\n    }\n}\n","import Mesh from '../gl/mesh'\nimport OutlineMesh from '../gl/mesh/outline'\nimport PolarLocSca from '../gl/transfo/polar-loc-sca'\n\nexport default class WorldObj {\n    public readonly transfo: PolarLocSca\n\n    constructor(private body: Mesh, private outline: OutlineMesh) {\n        const { transfo } = this.body\n        if (transfo instanceof PolarLocSca) {\n            this.transfo = transfo\n        } else {\n            throw Error(\"Expected a PolarLocSca transfo!\")\n        }\n    }\n\n    get color() { return this.outline.color }\n    get thickness() { return this.outline.thickness }\n    set thickness(v: number) { this.outline.thickness = v }\n\n    paint(time: number) {\n        this.outline.paint(time)\n        this.body.paint(time)\n    }\n}\n","import Scene from '../gl/scene'\nimport MeshFactory from '../gl/factory/mesh'\nimport Mesh from '../gl/mesh'\nimport OutlineMesh from '../gl/mesh/outline'\nimport PolarLocSca from '../gl/transfo/polar-loc-sca'\nimport WorldObj from './world-obj'\n\nconst PALETTE = \"./assets/palette/default-64.png\"\n\nexport default {\n    async createAsync(scene: Scene, url: string): Promise<WorldObj> {\n        const transfo = new PolarLocSca()\n        const body = await MeshFactory.Fresnel.createAsync(\n            transfo, {\n                colorTextureURL: PALETTE,\n                definitionURL: url,\n                scene\n            }\n        )\n        const outline = await MeshFactory.Outline.createAsync({\n            transfo,\n            definitionURL: url,\n            scene\n        })\n        return new WorldObj(body, outline)\n    }\n}\n","import Scene from '../../gl/scene'\nimport Painter from './painter'\nimport WorldObj from '../world-obj'\nimport WorldObjFactory from '../world-obj-factory'\n\nexport default class Golgoth extends Painter {\n    static async createAsync(scene: Scene): Promise<Golgoth> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Golgoth.json'\n        )\n        return new Golgoth(mainObject)\n    }\n\n    private constructor(private mainObject: WorldObj) {\n        super()\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.mainObject.paint(time)\n    }\n}\n","import Scene from '../../gl/scene'\nimport Painter from './painter'\nimport WorldObj from '../world-obj'\nimport WorldObjFactory from '../world-obj-factory'\n\nexport default class Balzac extends Painter {\n    static async createAsync(scene: Scene): Promise<Balzac> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Balzac.json'\n        )\n        return new Balzac(mainObject)\n    }\n\n    private constructor(private mainObject: WorldObj) {\n        super()\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.mainObject.paint(time)\n    }\n}\n","import Scene from '../../gl/scene'\nimport Painter from './painter'\nimport WorldObj from '../world-obj'\nimport WorldObjFactory from '../world-obj-factory'\n\nexport default class Hydre extends Painter {\n    static async createAsync(scene: Scene): Promise<Hydre> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Hydre.json'\n        )\n        return new Hydre(mainObject)\n    }\n\n    private constructor(private mainObject: WorldObj) {\n        super()\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.mainObject.paint(time)\n    }\n}\n","import Scene from '../../gl/scene'\nimport Painter from './painter'\nimport WorldObj from '../world-obj'\nimport WorldObjFactory from '../world-obj-factory'\n\nexport default class Tyson extends Painter {\n    static async createAsync(scene: Scene): Promise<Tyson> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Tyson.json'\n        )\n        return new Tyson(mainObject)\n    }\n\n    private constructor(private mainObject: WorldObj) {\n        super()\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.mainObject.paint(time)\n    }\n}\n","import Calc from '../calc'\nimport Transfo from './transfo'\n\nexport default class StaticTransfo extends Transfo {\n    private _transfo = Calc.matrix.createMat4()\n\n    constructor(\n        x: number = 0, y: number = 0, z: number = 0,\n        sx: number = 1, sy: number = 0, sz: number = 0\n    ) {\n        super()\n        const t = this._transfo\n        t[Calc.M4_00] = sx\n        t[Calc.M4_11] = sy || sx\n        t[Calc.M4_22] = sz || sx\n        t[Calc.M4_33] = 1\n        t[Calc.M4_03] = x\n        t[Calc.M4_13] = y\n        t[Calc.M4_23] = z\n    }\n\n    protected compute() { return this._transfo }\n}\n","import Scene from '../../../../gl/scene'\nimport Painter from '../../painter'\nimport Transfo from '../../../../gl/transfo/static-transfo'\nimport Program from '../../../../gl/program'\nimport ArrayBuffer from '../../../../gl/buffer/array-buffer'\n\n\nconst DROP_SIZE = 2\n\nexport default class SmokePainter extends Painter<Transfo> {\n    private _transfo = new Transfo(0, 0, 0)\n\n    constructor(\n        private scene: Scene,\n        private program: Program,\n        private arrayBuffer: ArrayBuffer,\n        private dropsCount: number\n    ) {\n        super()\n    }\n\n    get transfo() { return this._transfo }\n\n    paint(time: number) {\n        const { scene, program, arrayBuffer, dropsCount } = this\n        const { gl, camera } = scene\n\n        gl.depthMask(false)\n        gl.enable(gl.BLEND)\n        gl.blendFunc(gl.ONE, gl.DST_ALPHA)\n\n        program.use()\n        camera.setUniformValues(program, scene.width, scene.height, time)\n        program.uniforms.set(\"uniObjectTransfo\", this.transfo.value)\n        program.uniforms.set(\"uniTime\", time)\n        program.uniforms.set(\n            \"uniDropSize\",\n            Math.min(scene.width, scene.height) * DROP_SIZE\n        )\n        program.bindAttribs(arrayBuffer.buffer)\n        gl.drawArrays(gl.POINTS, 0, dropsCount)\n\n        gl.disable(gl.BLEND)\n        gl.depthMask(true)\n    }\n}\n","import Scene from '../../../../gl/scene'\nimport SmokePainter from './smoke'\n\nimport MainVertShader from './main.vert'\nimport MainFragShader from './main.frag'\n\n\nconst DROPS_COUNT = 100\nconst BASE_RADIUS = 0.5\nconst LIFE_TIME = 20000\nconst EXTRA_LIFE_TIME = 1000\n\n\nexport default {\n    async createAsync(scene: Scene): Promise<SmokePainter> {\n        const arrayBuffer = scene.buffers.createArrayBuffer(\"particle.smoke\", createData())\n        const program = await createProgramAsync(scene)\n        return new SmokePainter(scene, program, arrayBuffer, DROPS_COUNT)\n    }\n}\n\nasync function createProgramAsync(scene: Scene) {\n    const { camera } = scene\n    const program = await scene.programs.createProgramAsync(\n        `[PARTICLE.SMOKE]:${camera.id}`,\n        {\n            uniforms: {\n                uniTime: \"float\",\n                uniDropSize: \"float\",\n                uniObjectTransfo: \"mat4\"\n            },\n            varyings: { varTime: \"float\" },\n            attributes: {\n                attLocation: \"vec3\",\n                attShift: \"float\",\n                attCycle: \"float\",\n                attCycleInv: \"float\"\n            },\n            functions: { main: MainVertShader },\n            dependencies: [camera.vertexShader]\n        },\n        {\n            functions: { main: MainFragShader }\n        }\n    )\n    return program\n}\n\nfunction createData(): Float32Array {\n    const data: number[] = []\n    for (let loop = 0; loop < DROPS_COUNT; loop++) {\n        const cycleTime = Math.floor(rnd(LIFE_TIME, LIFE_TIME + EXTRA_LIFE_TIME))\n        const shiftTime = Math.floor(rnd(0, LIFE_TIME))\n        data.push(\n            rnd(-BASE_RADIUS, +BASE_RADIUS),\n            0,\n            rnd(-BASE_RADIUS, +BASE_RADIUS),\n            shiftTime,\n            cycleTime,\n            1 / cycleTime\n        )\n    }\n    return new Float32Array(data)\n}\n\n\nfunction rnd(min: number, max: number): number {\n    return min + (max - min) * Math.random()\n}\n","import Scene from '../../../gl/scene'\nimport Painter from '../painter'\nimport WorldObj from '../../world-obj'\nimport WorldObjFactory from '../../world-obj-factory'\nimport Smoke from './smoke'\nimport SmokeFactory from './smoke/smoke-factory'\n\nexport default class VolcanoIsland extends Painter {\n    static async createAsync(scene: Scene): Promise<VolcanoIsland> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Island-A.json'\n        )\n        const smoke = await SmokeFactory.createAsync(scene)\n        return new VolcanoIsland(mainObject, smoke)\n    }\n\n    private constructor(private mainObject: WorldObj, private smoke: Smoke) {\n        super()\n        smoke.transfo.parent = mainObject.transfo\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.mainObject.paint(time)\n        this.smoke.paint(time)\n    }\n}\n","import Scene from '../../../../gl/scene'\nimport Painter from '../../painter'\nimport Transfo from '../../../../gl/transfo/static-transfo'\nimport Program from '../../../../gl/program'\nimport ArrayBuffer from '../../../../gl/buffer/array-buffer'\n\nexport default class RainPainter extends Painter<Transfo> {\n    private _transfo = new Transfo(0, 0, 0)\n\n    constructor(\n        private scene: Scene,\n        private program: Program,\n        private arrayBuffer: ArrayBuffer,\n        private dropsCount: number\n    ) {\n        super()\n    }\n\n    get transfo() { return this._transfo }\n\n    paint(time: number) {\n        const { scene, program, arrayBuffer, dropsCount } = this\n        const { gl, camera } = scene\n\n        gl.depthMask(false)\n        gl.enable(gl.BLEND)\n        gl.blendFunc(gl.ONE, gl.ONE)\n\n        program.use()\n        camera.setUniformValues(program, scene.width, scene.height, time)\n        program.uniforms.set(\"uniTime\", time)\n        program.uniforms.set(\"uniObjectTransfo\", this.transfo.value)\n        program.bindAttribs(arrayBuffer.buffer)\n        gl.drawArrays(gl.LINES, 0, dropsCount + dropsCount)\n\n        gl.disable(gl.BLEND)\n        gl.depthMask(true)\n    }\n}\n","import Scene from '../../../../gl/scene'\nimport RainPainter from './rain'\n\nimport MainVertShader from './main.vert'\nimport MainFragShader from './main.frag'\n\n\nconst DROPS_COUNT = 300\nconst TIME_TO_FALL = 500\nconst MAX_CYCLE = 500\n\n\nexport default {\n    async createAsync(scene: Scene): Promise<RainPainter> {\n        const arrayBuffer = scene.buffers.createArrayBuffer(\"particle.rain\", createData())\n        const program = await createProgramAsync(scene)\n        return new RainPainter(scene, program, arrayBuffer, DROPS_COUNT)\n    }\n}\n\nasync function createProgramAsync(scene: Scene) {\n    const { camera } = scene\n    const program = await scene.programs.createProgramAsync(\n        `[PARTICLE.RAIN]:${camera.id}`,\n        {\n            uniforms: {\n                uniTime: \"float\",\n                uniObjectTransfo: \"mat4\"\n            },\n            varyings: { varSegment: \"float\" },\n            attributes: {\n                attLocation: \"vec3\",\n                attShift: \"float\",\n                attCycle: \"float\",\n                attCycleInv: \"float\",\n                attSegment: \"float\"\n            },\n            functions: { main: MainVertShader },\n            dependencies: [camera.vertexShader]\n        },\n        {\n            functions: { main: MainFragShader }\n        }\n    )\n    return program\n}\n\nfunction createData(): Float32Array {\n    const data: number[] = []\n    for (let loop = 0; loop < DROPS_COUNT; loop++) {\n        const cycleTime = Math.floor(rnd(TIME_TO_FALL, TIME_TO_FALL + MAX_CYCLE))\n        const shiftTime = Math.floor(rnd(0, TIME_TO_FALL))\n        const x = rnd(-1, +1)\n        const y = 8\n        const z = rnd(-2, +2)\n        data.push(\n            x, y, z, shiftTime, cycleTime, 1 / cycleTime, 0,\n            x, y, z, shiftTime, cycleTime, 1 / cycleTime, 1\n        )\n    }\n    return new Float32Array(data)\n}\n\n\nfunction rnd(min: number, max: number): number {\n    return min + (max - min) * Math.random()\n}\n","import Scene from '../../../gl/scene'\nimport Painter from '../painter'\nimport WorldObj from '../../world-obj'\nimport WorldObjFactory from '../../world-obj-factory'\nimport Rain from './rain'\nimport RainFactory from './rain/rain-factory'\n\nexport default class StoneIsland extends Painter {\n    static async createAsync(scene: Scene): Promise<StoneIsland> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Stone.json'\n        )\n        const helixObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Helix.json'\n        )\n        const rain = await RainFactory.createAsync(scene)\n        return new StoneIsland(mainObject, helixObject, rain)\n    }\n\n    private constructor(\n        private mainObject: WorldObj,\n        private helixObject: WorldObj,\n        private rain: Rain\n    ) {\n        super()\n        helixObject.transfo.parent = mainObject.transfo\n        rain.transfo.parent = mainObject.transfo\n        const scale = 3\n        helixObject.transfo.sx = scale\n        helixObject.transfo.sy = scale\n        helixObject.transfo.sz = scale\n        helixObject.transfo.y = -1\n\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.helixObject.transfo.lng = -time * 0.2\n\n        this.mainObject.paint(time)\n        this.helixObject.paint(time)\n        this.rain.paint(time)\n    }\n}\n","import Scene from '../../gl/scene'\nimport Painter from './painter'\nimport WorldObj from '../world-obj'\nimport WorldObjFactory from '../world-obj-factory'\n\nexport default class MolinoIsland extends Painter {\n    static async createAsync(scene: Scene): Promise<MolinoIsland> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Island-B.json'\n        )\n        const helixObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Helix.json'\n        )\n        return new MolinoIsland(mainObject, helixObject)\n    }\n\n    private constructor(private mainObject: WorldObj, private helixObject: WorldObj) {\n        super()\n        helixObject.transfo.parent = mainObject.transfo\n        helixObject.transfo.y = 10\n        const scale = 10\n        helixObject.transfo.sx = scale\n        helixObject.transfo.sy = scale\n        helixObject.transfo.sz = scale\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.helixObject.transfo.lng = -time * 0.1\n\n        this.mainObject.paint(time)\n        this.helixObject.paint(time)\n    }\n}\n","import Scene from '../../gl/scene'\nimport Painter from './painter'\nimport WorldObj from '../world-obj'\nimport WorldObjFactory from '../world-obj-factory'\n\nexport default class Umbrella extends Painter {\n    static async createAsync(scene: Scene): Promise<Umbrella> {\n        const mainObject = await WorldObjFactory.createAsync(\n            scene, './assets/mesh/Umbrella.json'\n        )\n        return new Umbrella(mainObject)\n    }\n\n    private constructor(private mainObject: WorldObj) {\n        super()\n    }\n\n    get transfo() { return this.mainObject.transfo }\n\n    paint(time: number) {\n        this.mainObject.paint(time)\n    }\n}\n","import React from \"react\"\nimport Tfw from 'tfw'\nimport Preview from '../preview'\nimport GolgothPainter from '../../painter/golgoth'\nimport BalzacPainter from '../../painter/balzac'\nimport HydrePainter from '../../painter/hydre'\nimport TysonPainter from '../../painter/tyson'\nimport VolcanoPainter from '../../painter/volcano'\nimport StonePainter from '../../painter/stone'\nimport MolinoPainter from '../../painter/molino'\nimport UmbrellaPainter from '../../painter/umbrella'\n\nimport \"./intro.css\"\n\nconst _ = Tfw.Intl.make(require(\"./intro.json\"))\nconst Button = Tfw.View.Button\n\ninterface IIntroProps {\n    onLoad(): void\n    onDone(): void\n}\n\ninterface IIntroState {\n    page: number\n    golgoth: boolean\n    balzac: boolean\n    hydre: boolean\n    tyson: boolean\n    done: boolean\n}\n\nexport default class Intro extends React.Component<IIntroProps, IIntroState> {\n    state = {\n        page: 0,\n        golgoth: false,\n        balzac: false,\n        hydre: false,\n        tyson: false,\n        done: false\n    }\n\n    componentDidMount() {\n        window.document.addEventListener(\"keyup\", (evt: KeyboardEvent) => {\n            if (evt.key === 'Escape') {\n                this.setState({ page: 666 }, this.handleNextPage)\n            }\n        })\n\n    }\n\n    handleLoad = (name: keyof IIntroState) => {\n        switch (name) {\n            case \"golgoth\":\n                this.setState({ golgoth: true }, this.checkIsLoaded)\n                break\n            case \"balzac\":\n                this.setState({ balzac: true }, this.checkIsLoaded)\n                break\n            case \"hydre\":\n                this.setState({ hydre: true }, this.checkIsLoaded)\n                break\n            case \"tyson\":\n                this.setState({ tyson: true }, this.checkIsLoaded)\n                break\n            default:\n                throw Error(\"Impossible!\")\n        }\n    }\n\n    private checkIsLoaded = () => {\n        if (!this.state.golgoth) return\n        if (!this.state.balzac) return\n        if (!this.state.hydre) return\n        if (!this.state.tyson) return\n\n        this.props.onLoad()\n    }\n\n    private page(sectionPage: number) {\n        const { page } = this.state\n        if (page === sectionPage) return 'in'\n        if (page > sectionPage) return 'out'\n        return ''\n    }\n\n    private handleNextPage = () => {\n        if (this.state.page > 3) {\n            this.setState({ done: true })\n            window.setTimeout(this.props.onDone, 500)\n        }\n        this.setState({ page: this.state.page + 1 })\n    }\n\n    render() {\n        const classes = ['app-Intro']\n        if (this.state.done) {\n            classes.push(\"hide\")\n        }\n\n        return (<div className={classes.join(' ')}>\n            <Preview\n                y={1}\n                className=\"golgoth\"\n                painter={GolgothPainter.createAsync}\n                name=\"golgoth\"\n                type={_('type-golgoth')}\n                onLoad={() => this.handleLoad(\"golgoth\")}\n            />\n            <Preview\n                y={1}\n                className=\"balzac\"\n                painter={BalzacPainter.createAsync}\n                name=\"balzac\"\n                type={_('type-balzac')}\n                onLoad={() => this.handleLoad(\"balzac\")}\n            />\n            <Preview\n                y={0}\n                className=\"hydre\"\n                painter={HydrePainter.createAsync}\n                name=\"hydre\"\n                type={_('type-hydre')}\n                onLoad={() => this.handleLoad(\"hydre\")}\n            />\n            <Preview\n                y={1}\n                className=\"tyson\"\n                painter={TysonPainter.createAsync}\n                name=\"tyson\"\n                type={_('type-tyson')}\n                onLoad={() => this.handleLoad(\"tyson\")}\n            />\n            <div className=\"story\">\n                <section className={this.page(0)}>\n                    <p>{_('story1')}</p>\n                    <Preview\n                        className=\"small-canvas\"\n                        dis={20}\n                        lat={45}\n                        painter={VolcanoPainter.createAsync}\n                    />\n                    <Button\n                        icon=\"right\"\n                        warning={true}\n                        onClick={this.handleNextPage}\n                    />\n                </section>\n                <section className={this.page(1)}>\n                    <p>{_('story2a')}</p>\n                    <div className=\"big\">17''</div>\n                    <p>{_('story2b')}</p>\n                    <Button\n                        icon=\"right\"\n                        warning={true}\n                        onClick={this.handleNextPage}\n                    />\n                </section>\n                <section className={this.page(2)}>\n                    <p>{_('story3')}</p>\n                    <Preview\n                        className=\"small-canvas\"\n                        dis={38}\n                        lat={45}\n                        painter={MolinoPainter.createAsync}\n                    />\n                    <Button\n                        icon=\"right\"\n                        warning={true}\n                        onClick={this.handleNextPage}\n                    />\n                </section>\n                <section className={this.page(3)}>\n                    <p>{_('story4')}</p>\n                    <Preview\n                        className=\"small-canvas\"\n                        dis={15}\n                        lat={40}\n                        y={3}\n                        painter={StonePainter.createAsync}\n                    />\n                    <Button\n                        icon=\"right\"\n                        warning={true}\n                        onClick={this.handleNextPage}\n                    />\n                </section>\n                <section className={this.page(4)}>\n                    <p>{_('story5')}</p>\n                    <Preview\n                        className=\"small-canvas\"\n                        dis={7}\n                        lat={15}\n                        y={0}\n                        painter={UmbrellaPainter.createAsync}\n                    />\n                    <Button\n                        icon=\"right\"\n                        warning={true}\n                        onClick={this.handleNextPage}\n                    />\n                </section>\n            </div>\n        </div>)\n    }\n}\n","import React from \"react\"\nimport Tfw from 'tfw'\nimport Calc from '../../../gl/calc'\nimport Scene from '../../../gl/scene'\nimport GameManager from '../../manager/game'\nimport PerspectiveCamera from '../../../gl/camera/perpective'\nimport GolgothPainter from '../../painter/golgoth'\nimport BalzacPainter from '../../painter/balzac'\nimport HydrePainter from '../../painter/hydre'\nimport TysonPainter from '../../painter/tyson'\nimport VolcanoPainter from '../../painter/volcano'\nimport StonePainter from '../../painter/stone'\nimport MolinoPainter from '../../painter/molino'\nimport UmbrellaPainter from '../../painter/umbrella'\n\nimport { IObjects } from '../../types'\n\nimport \"./game.css\"\n\n//const _ = Tfw.Intl.make(require(\"./game.yaml\"))\n\ninterface IGameProps {\n    className?: string | string[]\n    gameManager: GameManager\n}\ninterface IGameState {\n    loaded: boolean\n}\n\nexport default class Game extends React.Component<IGameProps, IGameState> {\n    private refCanvas = React.createRef<HTMLCanvasElement>()\n    private camera = new PerspectiveCamera()\n    private scene?: Scene\n    private objects?: IObjects\n\n    state = { loaded: false }\n\n    async componentDidMount() {\n        const canvas = this.refCanvas.current\n        if (!canvas) return\n        const scene = new Scene(canvas)\n        this.scene = scene\n        this.initCamera(scene)\n        this.objects = {\n            volcano: await VolcanoPainter.createAsync(scene),\n            molino: await MolinoPainter.createAsync(scene),\n            umbrella: await UmbrellaPainter.createAsync(scene),\n            tyson: await TysonPainter.createAsync(scene),\n            hydre: await HydrePainter.createAsync(scene),\n            balzac: await BalzacPainter.createAsync(scene),\n            golgoth: await GolgothPainter.createAsync(scene),\n            stone: await StonePainter.createAsync(scene)\n        }\n\n        scene.onAnimation = this.sceneRender\n        scene.isRendering = true\n\n        this.setState({ loaded: true })\n    }\n\n    private initCamera(scene: Scene) {\n        const { camera } = this\n        scene.camera = camera\n        camera.orbit(0, 0, 0, 40, Calc.deg2rad(30), Calc.deg2rad(0))\n    }\n\n    private sceneRender = (time: number) => {\n        const { scene, objects } = this\n        if (!scene || !objects) return\n        const { gl } = scene\n\n        gl.clearColor(0.3, 0.5, 0.9, 1.0)\n        gl.clearDepth(+1)\n        gl.depthFunc(gl.LESS)\n        gl.enable(gl.DEPTH_TEST)\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n\n        for (const key of Object.keys(objects)) {\n            const painter = objects[key as keyof IObjects]\n            painter.paint(time)\n        }\n\n        this.move(time)\n    }\n\n    private move(time: number) {\n        const { objects, scene, camera } = this\n        if (!objects || !scene) return\n        const gameManager = this.props.gameManager\n        gameManager.play(time, objects, camera)\n    }\n\n    render() {\n        const classes = [\n            'app-view-Game',\n            ...Tfw.Converter.StringArray(this.props.className, [])\n        ]\n        if (this.state.loaded) classes.push(\"show\")\n\n        return <canvas ref={this.refCanvas} className={classes.join(' ')}></canvas>\n    }\n}\n","import React from \"react\"\nimport Tfw from 'tfw'\nimport GameManager from '../../manager/game'\n\n\nimport \"./controls.css\"\n\nconst Button = Tfw.View.Button\nconst _ = Tfw.Intl.make(require(\"./controls.yaml\"))\n\ninterface IControlsProps {\n    className?: string | string[]\n    gameManager: GameManager\n}\n\ninterface IControlsState {}\n\nexport default class Controls extends React.Component<IControlsProps, IControlsState> {\n    state = {}\n\n    render() {\n        const classes = [\n            'app-view-Controls',\n            ...Tfw.Converter.StringArray(this.props.className, [])\n        ]\n\n        return (<div className={classes.join(' ')}>\n        <Button icon=\"right\" label='Jump'  />\n        <Button icon=\"undo\" label='Undo'  />\n        </div>)\n    }\n}\n","import Calc from '../../gl/calc'\nimport Scene from '../../gl/scene'\nimport PerspectiveCamera from '../../gl/camera/perpective'\n\nimport { IObjects } from '../types'\n\nconst TYSON_ID = 0\nconst HYDRE_ID = 1\nconst BALZAC_ID = 2\nconst GOLGOTH_ID = 3\nconst TYSON_SPEED = 1\nconst HYDRE_SPEED = 2\nconst BALZAC_SPEED = 5\nconst GOLGOTH_SPEED = 10\nconst SPEEDS = [TYSON_SPEED, HYDRE_SPEED, BALZAC_SPEED, GOLGOTH_SPEED]\n\ninterface IGameStep {\n    sides: [number, number, number, number]\n    timeUsed: number\n}\n\nconst AVAILABLE_TIME = 17\nconst MS_TO_SEC = 0.001\nconst ISLANDS_GAP = 5\n\nexport default class GameManager {\n    private animating = false\n    private currentTime = 0\n    private beginTime = 0\n    private endTime = 0\n    private jumpers: [boolean, boolean, boolean, boolean] = [false, false, false, false]\n    private steps: IGameStep[] = []\n\n    constructor() {\n        this.steps.push({\n            sides: [-1, -1, -1, -1],\n            timeUsed: 0\n        })\n    }\n\n    get remainingTime() {\n        let remainingTime = AVAILABLE_TIME\n        for (const step of this.steps) {\n            remainingTime -= step.timeUsed\n        }\n        if (this.animating) {\n            remainingTime -= (this.currentTime - this.beginTime) * MS_TO_SEC\n        }\n        return remainingTime\n    }\n\n    /**\n     * -1 is left\n     *  0 is center\n     * +1 is right\n     */\n    get alpha() {\n        const TWO = 2\n        const { currentTime, beginTime, endTime } = this\n        const alphaTime = Calc.clamp(\n            (currentTime - beginTime) / (endTime - beginTime), 0, 1\n        )\n        if ((this.steps.length & 1) === 1) {\n            // From left.\n            if (this.animating) {\n                return TWO * alphaTime - 1\n            }\n            return -1\n        }\n        // From right.\n        if (this.animating) {\n            return 1 - TWO * alphaTime\n        }\n        return +1\n    }\n\n    play(time: number, objects: IObjects, camera: PerspectiveCamera) {\n        this.currentTime = time\n        locateIslands(time, objects)\n        locateUmbrella(time, objects, this.alpha)\n        this.locateHeroes(time, objects)\n\n        camera.orbit(\n            0, 3, 0,\n            20, Calc.deg2rad(30), Calc.deg2rad(50 * Math.cos(time * 0.00023))\n        )\n    }\n\n    private locateHeroes(time: number, objects: IObjects) {\n        this.locateTyson(time, objects)\n        this.locateHydre(time, objects)\n        this.locateBalzac(time, objects)\n        this.locateGolgoth(time, objects)\n    }\n\n    private locateTyson(time: number, objects: IObjects) {\n        const tyson = objects.tyson.transfo\n        tyson.x = this.alpha * ISLANDS_GAP\n        tyson.y = getIslandsInfluence(this.alpha, objects)\n        tyson.z = 1\n    }\n\n    private locateHydre(time: number, objects: IObjects) {\n        const hydre = objects.hydre.transfo\n        hydre.x = this.alpha * (ISLANDS_GAP + 2)\n        hydre.y = getIslandsInfluence(this.alpha, objects) + 0.9\n        hydre.z = 1\n    }\n\n    private locateBalzac(time: number, objects: IObjects) {\n        const balzac = objects.balzac.transfo\n        balzac.x = this.alpha * (ISLANDS_GAP + 2)\n        balzac.y = getIslandsInfluence(this.alpha, objects)\n        balzac.z = -1\n    }\n\n    private locateGolgoth(time: number, objects: IObjects) {\n        const golgoth = objects.golgoth.transfo\n        golgoth.x = this.alpha * ISLANDS_GAP\n        golgoth.y = getIslandsInfluence(this.alpha, objects)\n        golgoth.z = -1\n    }\n}\n\n\nfunction locateUmbrella(time: number, objects: IObjects, alpha: number) {\n    const t = objects.umbrella.transfo\n    t.y = 6.5 + Math.cos(time * 0.000457) * 0.3\n        + getIslandsInfluence(alpha, objects)\n    t.x = ISLANDS_GAP * alpha\n    t.lng = time * 0.09\n}\n\nfunction locateIslands(time: number, objects: IObjects) {\n    objects.volcano.transfo.x = -ISLANDS_GAP - 5\n    objects.molino.transfo.x = +ISLANDS_GAP + 11\n\n    objects.volcano.transfo.y = Math.cos(time * 0.001878)\n    objects.molino.transfo.y = Math.cos(time * 0.001001)\n    objects.stone.transfo.y = Math.sin(time * 0.000874) * 0.5\n}\n\nfunction getIslandsInfluence(alpha: number, objects: IObjects) {\n    if (alpha < 0) {\n        const a = -alpha\n        const b = 1 - a\n        return objects.volcano.transfo.y * a\n            + objects.stone.transfo.y * b\n    }\n    const aa = alpha\n    const bb = 1 - aa\n    return objects.molino.transfo.y * aa\n        + objects.stone.transfo.y * bb\n}\n","// tslint:disable:no-magic-numbers\nimport Tfw from 'tfw'\nimport React from \"react\"\nimport Intro from './view/intro'\nimport Game from './view/game'\nimport Controls from './view/controls'\nimport GameManager from './manager/game'\n\nimport \"./App.css\"\n\nTfw.Font.loadJosefin()\nTfw.Font.loadMysteryQuest()\n\ninterface IAppProps {\n    className?: string\n}\n\ninterface IAppState {\n    intro: boolean\n}\n\nexport default class App extends React.Component<IAppProps, IAppState> {\n    private gameManager = new GameManager()\n\n    state = { intro: true }\n\n    private handleStart = () => {\n        this.setState({ intro: false })\n    }\n\n    render() {\n        const { intro } = this.state\n        const classes = ['App', 'thm-bg0']\n        if (this.props.className) classes.push(this.props.className)\n\n        return (<div className={classes.join(' ')}>\n            {\n                intro &&\n                <Intro\n                    onLoad={removeSplash}\n                    onDone={this.handleStart}\n                />\n            }\n            {\n                !intro &&\n                <Game gameManager={this.gameManager} />\n            }\n            {\n                !intro &&\n                <Controls gameManager={this.gameManager} />\n            }\n        </div>)\n    }\n}\n\n\nfunction removeSplash() {\n    const splash = document.getElementById(\"splash\")\n    if (!splash) return\n    splash.classList.add(\"hide\")\n    window.setTimeout(\n        () => {\n            const parent = splash.parentNode\n            if (!parent) return\n            parent.removeChild(splash)\n        },\n        1000\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import Tfw from 'tfw'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nTfw.Theme.register(\n    \"default\", {\n        bg0: \"#222\",\n        bg3: \"#555\"\n    }\n)\nTfw.Theme.apply(\"default\")\nTfw.Font.loadJosefin()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}